{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/chart.js/Chart.js",
    "node_modules/jquery-ui/ui/data.js",
    "node_modules/jquery-ui/ui/disable-selection.js",
    "node_modules/jquery-ui/ui/focusable.js",
    "node_modules/jquery-ui/ui/ie.js",
    "node_modules/jquery-ui/ui/keycode.js",
    "node_modules/jquery-ui/ui/plugin.js",
    "node_modules/jquery-ui/ui/position.js",
    "node_modules/jquery-ui/ui/safe-active-element.js",
    "node_modules/jquery-ui/ui/safe-blur.js",
    "node_modules/jquery-ui/ui/scroll-parent.js",
    "node_modules/jquery-ui/ui/tabbable.js",
    "node_modules/jquery-ui/ui/unique-id.js",
    "node_modules/jquery-ui/ui/version.js",
    "node_modules/jquery-ui/ui/widget.js",
    "node_modules/jquery-ui/ui/widgets/autocomplete.js",
    "node_modules/jquery-ui/ui/widgets/button.js",
    "node_modules/jquery-ui/ui/widgets/dialog.js",
    "node_modules/jquery-ui/ui/widgets/draggable.js",
    "node_modules/jquery-ui/ui/widgets/menu.js",
    "node_modules/jquery-ui/ui/widgets/mouse.js",
    "node_modules/jquery-ui/ui/widgets/resizable.js",
    "node_modules/jquery-ui/ui/widgets/spinner.js",
    "node_modules/rollbar-browser/dist/rollbar.umd.nojson.min.js",
    "src/js/app/BuildExplorerViewModel.js",
    "src/js/app/CloneViewModel.js",
    "src/js/app/DamageAmpViewModel.js",
    "src/js/app/HeroCalculatorViewModel.js",
    "src/js/app/HeroDamageAmpMixin.js",
    "src/js/app/HeroViewModel.js",
    "src/js/app/IllusionViewModel.js",
    "src/js/app/UnitViewModel.js",
    "src/js/app/getParameterByName.js",
    "src/js/app/herocalc_knockout.js",
    "src/js/app/herocalc_tooltips_item.js",
    "src/js/app/jquery-ui.custom.js",
    "src/js/app/polyfill.js",
    "src/js/components/ability-detail.js",
    "src/js/components/shop.js",
    "src/js/herocalc/AbilityModel.js",
    "src/js/herocalc/BuffViewModel.js",
    "src/js/herocalc/buffs/BuffModel.js",
    "src/js/herocalc/buffs/buffOptionsArray.js",
    "src/js/herocalc/buffs/debuffOptionsArray.js",
    "src/js/herocalc/data/HeroCalcData.js",
    "src/js/herocalc/data/main.js",
    "src/js/herocalc/hero/CloneModel.js",
    "src/js/herocalc/hero/DamageTypeColor.js",
    "src/js/herocalc/hero/HeroDamageMixin.js",
    "src/js/herocalc/hero/HeroModel.js",
    "src/js/herocalc/hero/HeroOption.js",
    "src/js/herocalc/hero/IllusionModel.js",
    "src/js/herocalc/hero/TalentController.js",
    "src/js/herocalc/hero/UnitModel.js",
    "src/js/herocalc/hero/UnitOption.js",
    "src/js/herocalc/hero/cooldownTalents.js",
    "src/js/herocalc/hero/diffProperties.js",
    "src/js/herocalc/hero/heroOptionsArray.js",
    "src/js/herocalc/hero/nextLevelExp.js",
    "src/js/herocalc/hero/talentAbilityMap.js",
    "src/js/herocalc/hero/totalExp.js",
    "src/js/herocalc/herocalc_abilitydata.js",
    "src/js/herocalc/herocalc_knockout.js",
    "src/js/herocalc/illusion/IllusionOption.js",
    "src/js/herocalc/illusion/illusionData.js",
    "src/js/herocalc/illusion/illusionOptionsArray.js",
    "src/js/herocalc/inventory/BasicInventoryViewModel.js",
    "src/js/herocalc/inventory/InventoryViewModel.js",
    "src/js/herocalc/inventory/ItemInput.js",
    "src/js/herocalc/inventory/itemBuffOptions.js",
    "src/js/herocalc/inventory/itemDebuffOptions.js",
    "src/js/herocalc/inventory/itemOptionsArray.js",
    "src/js/herocalc/inventory/itemsWithActive.js",
    "src/js/herocalc/inventory/levelItems.js",
    "src/js/herocalc/inventory/stackableItems.js",
    "src/js/herocalc/inventory/validItems.js",
    "src/js/herocalc/lib/knockout.mapping.js",
    "src/js/herocalc/lib/knockout.wrap.js",
    "src/js/herocalc/main.js",
    "src/js/herocalc/util/extend.js",
    "src/js/herocalc/util/findWhere.js",
    "src/js/herocalc/util/getJSON.js",
    "src/js/herocalc/util/isEmpty.js",
    "src/js/herocalc/util/isString.js",
    "src/js/herocalc/util/main.js",
    "src/js/herocalc/util/union.js",
    "src/js/herocalc/util/uniqueId.js",
    "src/js/herocalc/util/uniques.js",
    "src/js/index.js",
    "src/js/lib/Chart.scatter.js",
    "src/js/rollbar.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACflfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1qllujqljrjnZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxnovxxfjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClvvvpmxxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdtp/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfryhNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.1.1\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n\n\n(function(){\n\n\t\"use strict\";\n\n\t//Declare root variable - window in the browser, global on the server\n\tvar root = this,\n\t\tprevious = root.Chart;\n\n\t//Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(context){\n\t\tvar chart = this;\n\t\tthis.canvas = context.canvas;\n\n\t\tthis.ctx = context;\n\n\t\t//Variables global to the chart\n\t\tvar computeDimension = function(element,dimension)\n\t\t{\n\t\t\tif (element['offset'+dimension])\n\t\t\t{\n\t\t\t\treturn element['offset'+dimension];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n\t\t\t}\n\t\t};\n\n\t\tvar width = this.width = computeDimension(context.canvas,'Width') || context.canvas.width;\n\t\tvar height = this.height = computeDimension(context.canvas,'Height') || context.canvas.height;\n\n\t\tthis.aspectRatio = this.width / this.height;\n\t\t//High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\t\thelpers.retinaScale(this);\n\n\t\treturn this;\n\t};\n\t//Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\t// Boolean - Whether to animate the chart\n\t\t\tanimation: true,\n\n\t\t\t// Number - Number of animation steps\n\t\t\tanimationSteps: 60,\n\n\t\t\t// String - Animation easing effect\n\t\t\tanimationEasing: \"easeOutQuart\",\n\n\t\t\t// Boolean - If we should show the scale at all\n\t\t\tshowScale: true,\n\n\t\t\t// Boolean - If we want to override with a hard coded scale\n\t\t\tscaleOverride: false,\n\n\t\t\t// ** Required if scaleOverride is true **\n\t\t\t// Number - The number of steps in a hard coded scale\n\t\t\tscaleSteps: null,\n\t\t\t// Number - The value jump in the hard coded scale\n\t\t\tscaleStepWidth: null,\n\t\t\t// Number - The scale starting value\n\t\t\tscaleStartValue: null,\n\n\t\t\t// String - Colour of the scale line\n\t\t\tscaleLineColor: \"rgba(0,0,0,.1)\",\n\n\t\t\t// Number - Pixel width of the scale line\n\t\t\tscaleLineWidth: 1,\n\n\t\t\t// Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels: true,\n\n\t\t\t// Interpolated JS string - can access value\n\t\t\tscaleLabel: \"<%=value%>\",\n\n\t\t\t// Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n\t\t\tscaleIntegersOnly: true,\n\n\t\t\t// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\t\tscaleBeginAtZero: false,\n\n\t\t\t// String - Scale label font declaration for the scale label\n\t\t\tscaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Scale label font size in pixels\n\t\t\tscaleFontSize: 12,\n\n\t\t\t// String - Scale label font weight style\n\t\t\tscaleFontStyle: \"normal\",\n\n\t\t\t// String - Scale label font colour\n\t\t\tscaleFontColor: \"#666\",\n\n\t\t\t// Boolean - whether or not the chart should be responsive and resize when the browser does.\n\t\t\tresponsive: false,\n\n\t\t\t// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n\t\t\tmaintainAspectRatio: true,\n\n\t\t\t// Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n\t\t\tshowTooltips: true,\n\n\t\t\t// Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n\t\t\tcustomTooltips: false,\n\n\t\t\t// Array - Array of string names to attach tooltip events\n\t\t\ttooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n\n\t\t\t// String - Tooltip background colour\n\t\t\ttooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n\t\t\t// String - Tooltip label font declaration for the scale label\n\t\t\ttooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip label font size in pixels\n\t\t\ttooltipFontSize: 14,\n\n\t\t\t// String - Tooltip font weight style\n\t\t\ttooltipFontStyle: \"normal\",\n\n\t\t\t// String - Tooltip label font colour\n\t\t\ttooltipFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title font declaration for the scale label\n\t\t\ttooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip title font size in pixels\n\t\t\ttooltipTitleFontSize: 14,\n\n\t\t\t// String - Tooltip title font weight style\n\t\t\ttooltipTitleFontStyle: \"bold\",\n\n\t\t\t// String - Tooltip title font colour\n\t\t\ttooltipTitleFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title template\n\t\t\ttooltipTitleTemplate: \"<%= label%>\",\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipYPadding: 6,\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipXPadding: 6,\n\n\t\t\t// Number - Size of the caret on the tooltip\n\t\t\ttooltipCaretSize: 8,\n\n\t\t\t// Number - Pixel radius of the tooltip border\n\t\t\ttooltipCornerRadius: 6,\n\n\t\t\t// Number - Pixel offset from point x to tooltip edge\n\t\t\ttooltipXOffset: 10,\n\n\t\t\t// String - Template string for single tooltips\n\t\t\ttooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n\n\t\t\t// String - Template string for single tooltips\n\t\t\tmultiTooltipTemplate: \"<%= datasetLabel %>: <%= value %>\",\n\n\t\t\t// String - Colour behind the legend colour block\n\t\t\tmultiTooltipKeyBackground: '#fff',\n\n\t\t\t// Array - A list of colors to use as the defaults\n\t\t\tsegmentColorDefault: [\"#A6CEE3\", \"#1F78B4\", \"#B2DF8A\", \"#33A02C\", \"#FB9A99\", \"#E31A1C\", \"#FDBF6F\", \"#FF7F00\", \"#CAB2D6\", \"#6A3D9A\", \"#B4B482\", \"#B15928\" ],\n\n\t\t\t// Array - A list of highlight colors to use as the defaults\n\t\t\tsegmentHighlightColorDefaults: [ \"#CEF6FF\", \"#47A0DC\", \"#DAFFB2\", \"#5BC854\", \"#FFC2C1\", \"#FF4244\", \"#FFE797\", \"#FFA728\", \"#F2DAFE\", \"#9265C2\", \"#DCDCAA\", \"#D98150\" ],\n\n\t\t\t// Function - Will fire on animation progression.\n\t\t\tonAnimationProgress: function(){},\n\n\t\t\t// Function - Will fire on animation completion.\n\t\t\tonAnimationComplete: function(){}\n\n\t\t}\n\t};\n\n\t//Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t//Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t\t//-- Basic js utility methods\n\tvar each = helpers.each = function(loopable,callback,self){\n\t\t\tvar additionalArgs = Array.prototype.slice.call(arguments, 3);\n\t\t\t// Check to see if null or undefined firstly.\n\t\t\tif (loopable){\n\t\t\t\tif (loopable.length === +loopable.length){\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i=0; i<loopable.length; i++){\n\t\t\t\t\t\tcallback.apply(self,[loopable[i], i].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor (var item in loopable){\n\t\t\t\t\t\tcallback.apply(self,[loopable[item],item].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tclone = helpers.clone = function(obj){\n\t\t\tvar objClone = {};\n\t\t\teach(obj,function(value,key){\n\t\t\t\tif (obj.hasOwnProperty(key)){\n\t\t\t\t\tobjClone[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn objClone;\n\t\t},\n\t\textend = helpers.extend = function(base){\n\t\t\teach(Array.prototype.slice.call(arguments,1), function(extensionObject) {\n\t\t\t\teach(extensionObject,function(value,key){\n\t\t\t\t\tif (extensionObject.hasOwnProperty(key)){\n\t\t\t\t\t\tbase[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn base;\n\t\t},\n\t\tmerge = helpers.merge = function(base,master){\n\t\t\t//Merge properties in left object over to a shallow clone of object right.\n\t\t\tvar args = Array.prototype.slice.call(arguments,0);\n\t\t\targs.unshift({});\n\t\t\treturn extend.apply(null, args);\n\t\t},\n\t\tindexOf = helpers.indexOf = function(arrayToSearch, item){\n\t\t\tif (Array.prototype.indexOf) {\n\t\t\t\treturn arrayToSearch.indexOf(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\n\t\t\t\t\tif (arrayToSearch[i] === item) return i;\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t},\n\t\twhere = helpers.where = function(collection, filterCallback){\n\t\t\tvar filtered = [];\n\n\t\t\thelpers.each(collection, function(item){\n\t\t\t\tif (filterCallback(item)){\n\t\t\t\t\tfiltered.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn filtered;\n\t\t},\n\t\tfindNextWhere = helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to start of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = -1;\n\t\t\t}\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfindPreviousWhere = helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to end of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = arrayToSearch.length;\n\t\t\t}\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinherits = helpers.inherits = function(extensions){\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\n\t\t\tvar parent = this;\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function(){ return parent.apply(this, arguments); };\n\n\t\t\tvar Surrogate = function(){ this.constructor = ChartElement;};\n\t\t\tSurrogate.prototype = parent.prototype;\n\t\t\tChartElement.prototype = new Surrogate();\n\n\t\t\tChartElement.extend = inherits;\n\n\t\t\tif (extensions) extend(ChartElement.prototype, extensions);\n\n\t\t\tChartElement.__super__ = parent.prototype;\n\n\t\t\treturn ChartElement;\n\t\t},\n\t\tnoop = helpers.noop = function(){},\n\t\tuid = helpers.uid = (function(){\n\t\t\tvar id=0;\n\t\t\treturn function(){\n\t\t\t\treturn \"chart-\" + id++;\n\t\t\t};\n\t\t})(),\n\t\twarn = helpers.warn = function(str){\n\t\t\t//Method for warning of errors\n\t\t\tif (window.console && typeof window.console.warn === \"function\") console.warn(str);\n\t\t},\n\t\tamd = helpers.amd = (typeof define === 'function' && define.amd),\n\t\t//-- Math methods\n\t\tisNumber = helpers.isNumber = function(n){\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\t\tmax = helpers.max = function(array){\n\t\t\treturn Math.max.apply( Math, array );\n\t\t},\n\t\tmin = helpers.min = function(array){\n\t\t\treturn Math.min.apply( Math, array );\n\t\t},\n\t\tcap = helpers.cap = function(valueToCap,maxValue,minValue){\n\t\t\tif(isNumber(maxValue)) {\n\t\t\t\tif( valueToCap > maxValue ) {\n\t\t\t\t\treturn maxValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(isNumber(minValue)){\n\t\t\t\tif ( valueToCap < minValue ){\n\t\t\t\t\treturn minValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valueToCap;\n\t\t},\n\t\tgetDecimalPlaces = helpers.getDecimalPlaces = function(num){\n\t\t\tif (num%1!==0 && isNumber(num)){\n\t\t\t\tvar s = num.toString();\n\t\t\t\tif(s.indexOf(\"e-\") < 0){\n\t\t\t\t\t// no exponent, e.g. 0.01\n\t\t\t\t\treturn s.split(\".\")[1].length;\n\t\t\t\t}\n\t\t\t\telse if(s.indexOf(\".\") < 0) {\n\t\t\t\t\t// no decimal point, e.g. 1e-9\n\t\t\t\t\treturn parseInt(s.split(\"e-\")[1]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// exponent and decimal point, e.g. 1.23e-9\n\t\t\t\t\tvar parts = s.split(\".\")[1].split(\"e-\");\n\t\t\t\t\treturn parts[0].length + parseInt(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\ttoRadians = helpers.radians = function(degrees){\n\t\t\treturn degrees * (Math.PI/180);\n\t\t},\n\t\t// Gets the angle from vertical upright to the point about a centre.\n\t\tgetAngleFromPoint = helpers.getAngleFromPoint = function(centrePoint, anglePoint){\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\t\tradialDistanceFromCenter = Math.sqrt( distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\n\t\t\tvar angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\t\t//If the segment is in the top left quadrant, we need to add another rotation to the angle\n\t\t\tif (distanceFromXCenter < 0 && distanceFromYCenter < 0){\n\t\t\t\tangle += Math.PI*2;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tangle: angle,\n\t\t\t\tdistance: radialDistanceFromCenter\n\t\t\t};\n\t\t},\n\t\taliasPixel = helpers.aliasPixel = function(pixelWidth){\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t\t},\n\t\tsplineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\t\t\tvar d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n\t\t\t\td12=Math.sqrt(Math.pow(AfterPoint.x-MiddlePoint.x,2)+Math.pow(AfterPoint.y-MiddlePoint.y,2)),\n\t\t\t\tfa=t*d01/(d01+d12),// scaling factor for triangle Ta\n\t\t\t\tfb=t*d12/(d01+d12);\n\t\t\treturn {\n\t\t\t\tinner : {\n\t\t\t\t\tx : MiddlePoint.x-fa*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y-fa*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t},\n\t\t\t\touter : {\n\t\t\t\t\tx: MiddlePoint.x+fb*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y+fb*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcalculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function(val){\n\t\t\treturn Math.floor(Math.log(val) / Math.LN10);\n\t\t},\n\t\tcalculateScaleRange = helpers.calculateScaleRange = function(valuesArray, drawingSize, textSize, startFromZero, integersOnly){\n\n\t\t\t//Set a minimum step of two - a point at the top of the graph, and a point at the base\n\t\t\tvar minSteps = 2,\n\t\t\t\tmaxSteps = Math.floor(drawingSize/(textSize * 1.5)),\n\t\t\t\tskipFitting = (minSteps >= maxSteps);\n\n\t\t\t// Filter out null values since these would min() to zero\n\t\t\tvar values = [];\n\t\t\teach(valuesArray, function( v ){\n\t\t\t\tv == null || values.push( v );\n\t\t\t});\n\t\t\tvar minValue = min(values),\n\t\t\t    maxValue = max(values);\n\n\t\t\t// We need some degree of separation here to calculate the scales if all the values are the same\n\t\t\t// Adding/minusing 0.5 will give us a range of 1.\n\t\t\tif (maxValue === minValue){\n\t\t\t\tmaxValue += 0.5;\n\t\t\t\t// So we don't end up with a graph with a negative start value if we've said always start from zero\n\t\t\t\tif (minValue >= 0.5 && !startFromZero){\n\t\t\t\t\tminValue -= 0.5;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// Make up a whole number above the values\n\t\t\t\t\tmaxValue += 0.5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar\tvalueRange = Math.abs(maxValue - minValue),\n\t\t\t\trangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n\t\t\t\tgraphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphMin = (startFromZero) ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphRange = graphMax - graphMin,\n\t\t\t\tstepValue = Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tnumberOfSteps = Math.round(graphRange / stepValue);\n\n\t\t\t//If we have more space on the graph we'll use it to give more definition to the data\n\t\t\twhile((numberOfSteps > maxSteps || (numberOfSteps * 2) < maxSteps) && !skipFitting) {\n\t\t\t\tif(numberOfSteps > maxSteps){\n\t\t\t\t\tstepValue *=2;\n\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t// Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n\t\t\t\t\tif (numberOfSteps % 1 !== 0){\n\t\t\t\t\t\tskipFitting = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//We can fit in double the amount of scale points on the scale\n\t\t\t\telse{\n\t\t\t\t\t//If user has declared ints only, and the step value isn't a decimal\n\t\t\t\t\tif (integersOnly && rangeOrderOfMagnitude >= 0){\n\t\t\t\t\t\t//If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n\t\t\t\t\t\tif(stepValue/2 % 1 === 0){\n\t\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//If it would make it a float break out of the loop\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//If the scale doesn't have to be an int, make the scale more granular anyway.\n\t\t\t\t\telse{\n\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skipFitting){\n\t\t\t\tnumberOfSteps = minSteps;\n\t\t\t\tstepValue = graphRange / numberOfSteps;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsteps : numberOfSteps,\n\t\t\t\tstepValue : stepValue,\n\t\t\t\tmin : graphMin,\n\t\t\t\tmax\t: graphMin + (numberOfSteps * stepValue)\n\t\t\t};\n\n\t\t},\n\t\t/* jshint ignore:start */\n\t\t// Blows up jshint errors based on the new Function constructor\n\t\t//Templating methods\n\t\t//Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n\t\ttemplate = helpers.template = function(templateString, valuesObject){\n\n\t\t\t// If templateString is function rather than string-template - call the function for valuesObject\n\n\t\t\tif(templateString instanceof Function){\n\t\t\t \treturn templateString(valuesObject);\n\t\t \t}\n\n\t\t\tvar cache = {};\n\t\t\tfunction tmpl(str, data){\n\t\t\t\t// Figure out if we're getting a template, or if we need to\n\t\t\t\t// load the template - and be sure to cache the result.\n\t\t\t\tvar fn = !/\\W/.test(str) ?\n\t\t\t\tcache[str] = cache[str] :\n\n\t\t\t\t// Generate a reusable function that will serve as a template\n\t\t\t\t// generator (and which will be cached).\n\t\t\t\tnew Function(\"obj\",\n\t\t\t\t\t\"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n\t\t\t\t\t// Introduce the data as local variables using with(){}\n\t\t\t\t\t\"with(obj){p.push('\" +\n\n\t\t\t\t\t// Convert the template into pure JavaScript\n\t\t\t\t\tstr\n\t\t\t\t\t\t.replace(/[\\r\\t\\n]/g, \" \")\n\t\t\t\t\t\t.split(\"<%\").join(\"\\t\")\n\t\t\t\t\t\t.replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n\t\t\t\t\t\t.replace(/\\t=(.*?)%>/g, \"',$1,'\")\n\t\t\t\t\t\t.split(\"\\t\").join(\"');\")\n\t\t\t\t\t\t.split(\"%>\").join(\"p.push('\")\n\t\t\t\t\t\t.split(\"\\r\").join(\"\\\\'\") +\n\t\t\t\t\t\"');}return p.join('');\"\n\t\t\t\t);\n\n\t\t\t\t// Provide some basic currying to the user\n\t\t\t\treturn data ? fn( data ) : fn;\n\t\t\t}\n\t\t\treturn tmpl(templateString,valuesObject);\n\t\t},\n\t\t/* jshint ignore:end */\n\t\tgenerateLabels = helpers.generateLabels = function(templateString,numberOfSteps,graphMin,stepValue){\n\t\t\tvar labelsArray = new Array(numberOfSteps);\n\t\t\tif (templateString){\n\t\t\t\teach(labelsArray,function(val,index){\n\t\t\t\t\tlabelsArray[index] = template(templateString,{value: (graphMin + (stepValue*(index+1)))});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn labelsArray;\n\t\t},\n\t\t//--Animation methods\n\t\t//Easing functions adapted from Robert Penner's easing equations\n\t\t//http://www.robertpenner.com/easing/\n\t\teasingEffects = helpers.easingEffects = {\n\t\t\tlinear: function (t) {\n\t\t\t\treturn t;\n\t\t\t},\n\t\t\teaseInQuad: function (t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\t\t\teaseOutQuad: function (t) {\n\t\t\t\treturn -1 * t * (t - 2);\n\t\t\t},\n\t\t\teaseInOutQuad: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t;\n\t\t\t\t}\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t\t},\n\t\t\teaseInCubic: function (t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\t\t\teaseOutCubic: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutCubic: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t\t},\n\t\t\teaseInQuart: function (t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuart: function (t) {\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t\t},\n\t\t\teaseInOutQuart: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t\t},\n\t\t\teaseInQuint: function (t) {\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuint: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutQuint: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t\t},\n\t\t\teaseInSine: function (t) {\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t\t},\n\t\t\teaseOutSine: function (t) {\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t\t},\n\t\t\teaseInOutSine: function (t) {\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t\t},\n\t\t\teaseInExpo: function (t) {\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t\t},\n\t\t\teaseOutExpo: function (t) {\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t\t},\n\t\t\teaseInOutExpo: function (t) {\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (t === 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t\t},\n\t\t\teaseInCirc: function (t) {\n\t\t\t\tif (t >= 1){\n\t\t\t\t\treturn t;\n\t\t\t\t}\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t\t},\n\t\t\teaseOutCirc: function (t) {\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t\t},\n\t\t\teaseInOutCirc: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t\t},\n\t\t\teaseInElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1) == 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * 0.3;\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else{\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t},\n\t\t\teaseOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1) == 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * 0.3;\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else{\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t\t},\n\t\t\teaseInOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1 / 2) == 2){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * (0.3 * 1.5);\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1){\n\t\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));}\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t},\n\t\t\teaseInBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t},\n\t\t\teaseOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t\t},\n\t\t\teaseInOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t\t},\n\t\t\teaseInBounce: function (t) {\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t\t},\n\t\t\teaseOutBounce: function (t) {\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t\t} else {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t\t\t}\n\t\t\t},\n\t\t\teaseInOutBounce: function (t) {\n\t\t\t\tif (t < 1 / 2){\n\t\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t\t}\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t\t}\n\t\t},\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t\trequestAnimFrame = helpers.requestAnimFrame = (function(){\n\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tcancelAnimFrame = helpers.cancelAnimFrame = (function(){\n\t\t\treturn window.cancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.oCancelAnimationFrame ||\n\t\t\t\twindow.msCancelAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tanimationLoop = helpers.animationLoop = function(callback,totalSteps,easingString,onProgress,onComplete,chartInstance){\n\n\t\t\tvar currentStep = 0,\n\t\t\t\teasingFunction = easingEffects[easingString] || easingEffects.linear;\n\n\t\t\tvar animationFrame = function(){\n\t\t\t\tcurrentStep++;\n\t\t\t\tvar stepDecimal = currentStep/totalSteps;\n\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\tcallback.call(chartInstance,easeDecimal,stepDecimal, currentStep);\n\t\t\t\tonProgress.call(chartInstance,easeDecimal,stepDecimal);\n\t\t\t\tif (currentStep < totalSteps){\n\t\t\t\t\tchartInstance.animationFrame = requestAnimFrame(animationFrame);\n\t\t\t\t} else{\n\t\t\t\t\tonComplete.apply(chartInstance);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequestAnimFrame(animationFrame);\n\t\t},\n\t\t//-- DOM methods\n\t\tgetRelativePosition = helpers.getRelativePosition = function(evt){\n\t\t\tvar mouseX, mouseY;\n\t\t\tvar e = evt.originalEvent || evt,\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\t\tif (e.touches){\n\t\t\t\tmouseX = e.touches[0].clientX - boundingRect.left;\n\t\t\t\tmouseY = e.touches[0].clientY - boundingRect.top;\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmouseX = e.clientX - boundingRect.left;\n\t\t\t\tmouseY = e.clientY - boundingRect.top;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx : mouseX,\n\t\t\t\ty : mouseY\n\t\t\t};\n\n\t\t},\n\t\taddEvent = helpers.addEvent = function(node,eventType,method){\n\t\t\tif (node.addEventListener){\n\t\t\t\tnode.addEventListener(eventType,method);\n\t\t\t} else if (node.attachEvent){\n\t\t\t\tnode.attachEvent(\"on\"+eventType, method);\n\t\t\t} else {\n\t\t\t\tnode[\"on\"+eventType] = method;\n\t\t\t}\n\t\t},\n\t\tremoveEvent = helpers.removeEvent = function(node, eventType, handler){\n\t\t\tif (node.removeEventListener){\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t\t} else if (node.detachEvent){\n\t\t\t\tnode.detachEvent(\"on\"+eventType,handler);\n\t\t\t} else{\n\t\t\t\tnode[\"on\" + eventType] = noop;\n\t\t\t}\n\t\t},\n\t\tbindEvents = helpers.bindEvents = function(chartInstance, arrayOfEvents, handler){\n\t\t\t// Create the events object if it's not already present\n\t\t\tif (!chartInstance.events) chartInstance.events = {};\n\n\t\t\teach(arrayOfEvents,function(eventName){\n\t\t\t\tchartInstance.events[eventName] = function(){\n\t\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t\t};\n\t\t\t\taddEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);\n\t\t\t});\n\t\t},\n\t\tunbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n\t\t\teach(arrayOfEvents, function(handler,eventName){\n\t\t\t\tremoveEvent(chartInstance.chart.canvas, eventName, handler);\n\t\t\t});\n\t\t},\n\t\tgetMaximumWidth = helpers.getMaximumWidth = function(domNode){\n\t\t\tvar container = domNode.parentNode,\n\t\t\t    padding = parseInt(getStyle(container, 'padding-left')) + parseInt(getStyle(container, 'padding-right'));\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container ? container.clientWidth - padding : 0;\n\t\t},\n\t\tgetMaximumHeight = helpers.getMaximumHeight = function(domNode){\n\t\t\tvar container = domNode.parentNode,\n\t\t\t    padding = parseInt(getStyle(container, 'padding-bottom')) + parseInt(getStyle(container, 'padding-top'));\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container ? container.clientHeight - padding : 0;\n\t\t},\n\t\tgetStyle = helpers.getStyle = function (el, property) {\n\t\t\treturn el.currentStyle ?\n\t\t\t\tel.currentStyle[property] :\n\t\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t\t},\n\t\tgetMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth, // legacy support\n\t\tretinaScale = helpers.retinaScale = function(chart){\n\t\t\tvar ctx = chart.ctx,\n\t\t\t\twidth = chart.canvas.width,\n\t\t\t\theight = chart.canvas.height;\n\n\t\t\tif (window.devicePixelRatio) {\n\t\t\t\tctx.canvas.style.width = width + \"px\";\n\t\t\t\tctx.canvas.style.height = height + \"px\";\n\t\t\t\tctx.canvas.height = height * window.devicePixelRatio;\n\t\t\t\tctx.canvas.width = width * window.devicePixelRatio;\n\t\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t\t}\n\t\t},\n\t\t//-- Canvas methods\n\t\tclear = helpers.clear = function(chart){\n\t\t\tchart.ctx.clearRect(0,0,chart.width,chart.height);\n\t\t},\n\t\tfontString = helpers.fontString = function(pixelSize,fontStyle,fontFamily){\n\t\t\treturn fontStyle + \" \" + pixelSize+\"px \" + fontFamily;\n\t\t},\n\t\tlongestText = helpers.longestText = function(ctx,font,arrayOfStrings){\n\t\t\tctx.font = font;\n\t\t\tvar longest = 0;\n\t\t\teach(arrayOfStrings,function(string){\n\t\t\t\tvar textWidth = ctx.measureText(string).width;\n\t\t\t\tlongest = (textWidth > longest) ? textWidth : longest;\n\t\t\t});\n\t\t\treturn longest;\n\t\t},\n\t\tdrawRoundedRectangle = helpers.drawRoundedRectangle = function(ctx,x,y,width,height,radius){\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\t\t};\n\n\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\tChart.Type = function(data,options,chart){\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t\tthis.id = uid();\n\t\t//Add the chart instance to the global namespace\n\t\tChart.instances[this.id] = this;\n\n\t\t// Initialize is always called when a chart type is created\n\t\t// By default it is a no op, but it should be extended\n\t\tif (options.responsive){\n\t\t\tthis.resize();\n\t\t}\n\t\tthis.initialize.call(this,data);\n\t};\n\n\t//Core methods that'll be a part of every chart type\n\textend(Chart.Type.prototype,{\n\t\tinitialize : function(){return this;},\n\t\tclear : function(){\n\t\t\tclear(this.chart);\n\t\t\treturn this;\n\t\t},\n\t\tstop : function(){\n\t\t\t// Stops any current animation loop occuring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\t\tresize : function(callback){\n\t\t\tthis.stop();\n\t\t\tvar canvas = this.chart.canvas,\n\t\t\t\tnewWidth = getMaximumWidth(this.chart.canvas),\n\t\t\t\tnewHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n\n\t\t\tcanvas.width = this.chart.width = newWidth;\n\t\t\tcanvas.height = this.chart.height = newHeight;\n\n\t\t\tretinaScale(this.chart);\n\n\t\t\tif (typeof callback === \"function\"){\n\t\t\t\tcallback.apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\treflow : noop,\n\t\trender : function(reflow){\n\t\t\tif (reflow){\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t\t\n\t\t\tif (this.options.animation && !reflow){\n\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\tanimation.numSteps = this.options.animationSteps;\n\t\t\t\tanimation.easing = this.options.animationEasing;\n\t\t\t\t\n\t\t\t\t// render function\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\t\t\t\t\t\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// user events\n\t\t\t\tanimation.onAnimationProgress = this.options.onAnimationProgress;\n\t\t\t\tanimation.onAnimationComplete = this.options.onAnimationComplete;\n\t\t\t\t\n\t\t\t\tChart.animationService.addAnimation(this, animation);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.draw();\n\t\t\t\tthis.options.onAnimationComplete.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tgenerateLegend : function(){\n\t\t\treturn helpers.template(this.options.legendTemplate, this);\n\t\t},\n\t\tdestroy : function(){\n\t\t\tthis.stop();\n\t\t\tthis.clear();\n\t\t\tunbindEvents(this, this.events);\n\t\t\tvar canvas = this.chart.canvas;\n\n\t\t\t// Reset canvas height/width attributes starts a fresh with the canvas context\n\t\t\tcanvas.width = this.chart.width;\n\t\t\tcanvas.height = this.chart.height;\n\n\t\t\t// < IE9 doesn't support removeProperty\n\t\t\tif (canvas.style.removeProperty) {\n\t\t\t\tcanvas.style.removeProperty('width');\n\t\t\t\tcanvas.style.removeProperty('height');\n\t\t\t} else {\n\t\t\t\tcanvas.style.removeAttribute('width');\n\t\t\t\tcanvas.style.removeAttribute('height');\n\t\t\t}\n\n\t\t\tdelete Chart.instances[this.id];\n\t\t},\n\t\tshowTooltip : function(ChartElements, forceRedraw){\n\t\t\t// Only redraw the chart if we've actually changed what we're hovering on.\n\t\t\tif (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n\t\t\tvar isChanged = (function(Elements){\n\t\t\t\tvar changed = false;\n\n\t\t\t\tif (Elements.length !== this.activeElements.length){\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\n\t\t\t\teach(Elements, function(element, index){\n\t\t\t\t\tif (element !== this.activeElements[index]){\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\treturn changed;\n\t\t\t}).call(this, ChartElements);\n\n\t\t\tif (!isChanged && !forceRedraw){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.activeElements = ChartElements;\n\t\t\t}\n\t\t\tthis.draw();\n\t\t\tif(this.options.customTooltips){\n\t\t\t\tthis.options.customTooltips(false);\n\t\t\t}\n\t\t\tif (ChartElements.length > 0){\n\t\t\t\t// If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n\t\t\t\tif (this.datasets && this.datasets.length > 1) {\n\t\t\t\t\tvar dataArray,\n\t\t\t\t\t\tdataIndex;\n\n\t\t\t\t\tfor (var i = this.datasets.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tdataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n\t\t\t\t\t\tdataIndex = indexOf(dataArray, ChartElements[0]);\n\t\t\t\t\t\tif (dataIndex !== -1){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar tooltipLabels = [],\n\t\t\t\t\t\ttooltipColors = [],\n\t\t\t\t\t\tmedianPosition = (function(index) {\n\n\t\t\t\t\t\t\t// Get all the points at that particular index\n\t\t\t\t\t\t\tvar Elements = [],\n\t\t\t\t\t\t\t\tdataCollection,\n\t\t\t\t\t\t\t\txPositions = [],\n\t\t\t\t\t\t\t\tyPositions = [],\n\t\t\t\t\t\t\t\txMax,\n\t\t\t\t\t\t\t\tyMax,\n\t\t\t\t\t\t\t\txMin,\n\t\t\t\t\t\t\t\tyMin;\n\t\t\t\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\t\t\t\tdataCollection = dataset.points || dataset.bars || dataset.segments;\n\t\t\t\t\t\t\t\tif (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()){\n\t\t\t\t\t\t\t\t\tElements.push(dataCollection[dataIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\thelpers.each(Elements, function(element) {\n\t\t\t\t\t\t\t\txPositions.push(element.x);\n\t\t\t\t\t\t\t\tyPositions.push(element.y);\n\n\n\t\t\t\t\t\t\t\t//Include any colour information about the element\n\t\t\t\t\t\t\t\ttooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n\t\t\t\t\t\t\t\ttooltipColors.push({\n\t\t\t\t\t\t\t\t\tfill: element._saved.fillColor || element.fillColor,\n\t\t\t\t\t\t\t\t\tstroke: element._saved.strokeColor || element.strokeColor\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\tyMin = min(yPositions);\n\t\t\t\t\t\t\tyMax = max(yPositions);\n\n\t\t\t\t\t\t\txMin = min(xPositions);\n\t\t\t\t\t\t\txMax = max(xPositions);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (xMin > this.chart.width/2) ? xMin : xMax,\n\t\t\t\t\t\t\t\ty: (yMin + yMax)/2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}).call(this, dataIndex);\n\n\t\t\t\t\tnew Chart.MultiTooltip({\n\t\t\t\t\t\tx: medianPosition.x,\n\t\t\t\t\t\ty: medianPosition.y,\n\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\txOffset: this.options.tooltipXOffset,\n\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\ttitleTextColor: this.options.tooltipTitleFontColor,\n\t\t\t\t\t\ttitleFontFamily: this.options.tooltipTitleFontFamily,\n\t\t\t\t\t\ttitleFontStyle: this.options.tooltipTitleFontStyle,\n\t\t\t\t\t\ttitleFontSize: this.options.tooltipTitleFontSize,\n\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\tlabels: tooltipLabels,\n\t\t\t\t\t\tlegendColors: tooltipColors,\n\t\t\t\t\t\tlegendColorBackground : this.options.multiTooltipKeyBackground,\n\t\t\t\t\t\ttitle: template(this.options.tooltipTitleTemplate,ChartElements[0]),\n\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\tctx: this.chart.ctx,\n\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t}).draw();\n\n\t\t\t\t} else {\n\t\t\t\t\teach(ChartElements, function(Element) {\n\t\t\t\t\t\tvar tooltipPosition = Element.tooltipPosition();\n\t\t\t\t\t\tnew Chart.Tooltip({\n\t\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\n\t\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\n\t\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\t\tcaretHeight: this.options.tooltipCaretSize,\n\t\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\t\ttext: template(this.options.tooltipTemplate, Element),\n\t\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t\t}).draw();\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\ttoBase64Image : function(){\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t}\n\t});\n\n\tChart.Type.extend = function(extensions){\n\n\t\tvar parent = this;\n\n\t\tvar ChartType = function(){\n\t\t\treturn parent.apply(this,arguments);\n\t\t};\n\n\t\t//Copy the prototype object of the this class\n\t\tChartType.prototype = clone(parent.prototype);\n\t\t//Now overwrite some of the properties in the base class with the new extensions\n\t\textend(ChartType.prototype, extensions);\n\n\t\tChartType.extend = Chart.Type.extend;\n\n\t\tif (extensions.name || parent.prototype.name){\n\n\t\t\tvar chartName = extensions.name || parent.prototype.name;\n\t\t\t//Assign any potential default values of the new chart type\n\n\t\t\t//If none are defined, we'll use a clone of the chart type this is being extended from.\n\t\t\t//I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n\t\t\t//doesn't define some defaults of their own.\n\n\t\t\tvar baseDefaults = (Chart.defaults[parent.prototype.name]) ? clone(Chart.defaults[parent.prototype.name]) : {};\n\n\t\t\tChart.defaults[chartName] = extend(baseDefaults,extensions.defaults);\n\n\t\t\tChart.types[chartName] = ChartType;\n\n\t\t\t//Register this new chart type in the Chart prototype\n\t\t\tChart.prototype[chartName] = function(data,options){\n\t\t\t\tvar config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n\t\t\t\treturn new ChartType(data,config,this);\n\t\t\t};\n\t\t} else{\n\t\t\twarn(\"Name not provided for this chart, so it hasn't been registered\");\n\t\t}\n\t\treturn parent;\n\t};\n\n\tChart.Element = function(configuration){\n\t\textend(this,configuration);\n\t\tthis.initialize.apply(this,arguments);\n\t\tthis.save();\n\t};\n\textend(Chart.Element.prototype,{\n\t\tinitialize : function(){},\n\t\trestore : function(props){\n\t\t\tif (!props){\n\t\t\t\textend(this,this._saved);\n\t\t\t} else {\n\t\t\t\teach(props,function(key){\n\t\t\t\t\tthis[key] = this._saved[key];\n\t\t\t\t},this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tsave : function(){\n\t\t\tthis._saved = clone(this);\n\t\t\tdelete this._saved._saved;\n\t\t\treturn this;\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\teach(newProps,function(value,key){\n\t\t\t\tthis._saved[key] = this[key];\n\t\t\t\tthis[key] = value;\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttransition : function(props,ease){\n\t\t\teach(props,function(value,key){\n\t\t\t\tthis[key] = ((value - this._saved[key]) * ease) + this._saved[key];\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\treturn {\n\t\t\t\tx : this.x,\n\t\t\t\ty : this.y\n\t\t\t};\n\t\t},\n\t\thasValue: function(){\n\t\t\treturn isNumber(this.value);\n\t\t}\n\t});\n\n\tChart.Element.extend = inherits;\n\n\n\tChart.Point = Chart.Element.extend({\n\t\tdisplay: true,\n\t\tinRange: function(chartX,chartY){\n\t\t\tvar hitDetectionRange = this.hitDetectionRadius + this.radius;\n\t\t\treturn ((Math.pow(chartX-this.x, 2)+Math.pow(chartY-this.y, 2)) < Math.pow(hitDetectionRange,2));\n\t\t},\n\t\tdraw : function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\n\n\t\t\t//Quick debug for bezier curve splining\n\t\t\t//Highlights control points and the line between them.\n\t\t\t//Handy for dev - stripped in the min version.\n\n\t\t\t// ctx.save();\n\t\t\t// ctx.fillStyle = \"black\";\n\t\t\t// ctx.strokeStyle = \"black\"\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n\t\t\t// ctx.lineTo(this.x, this.y);\n\t\t\t// ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n\t\t\t// ctx.stroke();\n\n\t\t\t// ctx.restore();\n\n\n\n\t\t}\n\t});\n\n\tChart.Arc = Chart.Element.extend({\n\t\tinRange : function(chartX,chartY){\n\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(this, {\n\t\t\t\tx: chartX,\n\t\t\t\ty: chartY\n\t\t\t});\n\n\t\t\t// Normalize all angles to 0 - 2*PI (0 - 360°)\n\t\t\tvar pointRelativeAngle = pointRelativePosition.angle % (Math.PI * 2),\n\t\t\t    startAngle = (Math.PI * 2 + this.startAngle) % (Math.PI * 2),\n\t\t\t    endAngle = (Math.PI * 2 + this.endAngle) % (Math.PI * 2) || 360;\n\n\t\t\t// Calculate wether the pointRelativeAngle is between the start and the end angle\n\t\t\tvar betweenAngles = (endAngle < startAngle) ?\n\t\t\t\tpointRelativeAngle <= endAngle || pointRelativeAngle >= startAngle:\n\t\t\t\tpointRelativeAngle >= startAngle && pointRelativeAngle <= endAngle;\n\n\t\t\t//Check if within the range of the open/close angle\n\t\t\tvar withinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t//Ensure within the outside of the arc centre, but inside arc outer\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\tvar centreAngle = this.startAngle + ((this.endAngle - this.startAngle) / 2),\n\t\t\t\trangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n\t\t\treturn {\n\t\t\t\tx : this.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty : this.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw : function(animationPercent){\n\n\t\t\tvar easingDecimal = animationPercent || 1;\n\n\t\t\tvar ctx = this.ctx;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(this.x, this.y, this.outerRadius < 0 ? 0 : this.outerRadius, this.startAngle, this.endAngle);\n\n            ctx.arc(this.x, this.y, this.innerRadius < 0 ? 0 : this.innerRadius, this.endAngle, this.startAngle, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Rectangle = Chart.Element.extend({\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\thalfWidth = this.width/2,\n\t\t\t\tleftX = this.x - halfWidth,\n\t\t\t\trightX = this.x + halfWidth,\n\t\t\t\ttop = this.base - (this.base - this.y),\n\t\t\t\thalfStroke = this.strokeWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (this.showStroke){\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.fillStyle = this.fillColor;\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t// It'd be nice to keep this class totally generic to any rectangle\n\t\t\t// and simply specify which border to miss out.\n\t\t\tctx.moveTo(leftX, this.base);\n\t\t\tctx.lineTo(leftX, top);\n\t\t\tctx.lineTo(rightX, top);\n\t\t\tctx.lineTo(rightX, this.base);\n\t\t\tctx.fill();\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight : function(){\n\t\t\treturn this.base - this.y;\n\t\t},\n\t\tinRange : function(chartX,chartY){\n\t\t\treturn (chartX >= this.x - this.width/2 && chartX <= this.x + this.width/2) && (chartY >= this.y && chartY <= this.base);\n\t\t}\n\t});\n\n\tChart.Animation = Chart.Element.extend({\n\t\tcurrentStep: null, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: \"\", // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\t\t\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation \n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\t\n\tChart.Tooltip = Chart.Element.extend({\n\t\tdraw : function(){\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.xAlign = \"center\";\n\t\t\tthis.yAlign = \"above\";\n\n\t\t\t//Distance between the actual element.y position and the start of the tooltip caret\n\t\t\tvar caretPadding = this.caretPadding = 2;\n\n\t\t\tvar tooltipWidth = ctx.measureText(this.text).width + 2*this.xPadding,\n\t\t\t\ttooltipRectHeight = this.fontSize + 2*this.yPadding,\n\t\t\t\ttooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n\t\t\tif (this.x + tooltipWidth/2 >this.chart.width){\n\t\t\t\tthis.xAlign = \"left\";\n\t\t\t} else if (this.x - tooltipWidth/2 < 0){\n\t\t\t\tthis.xAlign = \"right\";\n\t\t\t}\n\n\t\t\tif (this.y - tooltipHeight < 0){\n\t\t\t\tthis.yAlign = \"below\";\n\t\t\t}\n\n\n\t\t\tvar tooltipX = this.x - tooltipWidth/2,\n\t\t\t\ttooltipY = this.y - tooltipHeight;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswitch(this.yAlign)\n\t\t\t\t{\n\t\t\t\tcase \"above\":\n\t\t\t\t\t//Draw a caret above the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x,this.y - caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"below\":\n\t\t\t\t\ttooltipY = this.y + caretPadding + this.caretHeight;\n\t\t\t\t\t//Draw a caret below the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x, this.y + caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch(this.xAlign)\n\t\t\t\t{\n\t\t\t\tcase \"left\":\n\t\t\t\t\ttooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\t\ttooltipX = this.x - (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdrawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,this.cornerRadius);\n\n\t\t\t\tctx.fill();\n\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillText(this.text, tooltipX + tooltipWidth/2, tooltipY + tooltipRectHeight/2);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.MultiTooltip = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.titleFont = fontString(this.titleFontSize,this.titleFontStyle,this.titleFontFamily);\n\n\t\t\tthis.titleHeight = this.title ? this.titleFontSize * 1.5 : 0;\n\t\t\tthis.height = (this.labels.length * this.fontSize) + ((this.labels.length-1) * (this.fontSize/2)) + (this.yPadding*2) + this.titleHeight;\n\n\t\t\tthis.ctx.font = this.titleFont;\n\n\t\t\tvar titleWidth = this.ctx.measureText(this.title).width,\n\t\t\t\t//Label has a legend square as well so account for this.\n\t\t\t\tlabelWidth = longestText(this.ctx,this.font,this.labels) + this.fontSize + 3,\n\t\t\t\tlongestTextWidth = max([labelWidth,titleWidth]);\n\n\t\t\tthis.width = longestTextWidth + (this.xPadding*2);\n\n\n\t\t\tvar halfHeight = this.height/2;\n\n\t\t\t//Check to ensure the height will fit on the canvas\n\t\t\tif (this.y - halfHeight < 0 ){\n\t\t\t\tthis.y = halfHeight;\n\t\t\t} else if (this.y + halfHeight > this.chart.height){\n\t\t\t\tthis.y = this.chart.height - halfHeight;\n\t\t\t}\n\n\t\t\t//Decide whether to align left or right based on position on canvas\n\t\t\tif (this.x > this.chart.width/2){\n\t\t\t\tthis.x -= this.xOffset + this.width;\n\t\t\t} else {\n\t\t\t\tthis.x += this.xOffset;\n\t\t\t}\n\n\n\t\t},\n\t\tgetLineHeight : function(index){\n\t\t\tvar baseLineHeight = this.y - (this.height/2) + this.yPadding,\n\t\t\t\tafterTitleIndex = index-1;\n\n\t\t\t//If the index is zero, we're getting the title\n\t\t\tif (index === 0){\n\t\t\t\treturn baseLineHeight + this.titleHeight / 3;\n\t\t\t} else{\n\t\t\t\treturn baseLineHeight + ((this.fontSize * 1.5 * afterTitleIndex) + this.fontSize / 2) + this.titleHeight;\n\t\t\t}\n\n\t\t},\n\t\tdraw : function(){\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdrawRoundedRectangle(this.ctx,this.x,this.y - this.height/2,this.width,this.height,this.cornerRadius);\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.fillStyle = this.fillColor;\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.textAlign = \"left\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillStyle = this.titleTextColor;\n\t\t\t\tctx.font = this.titleFont;\n\n\t\t\t\tctx.fillText(this.title,this.x + this.xPadding, this.getLineHeight(0));\n\n\t\t\t\tctx.font = this.font;\n\t\t\t\thelpers.each(this.labels,function(label,index){\n\t\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\t\tctx.fillText(label,this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n\t\t\t\t\t//A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n\t\t\t\t\t//ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\t\t\t\t\t//Instead we'll make a white filled block to put the legendColour palette over.\n\n\t\t\t\t\tctx.fillStyle = this.legendColorBackground;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\t\t\t\t\tctx.fillStyle = this.legendColors[index].fill;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\n\t\t\t\t},this);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Scale = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.fit();\n\t\t},\n\t\tbuildYLabels : function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t\tthis.yLabelWidth = (this.display && this.showLabels) ? longestText(this.ctx,this.font,this.yLabels) + 10 : 0;\n\t\t},\n\t\taddXLabel : function(label){\n\t\t\tthis.xLabels.push(label);\n\t\t\tthis.valuesCount++;\n\t\t\tthis.fit();\n\t\t},\n\t\tremoveXLabel : function(){\n\t\t\tthis.xLabels.shift();\n\t\t\tthis.valuesCount--;\n\t\t\tthis.fit();\n\t\t},\n\t\t// Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n\t\tfit: function(){\n\t\t\t// First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n\t\t\t// To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n\t\t\tthis.startPoint = (this.display) ? this.fontSize : 0;\n\t\t\tthis.endPoint = (this.display) ? this.height - (this.fontSize * 1.5) - 5 : this.height; // -5 to pad labels\n\n\t\t\t// Apply padding settings to the start and end point.\n\t\t\tthis.startPoint += this.padding;\n\t\t\tthis.endPoint -= this.padding;\n\n\t\t\t// Cache the starting endpoint, excluding the space for x labels\n\t\t\tvar cachedEndPoint = this.endPoint;\n\n\t\t\t// Cache the starting height, so can determine if we need to recalculate the scale yAxis\n\t\t\tvar cachedHeight = this.endPoint - this.startPoint,\n\t\t\t\tcachedYLabelWidth;\n\n\t\t\t// Build the current yLabels so we have an idea of what size they'll be to start\n\t\t\t/*\n\t\t\t *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n\t\t\t *\n\t\t\t\tthis.steps;\n\t\t\t\tthis.stepValue;\n\t\t\t\tthis.min;\n\t\t\t\tthis.max;\n\t\t\t *\n\t\t\t */\n\t\t\tthis.calculateYRange(cachedHeight);\n\n\t\t\t// With these properties set we can now build the array of yLabels\n\t\t\t// and also the width of the largest yLabel\n\t\t\tthis.buildYLabels();\n\n\t\t\tthis.calculateXLabelRotation();\n\n\t\t\twhile((cachedHeight > this.endPoint - this.startPoint)){\n\t\t\t\tcachedHeight = this.endPoint - this.startPoint;\n\t\t\t\tcachedYLabelWidth = this.yLabelWidth;\n\n\t\t\t\tthis.calculateYRange(cachedHeight);\n\t\t\t\tthis.buildYLabels();\n\n\t\t\t\t// Only go through the xLabel loop again if the yLabel width has changed\n\t\t\t\tif (cachedYLabelWidth < this.yLabelWidth){\n\t\t\t\t\tthis.endPoint = cachedEndPoint;\n\t\t\t\t\tthis.calculateXLabelRotation();\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tcalculateXLabelRotation : function(){\n\t\t\t//Get the width of each grid by calculating the difference\n\t\t\t//between x offsets between 0 and 1.\n\n\t\t\tthis.ctx.font = this.font;\n\n\t\t\tvar firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n\t\t\t\tlastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n\t\t\t\tfirstRotated,\n\t\t\t\tlastRotated;\n\n\n\t\t\tthis.xScalePaddingRight = lastWidth/2 + 3;\n\t\t\tthis.xScalePaddingLeft = (firstWidth/2 > this.yLabelWidth) ? firstWidth/2 : this.yLabelWidth;\n\n\t\t\tthis.xLabelRotation = 0;\n\t\t\tif (this.display){\n\t\t\t\tvar originalLabelWidth = longestText(this.ctx,this.font,this.xLabels),\n\t\t\t\t\tcosRotation,\n\t\t\t\t\tfirstRotatedWidth;\n\t\t\t\tthis.xLabelWidth = originalLabelWidth;\n\t\t\t\t//Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n\t\t\t\t//Max label rotate should be 90 - also act as a loop counter\n\t\t\t\twhile ((this.xLabelWidth > xGridWidth && this.xLabelRotation === 0) || (this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0)){\n\t\t\t\t\tcosRotation = Math.cos(toRadians(this.xLabelRotation));\n\n\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\t\t\t\t\tlastRotated = cosRotation * lastWidth;\n\n\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\tif (firstRotated + this.fontSize / 2 > this.yLabelWidth){\n\t\t\t\t\t\tthis.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis.xScalePaddingRight = this.fontSize/2;\n\n\n\t\t\t\t\tthis.xLabelRotation++;\n\t\t\t\t\tthis.xLabelWidth = cosRotation * originalLabelWidth;\n\n\t\t\t\t}\n\t\t\t\tif (this.xLabelRotation > 0){\n\t\t\t\t\tthis.endPoint -= Math.sin(toRadians(this.xLabelRotation))*originalLabelWidth + 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.xLabelWidth = 0;\n\t\t\t\tthis.xScalePaddingRight = this.padding;\n\t\t\t\tthis.xScalePaddingLeft = this.padding;\n\t\t\t}\n\n\t\t},\n\t\t// Needs to be overidden in each Chart type\n\t\t// Otherwise we need to pass all the data into the scale class\n\t\tcalculateYRange: noop,\n\t\tdrawingArea: function(){\n\t\t\treturn this.startPoint - this.endPoint;\n\t\t},\n\t\tcalculateY : function(value){\n\t\t\tvar scalingFactor = this.drawingArea() / (this.min - this.max);\n\t\t\treturn this.endPoint - (scalingFactor * (value - this.min));\n\t\t},\n\t\tcalculateX : function(index){\n\t\t\tvar isRotated = (this.xLabelRotation > 0),\n\t\t\t\t// innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n\t\t\t\tinnerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n\t\t\t\tvalueWidth = innerWidth/Math.max((this.valuesCount - ((this.offsetGridLines) ? 0 : 1)), 1),\n\t\t\t\tvalueOffset = (valueWidth * index) + this.xScalePaddingLeft;\n\n\t\t\tif (this.offsetGridLines){\n\t\t\t\tvalueOffset += (valueWidth/2);\n\t\t\t}\n\n\t\t\treturn Math.round(valueOffset);\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\thelpers.extend(this, newProps);\n\t\t\tthis.fit();\n\t\t},\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\tyLabelGap = (this.endPoint - this.startPoint) / this.steps,\n\t\t\t\txStart = Math.round(this.xScalePaddingLeft);\n\t\t\tif (this.display){\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.font = this.font;\n\t\t\t\teach(this.yLabels,function(labelString,index){\n\t\t\t\t\tvar yLabelCenter = this.endPoint - (yLabelGap * index),\n\t\t\t\t\t\tlinePositionY = Math.round(yLabelCenter),\n\t\t\t\t\t\tdrawHorizontalLine = this.showHorizontalLines;\n\n\t\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tif (this.showLabels){\n\t\t\t\t\t\tctx.fillText(labelString,xStart - 10,yLabelCenter);\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is X axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawHorizontalLine){\n\t\t\t\t\t\tdrawHorizontalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawHorizontalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tlinePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n\t\t\t\t\tif(drawHorizontalLine){\n\t\t\t\t\t\tctx.moveTo(xStart, linePositionY);\n\t\t\t\t\t\tctx.lineTo(this.width, linePositionY);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(xStart - 5, linePositionY);\n\t\t\t\t\tctx.lineTo(xStart, linePositionY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t},this);\n\n\t\t\t\teach(this.xLabels,function(label,index){\n\t\t\t\t\tvar xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\t// Check to see if line/bar here and decide where to place the line\n\t\t\t\t\t\tlinePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\tisRotated = (this.xLabelRotation > 0),\n\t\t\t\t\t\tdrawVerticalLine = this.showVerticalLines;\n\n\t\t\t\t\t// This is Y axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawVerticalLine){\n\t\t\t\t\t\tdrawVerticalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\t\tctx.lineTo(linePos,this.startPoint - 3);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\n\n\t\t\t\t\t// Small lines at the bottom of the base grid line\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\tctx.lineTo(linePos,this.endPoint + 5);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate(xPos,(isRotated) ? this.endPoint + 12 : this.endPoint + 8);\n\t\t\t\t\tctx.rotate(toRadians(this.xLabelRotation)*-1);\n\t\t\t\t\tctx.font = this.font;\n\t\t\t\t\tctx.textAlign = (isRotated) ? \"right\" : \"center\";\n\t\t\t\t\tctx.textBaseline = (isRotated) ? \"middle\" : \"top\";\n\t\t\t\t\tctx.fillText(label, 0, 0);\n\t\t\t\t\tctx.restore();\n\t\t\t\t},this);\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\tChart.RadialScale = Chart.Element.extend({\n\t\tinitialize: function(){\n\t\t\tthis.size = min([this.height, this.width]);\n\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t},\n\t\tcalculateCenterOffset: function(value){\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\n\n\t\t\treturn (value - this.min) * scalingFactor;\n\t\t},\n\t\tupdate : function(){\n\t\t\tif (!this.lineArc){\n\t\t\t\tthis.setScaleSize();\n\t\t\t} else {\n\t\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t\t}\n\t\t\tthis.buildYLabels();\n\t\t},\n\t\tbuildYLabels: function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t},\n\t\tgetCircumference : function(){\n\t\t\treturn ((Math.PI*2) / this.valuesCount);\n\t\t},\n\t\tsetScaleSize: function(){\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = min([(this.height/2 - this.pointLabelFontSize - 5), this.width/2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft,\n\t\t\t\tmaxWidthRadius;\n\t\t\tthis.ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\tfor (i=0;i<this.valuesCount;i++){\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(template(this.templateString, { value: this.labels[i] })).width + 5;\n\t\t\t\tif (i === 0 || i === this.valuesCount/2){\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth/2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i < this.valuesCount/2) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i > this.valuesCount/2){\n\t\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI/2);\n\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI/2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight)/2;\n\n\t\t\t//this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement){\n\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\n\n\t\t\tthis.xCenter = (maxLeft + maxRight)/2;\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tthis.yCenter = (this.height/2);\n\t\t},\n\n\t\tgetIndexAngle : function(index){\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.valuesCount;\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\n\t\t\treturn index * angleMultiplier - (Math.PI/2);\n\t\t},\n\t\tgetPointPosition : function(index, distanceFromCenter){\n\t\t\tvar thisAngle = this.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx : (Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\n\t\t\t\ty : (Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\n\t\t\t};\n\t\t},\n\t\tdraw: function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\teach(this.yLabels, function(label, index){\n\t\t\t\t\t// Don't draw a centre value\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\tvar yCenterOffset = index * (this.drawingArea/this.steps),\n\t\t\t\t\t\t\tyHeight = this.yCenter - yCenterOffset,\n\t\t\t\t\t\t\tpointPosition;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (this.lineWidth > 0){\n\t\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\n\t\t\t\t\t\t\tif(this.lineArc){\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI*2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i=0;i<this.valuesCount;i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + (index * this.stepValue)));\n\t\t\t\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.showLabels){\n\t\t\t\t\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\t\t\t\t\t\t\tif (this.showLabelBackdrop){\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = this.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth/2 - this.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - this.fontSize/2 - this.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + this.backdropPaddingX*2,\n\t\t\t\t\t\t\t\t\tthis.fontSize + this.backdropPaddingY*2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\t\t\tctx.fillStyle = this.fontColor;\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (!this.lineArc){\n\t\t\t\t\tctx.lineWidth = this.angleLineWidth;\n\t\t\t\t\tctx.strokeStyle = this.angleLineColor;\n\t\t\t\t\tfor (var i = this.valuesCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tvar centerOffset = null, outerPosition = null;\n\n\t\t\t\t\t\tif (this.angleLineWidth > 0 && (i % this.angleLineInterval === 0)){\n\t\t\t\t\t\t\tcenterOffset = this.calculateCenterOffset(this.max);\n\t\t\t\t\t\t\touterPosition = this.getPointPosition(i, centerOffset);\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.backgroundColors && this.backgroundColors.length == this.valuesCount) {\n\t\t\t\t\t\t\tif (centerOffset == null)\n\t\t\t\t\t\t\t\tcenterOffset = this.calculateCenterOffset(this.max);\n\n\t\t\t\t\t\t\tif (outerPosition == null)\n\t\t\t\t\t\t\t\touterPosition = this.getPointPosition(i, centerOffset);\n\n\t\t\t\t\t\t\tvar previousOuterPosition = this.getPointPosition(i === 0 ? this.valuesCount - 1 : i - 1, centerOffset);\n\t\t\t\t\t\t\tvar nextOuterPosition = this.getPointPosition(i === this.valuesCount - 1 ? 0 : i + 1, centerOffset);\n\n\t\t\t\t\t\t\tvar previousOuterHalfway = { x: (previousOuterPosition.x + outerPosition.x) / 2, y: (previousOuterPosition.y + outerPosition.y) / 2 };\n\t\t\t\t\t\t\tvar nextOuterHalfway = { x: (outerPosition.x + nextOuterPosition.x) / 2, y: (outerPosition.y + nextOuterPosition.y) / 2 };\n\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(previousOuterHalfway.x, previousOuterHalfway.y);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.lineTo(nextOuterHalfway.x, nextOuterHalfway.y);\n\t\t\t\t\t\t\tctx.fillStyle = this.backgroundColors[i];\n\t\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n\t\t\t\t\t\tctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\t\t\t\tctx.fillStyle = this.pointLabelFontColor;\n\n\t\t\t\t\t\tvar labelsCount = this.labels.length,\n\t\t\t\t\t\t\thalfLabelsCount = this.labels.length/2,\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount/2,\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\n\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if(i === halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (i < halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (exactQuarter){\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (upperHalf){\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\taddAnimation: function(chartInstance, animationObject) {\n\t\t\tfor (var index = 0; index < this.animations.length; ++ index){\n\t\t\t\tif (this.animations[index].chartInstance === chartInstance){\n\t\t\t\t\t// replacing an in progress animation\n\t\t\t\t\tthis.animations[index].animationObject = animationObject;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.animations.push({\n\t\t\t\tchartInstance: chartInstance,\n\t\t\t\tanimationObject: animationObject\n\t\t\t});\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (this.animations.length == 1) {\n\t\t\t\thelpers.requestAnimFrame.call(window, this.digestWrapper);\n\t\t\t}\n\t\t},\n\t\t// Cancel the animation for a given chart instance\n\t\tcancelAnimation: function(chartInstance) {\n\t\t\tvar index = helpers.findNextWhere(this.animations, function(animationWrapper) {\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\n\t\t\t});\n\t\t\t\n\t\t\tif (index)\n\t\t\t{\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t}\n\t\t},\n\t\t// calls startDigest with the proper context\n\t\tdigestWrapper: function() {\n\t\t\tChart.animationService.startDigest.call(Chart.animationService);\n\t\t},\n\t\tstartDigest: function() {\n\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif(this.dropFrames > 1){\n\t\t\t\tframesToDrop = Math.floor(this.dropFrames);\n\t\t\t\tthis.dropFrames -= framesToDrop;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.animations.length; i++) {\n\n\t\t\t\tif (this.animations[i].animationObject.currentStep === null){\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = 0;\n\t\t\t\t}\n\n\t\t\t\tthis.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\t\t\t\tif(this.animations[i].animationObject.currentStep > this.animations[i].animationObject.numSteps){\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = this.animations[i].animationObject.numSteps;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.animations[i].animationObject.render(this.animations[i].chartInstance, this.animations[i].animationObject);\n\t\t\t\t\n\t\t\t\t// Check if executed the last frame.\n\t\t\t\tif (this.animations[i].animationObject.currentStep == this.animations[i].animationObject.numSteps){\n\t\t\t\t\t// Call onAnimationComplete\n\t\t\t\t\tthis.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance);\n\t\t\t\t\t// Remove the animation.\n\t\t\t\t\tthis.animations.splice(i, 1);\n\t\t\t\t\t// Keep the index in place to offset the splice\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar endTime = Date.now();\n\t\t\tvar delay = endTime - startTime - this.frameDuration;\n\t\t\tvar frameDelay = delay / this.frameDuration;\n\n\t\t\tif(frameDelay > 1){\n\t\t\t\tthis.dropFrames += frameDelay;\n\t\t\t}\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (this.animations.length > 0){\n\t\t\t\thelpers.requestAnimFrame.call(window, this.digestWrapper);\n\t\t\t}\n\t\t}\n\t};\n\n\t// Attach global event to resize each chart instance when the browser resizes\n\thelpers.addEvent(window, \"resize\", (function(){\n\t\t// Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n\t\tvar timeout;\n\t\treturn function(){\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function(){\n\t\t\t\teach(Chart.instances,function(instance){\n\t\t\t\t\t// If the responsive flag is set in the chart instance config\n\t\t\t\t\t// Cascade the resize event down to the chart.\n\t\t\t\t\tif (instance.options.responsive){\n\t\t\t\t\t\tinstance.resize(instance.render, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 50);\n\t\t};\n\t})());\n\n\n\tif (amd) {\n\t\tdefine('Chart', [], function(){\n\t\t\treturn Chart;\n\t\t});\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = Chart;\n\t}\n\n\troot.Chart = Chart;\n\n\tChart.noConflict = function(){\n\t\troot.Chart = previous;\n\t\treturn Chart;\n\t};\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\tscaleBeginAtZero : true,\n\n\t\t//Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - If there is a stroke on each bar\n\t\tbarShowStroke : true,\n\n\t\t//Number - Pixel width of the bar stroke\n\t\tbarStrokeWidth : 2,\n\n\t\t//Number - Spacing between each of the X value sets\n\t\tbarValueSpacing : 5,\n\n\t\t//Number - Spacing between data sets within X values\n\t\tbarDatasetSpacing : 1,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Bar\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\n\t\t\t//Expose options as a scope variable here so we can access it in the ScaleClass\n\t\t\tvar options = this.options;\n\n\t\t\tthis.ScaleClass = Chart.Scale.extend({\n\t\t\t\toffsetGridLines : true,\n\t\t\t\tcalculateBarX : function(datasetCount, datasetIndex, barIndex){\n\t\t\t\t\t//Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n\t\t\t\t\tvar xWidth = this.calculateBaseWidth(),\n\t\t\t\t\t\txAbsolute = this.calculateX(barIndex) - (xWidth/2),\n\t\t\t\t\t\tbarWidth = this.calculateBarWidth(datasetCount);\n\n\t\t\t\t\treturn xAbsolute + (barWidth * datasetIndex) + (datasetIndex * options.barDatasetSpacing) + barWidth/2;\n\t\t\t\t},\n\t\t\t\tcalculateBaseWidth : function(){\n\t\t\t\t\treturn (this.calculateX(1) - this.calculateX(0)) - (2*options.barValueSpacing);\n\t\t\t\t},\n\t\t\t\tcalculateBarWidth : function(datasetCount){\n\t\t\t\t\t//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n\t\t\t\t\tvar baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n\n\t\t\t\t\treturn (baseWidth / datasetCount);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeBars = (evt.type !== 'mouseout') ? this.getBarsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachBars(function(bar){\n\t\t\t\t\t\tbar.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeBars, function(activeBar){\n\t\t\t\t\t\tif (activeBar) {\n\t\t\t\t\t\t\tactiveBar.fillColor = activeBar.highlightFill;\n\t\t\t\t\t\t\tactiveBar.strokeColor = activeBar.highlightStroke;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeBars);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.BarClass = Chart.Rectangle.extend({\n\t\t\t\tstrokeWidth : this.options.barStrokeWidth,\n\t\t\t\tshowStroke : this.options.barShowStroke,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset,datasetIndex){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tbars : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.bars.push(new this.BarClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : (typeof dataset.strokeColor == 'object') ? dataset.strokeColor[index] : dataset.strokeColor,\n\t\t\t\t\t\tfillColor : (typeof dataset.fillColor == 'object') ? dataset.fillColor[index] : dataset.fillColor,\n\t\t\t\t\t\thighlightFill : (dataset.highlightFill) ? (typeof dataset.highlightFill == 'object') ? dataset.highlightFill[index] : dataset.highlightFill : (typeof dataset.fillColor == 'object') ? dataset.fillColor[index] : dataset.fillColor,\n\t\t\t\t\t\thighlightStroke : (dataset.highlightStroke) ? (typeof dataset.highlightStroke == 'object') ? dataset.highlightStroke[index] : dataset.highlightStroke : (typeof dataset.strokeColor == 'object') ? dataset.strokeColor[index] : dataset.strokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.buildScale(data.labels);\n\n\t\t\tthis.BarClass.prototype.base = this.scale.endPoint;\n\n\t\t\tthis.eachBars(function(bar, index, datasetIndex){\n\t\t\t\thelpers.extend(bar, {\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t});\n\t\t\t\tbar.save();\n\t\t\t}, this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\n\t\t\tthis.eachBars(function(bar){\n\t\t\t\tbar.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachBars : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset, datasetIndex){\n\t\t\t\thelpers.each(dataset.bars, callback, this, datasetIndex);\n\t\t\t},this);\n\t\t},\n\t\tgetBarsAtEvent : function(e){\n\t\t\tvar barsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e),\n\t\t\t\tdatasetIterator = function(dataset){\n\t\t\t\t\tbarsArray.push(dataset.bars[barIndex]);\n\t\t\t\t},\n\t\t\t\tbarIndex;\n\n\t\t\tfor (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n\t\t\t\tfor (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n\t\t\t\t\tif (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x,eventPosition.y)){\n\t\t\t\t\t\thelpers.each(this.datasets, datasetIterator);\n\t\t\t\t\t\treturn barsArray;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn barsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachBars(function(bar){\n\t\t\t\t\tvalues.push(bar.value);\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange: function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding : (this.options.showScale) ? 0 : (this.options.barShowStroke) ? this.options.barStrokeWidth : 0,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.scale = new this.ScaleClass(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].bars.push(new this.BarClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tdatasetLabel: this.datasets[datasetIndex].label,\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tbase : this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].strokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].fillColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.bars.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.BarClass.prototype,{\n\t\t\t\ty: this.scale.endPoint,\n\t\t\t\tbase : this.scale.endPoint\n\t\t\t});\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\t\t\t//Draw all the bars for each dataset\n\t\t\thelpers.each(this.datasets,function(dataset,datasetIndex){\n\t\t\t\thelpers.each(dataset.bars,function(bar,index){\n\t\t\t\t\tif (bar.hasValue()){\n\t\t\t\t\t\tbar.base = this.scale.endPoint;\n\t\t\t\t\t\t//Transition then draw\n\t\t\t\t\t\tbar.transition({\n\t\t\t\t\t\t\tx : this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\t\t\ty : this.scale.calculateY(bar.value),\n\t\t\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length)\n\t\t\t\t\t\t}, easingDecimal).draw();\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether we should show a stroke on each segment\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of each segment stroke\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of each segment stroke\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//The percentage of the chart that we cut out of the middle.\n\t\tpercentageInnerCutout : 50,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n\n\t};\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"Doughnut\",\n\t\t//Providing a defaults will also register the defaults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\n\t\t\t//Declare segments as a static property to prevent inheriting across the Chart type prototype\n\t\t\tthis.segments = [];\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.calculateTotal(data);\n\n\t\t\thelpers.each(data,function(datapoint, index){\n\t\t\t\tif (!datapoint.color) {\n\t\t\t\t\tdatapoint.color = 'hsl(' + (360 * index / data.length) + ', 100%, 50%)';\n\t\t\t\t}\n\t\t\t\tthis.addData(datapoint, index, true);\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex !== undefined ? atIndex : this.segments.length;\n\t\t\tif ( typeof(segment.color) === \"undefined\" ) {\n\t\t\t\tsegment.color = Chart.defaults.global.segmentColorDefault[index % Chart.defaults.global.segmentColorDefault.length];\n\t\t\t\tsegment.highlight = Chart.defaults.global.segmentHighlightColorDefaults[index % Chart.defaults.global.segmentHighlightColorDefaults.length];\t\t\t\t\n\t\t\t}\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tvalue : segment.value,\n\t\t\t\touterRadius : (this.options.animateScale) ? 0 : this.outerRadius,\n\t\t\t\tinnerRadius : (this.options.animateScale) ? 0 : (this.outerRadius/100) * this.options.percentageInnerCutout,\n\t\t\t\tfillColor : segment.color,\n\t\t\t\thighlightColor : segment.highlight || segment.color,\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tstartAngle : Math.PI * 1.5,\n\t\t\t\tcircumference : (this.options.animateRotate) ? 0 : this.calculateCircumference(segment.value),\n\t\t\t\tlabel : segment.label\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tcalculateCircumference : function(value) {\n\t\t\tif ( this.total > 0 ) {\n\t\t\t\treturn (Math.PI*2)*(value / this.total);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\tcalculateTotal : function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += Math.abs(segment.value);\n\t\t\t},this);\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor']);\n\t\t\t});\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t});\n\t\t\t}, this);\n\t\t},\n\t\tdraw : function(easeDecimal){\n\t\t\tvar animDecimal = (easeDecimal) ? easeDecimal : 1;\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment,index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.calculateCircumference(segment.value),\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t},animDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\tsegment.draw();\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length-1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t},this);\n\n\t\t}\n\t});\n\n\tChart.types.Doughnut.extend({\n\t\tname : \"Pie\",\n\t\tdefaults : helpers.merge(defaultConfig,{percentageInnerCutout : 0})\n\t});\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\n\t\t///Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - Whether the line is curved between points\n\t\tbezierCurve : true,\n\n\t\t//Number - Tension of the bezier curve between points\n\t\tbezierCurveTension : 0.4,\n\n\t\t//Boolean - Whether to show a dot for each point\n\t\tpointDot : true,\n\n\t\t//Number - Radius of each point dot in pixels\n\t\tpointDotRadius : 4,\n\n\t\t//Number - Pixel width of point dot stroke\n\t\tpointDotStrokeWidth : 1,\n\n\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\tpointHitDetectionRadius : 20,\n\n\t\t//Boolean - Whether to show a stroke for datasets\n\t\tdatasetStroke : true,\n\n\t\t//Number - Pixel width of dataset stroke\n\t\tdatasetStrokeWidth : 2,\n\n\t\t//Boolean - Whether to fill the dataset with a colour\n\t\tdatasetFill : true,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\",\n\n\t\t//Boolean - Whether to horizontally center the label and point dot inside the grid\n\t\toffsetGridLines : false\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Line\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\toffsetGridLines : this.options.offsetGridLines,\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinRange : function(mouseX){\n\t\t\t\t\treturn (Math.pow(mouseX-this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius,2));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePoints = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePoints, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activePoints);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t\tthis.buildScale(data.labels);\n\n\n\t\t\t\tthis.eachPoints(function(point, index){\n\t\t\t\t\thelpers.extend(point, {\n\t\t\t\t\t\tx: this.scale.calculateX(index),\n\t\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t\t});\n\t\t\t\t\tpoint.save();\n\t\t\t\t}, this);\n\n\t\t\t},this);\n\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\t\tgetPointsAtEvent : function(e){\n\t\t\tvar pointsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e);\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.inRange(eventPosition.x,eventPosition.y)) pointsArray.push(point);\n\t\t\t\t});\n\t\t\t},this);\n\t\t\treturn pointsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachPoints(function(point){\n\t\t\t\t\tvalues.push(point.value);\n\t\t\t\t});\n\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\toffsetGridLines : this.options.offsetGridLines,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange : function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding: (this.options.showScale) ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tthis.scale = new Chart.Scale(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tdatasetLabel: this.datasets[datasetIndex].label,\n\t\t\t\t\tx: this.scale.calculateX(this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\t// Some helper methods for getting the next/prev points\n\t\t\tvar hasValue = function(item){\n\t\t\t\treturn item.value !== null;\n\t\t\t},\n\t\t\tnextPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findNextWhere(collection, hasValue, index) || point;\n\t\t\t},\n\t\t\tpreviousPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findPreviousWhere(collection, hasValue, index) || point;\n\t\t\t};\n\n\t\t\tif (!this.scale) return;\n\t\t\tthis.scale.draw(easingDecimal);\n\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tvar pointsWithValues = helpers.where(dataset.points, hasValue);\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\t//We can use this extra loop to calculate the control points of this dataset also in this loop\n\n\t\t\t\thelpers.each(dataset.points, function(point, index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition({\n\t\t\t\t\t\t\ty : this.scale.calculateY(point.value),\n\t\t\t\t\t\t\tx : this.scale.calculateX(index)\n\t\t\t\t\t\t}, easingDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\t\t\t\t// Control points need to be calculated in a separate loop, because we need to know the current x/y of the point\n\t\t\t\t// This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n\t\t\t\tif (this.options.bezierCurve){\n\t\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\t\tvar tension = (index > 0 && index < pointsWithValues.length - 1) ? this.options.bezierCurveTension : 0;\n\t\t\t\t\t\tpoint.controlPoints = helpers.splineCurve(\n\t\t\t\t\t\t\tpreviousPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\tpoint,\n\t\t\t\t\t\t\tnextPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\ttension\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\n\t\t\t\t\t\t// Cap puter bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.outer.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.outer.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Cap inner bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.inner.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.inner.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x, point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(this.options.bezierCurve){\n\t\t\t\t\t\t\tvar previous = previousPoint(point, pointsWithValues, index);\n\n\t\t\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.x,\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.y,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.x,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.y,\n\t\t\t\t\t\t\t\tpoint.x,\n\t\t\t\t\t\t\t\tpoint.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (this.options.datasetStroke) {\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\n\t\t\t\tif (this.options.datasetFill && pointsWithValues.length > 0){\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\n\t\t\t\t\tctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n\t\t\t\t\tctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n\t\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(pointsWithValues,function(point){\n\t\t\t\t\tpoint.draw();\n\t\t\t\t});\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Show a backdrop to the scale label\n\t\tscaleShowLabelBackdrop : true,\n\n\t\t//String - The colour of the label backdrop\n\t\tscaleBackdropColor : \"rgba(255,255,255,0.75)\",\n\n\t\t// Boolean - Whether the scale should begin at zero\n\t\tscaleBeginAtZero : true,\n\n\t\t//Number - The backdrop padding above & below the label in pixels\n\t\tscaleBackdropPaddingY : 2,\n\n\t\t//Number - The backdrop padding to the side of the label in pixels\n\t\tscaleBackdropPaddingX : 2,\n\n\t\t//Boolean - Show line for each value in the scale\n\t\tscaleShowLine : true,\n\n\t\t//Boolean - Stroke a line around each segment in the chart\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of the stroke on each segment.\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of the stroke value in pixels\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect.\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether to animate the rotation of the chart\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether to animate scaling the chart from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(segments[i].label){%><%=segments[i].label%><%}%></span></li><%}%></ul>\"\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"PolarArea\",\n\t\t//Providing a defaults will also register the defaults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\t\t\tthis.segments = [];\n\t\t\t//Declare segment class as a chart instance specific class, so it can share props for this instance\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinnerRadius : 0,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tlineArc: true,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tvaluesCount: data.length\n\t\t\t});\n\n\t\t\tthis.updateScaleRange(data);\n\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.each(data,function(segment,index){\n\t\t\t\tthis.addData(segment,index,true);\n\t\t\t},this);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tfillColor: segment.color,\n\t\t\t\thighlightColor: segment.highlight || segment.color,\n\t\t\t\tlabel: segment.label,\n\t\t\t\tvalue: segment.value,\n\t\t\t\touterRadius: (this.options.animateScale) ? 0 : this.scale.calculateCenterOffset(segment.value),\n\t\t\t\tcircumference: (this.options.animateRotate) ? 0 : this.scale.getCircumference(),\n\t\t\t\tstartAngle: Math.PI * 1.5\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tcalculateTotal: function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += segment.value;\n\t\t\t},this);\n\t\t\tthis.scale.valuesCount = this.segments.length;\n\t\t},\n\t\tupdateScaleRange: function(datapoints){\n\t\t\tvar valuesArray = [];\n\t\t\thelpers.each(datapoints,function(segment){\n\t\t\t\tvaluesArray.push(segment.value);\n\t\t\t});\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes,\n\t\t\t\t{\n\t\t\t\t\tsize: helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\t\tyCenter: this.chart.height/2\n\t\t\t\t}\n\t\t\t);\n\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\t\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.segments);\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.extend(this.scale,{\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t});\n\t\t\t}, this);\n\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\t//Clear & draw the canvas\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment, index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.scale.getCircumference(),\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t},easingDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\t// If we've removed the first segment we need to set the first one to\n\t\t\t\t// start at the top.\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length - 1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t\tsegment.draw();\n\t\t\t}, this);\n\t\t\tthis.scale.draw();\n\t\t}\n\t});\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\n\tChart.Type.extend({\n\t\tname: \"Radar\",\n\t\tdefaults:{\n\t\t\t//Boolean - Whether to show lines for each scale point\n\t\t\tscaleShowLine : true,\n\n\t\t\t//Boolean - Whether we show the angle lines out of the radar\n\t\t\tangleShowLineOut : true,\n\n\t\t\t//Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels : false,\n\n\t\t\t// Boolean - Whether the scale should begin at zero\n\t\t\tscaleBeginAtZero : true,\n\n\t\t\t//String - Colour of the angle line\n\t\t\tangleLineColor : \"rgba(0,0,0,.1)\",\n\n\t\t\t//Number - Pixel width of the angle line\n\t\t\tangleLineWidth : 1,\n\n\t\t\t//Number - Interval at which to draw angle lines (\"every Nth point\")\n\t\t\tangleLineInterval: 1,\n\n\t\t\t//String - Point label font declaration\n\t\t\tpointLabelFontFamily : \"'Arial'\",\n\n\t\t\t//String - Point label font weight\n\t\t\tpointLabelFontStyle : \"normal\",\n\n\t\t\t//Number - Point label font size in pixels\n\t\t\tpointLabelFontSize : 10,\n\n\t\t\t//String - Point label font colour\n\t\t\tpointLabelFontColor : \"#666\",\n\n\t\t\t//Boolean - Whether to show a dot for each point\n\t\t\tpointDot : true,\n\n\t\t\t//Number - Radius of each point dot in pixels\n\t\t\tpointDotRadius : 3,\n\n\t\t\t//Number - Pixel width of point dot stroke\n\t\t\tpointDotStrokeWidth : 1,\n\n\t\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\t\tpointHitDetectionRadius : 20,\n\n\t\t\t//Boolean - Whether to show a stroke for datasets\n\t\t\tdatasetStroke : true,\n\n\t\t\t//Number - Pixel width of dataset stroke\n\t\t\tdatasetStrokeWidth : 2,\n\n\t\t\t//Boolean - Whether to fill the dataset with a colour\n\t\t\tdatasetFill : true,\n\n\t\t\t//String - A legend template\n\t\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n\n\t\t},\n\n\t\tinitialize: function(data){\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\tthis.buildScale(data);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePointsCollection = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePointsCollection, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.showTooltip(activePointsCollection);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel: dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tvar pointPosition;\n\t\t\t\t\tif (!this.scale.animation){\n\t\t\t\t\t\tpointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n\t\t\t\t\t}\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tx: (this.options.animation) ? this.scale.xCenter : pointPosition.x,\n\t\t\t\t\t\ty: (this.options.animation) ? this.scale.yCenter : pointPosition.y,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\n\t\tgetPointsAtEvent : function(evt){\n\t\t\tvar mousePosition = helpers.getRelativePosition(evt),\n\t\t\t\tfromCenter = helpers.getAngleFromPoint({\n\t\t\t\t\tx: this.scale.xCenter,\n\t\t\t\t\ty: this.scale.yCenter\n\t\t\t\t}, mousePosition);\n\n\t\t\tvar anglePerIndex = (Math.PI * 2) /this.scale.valuesCount,\n\t\t\t\tpointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n\t\t\t\tactivePointsCollection = [];\n\n\t\t\t// If we're at the top, make the pointIndex 0 to get the first of the array.\n\t\t\tif (pointIndex >= this.scale.valuesCount || pointIndex < 0){\n\t\t\t\tpointIndex = 0;\n\t\t\t}\n\n\t\t\tif (fromCenter.distance <= this.scale.drawingArea){\n\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\tactivePointsCollection.push(dataset.points[pointIndex]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn activePointsCollection;\n\t\t},\n\n\t\tbuildScale : function(data){\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackgroundColors: this.options.scaleBackgroundColors,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tangleLineColor : this.options.angleLineColor,\n\t\t\t\tangleLineWidth : (this.options.angleShowLineOut) ? this.options.angleLineWidth : 0,\n        angleLineInterval: (this.options.angleLineInterval) ? this.options.angleLineInterval : 1,\n\t\t\t\t// Point labels at the edge of each line\n\t\t\t\tpointLabelFontColor : this.options.pointLabelFontColor,\n\t\t\t\tpointLabelFontSize : this.options.pointLabelFontSize,\n\t\t\t\tpointLabelFontFamily : this.options.pointLabelFontFamily,\n\t\t\t\tpointLabelFontStyle : this.options.pointLabelFontStyle,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tlabels: data.labels,\n\t\t\t\tvaluesCount: data.datasets[0].data.length\n\t\t\t});\n\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.updateScaleRange(data.datasets);\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tupdateScaleRange: function(datasets){\n\t\t\tvar valuesArray = (function(){\n\t\t\t\tvar totalDataArray = [];\n\t\t\t\thelpers.each(datasets,function(dataset){\n\t\t\t\t\tif (dataset.data){\n\t\t\t\t\t\ttotalDataArray = totalDataArray.concat(dataset.data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thelpers.each(dataset.points, function(point){\n\t\t\t\t\t\t\ttotalDataArray.push(point.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn totalDataArray;\n\t\t\t})();\n\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes\n\t\t\t);\n\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\tthis.scale.valuesCount++;\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\tvar pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tdatasetLabel: this.datasets[datasetIndex].label,\n\t\t\t\t\tx: pointPosition.x,\n\t\t\t\t\ty: pointPosition.y,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.labels.push(label);\n\n\t\t\tthis.reflow();\n\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.valuesCount--;\n\t\t\tthis.scale.labels.shift();\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow: function(){\n\t\t\thelpers.extend(this.scale, {\n\t\t\t\twidth : this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\tsize : helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.datasets);\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easeDecimal = ease || 1,\n\t\t\t\tctx = this.chart.ctx;\n\t\t\tthis.clear();\n\t\t\tthis.scale.draw();\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\tif(this.options.datasetFill){\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.draw();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},this);\n\n\t\t}\n\n\t});\n\n\n\n\n\n}).call(this);\n",
    "/*!\n * jQuery UI :data 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: :data Selector\n//>>group: Core\n//>>description: Selects elements which have data stored under the specified key.\n//>>docs: http://api.jqueryui.com/data-selector/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\nreturn $.extend( $.expr[ \":\" ], {\n\tdata: $.expr.createPseudo ?\n\t\t$.expr.createPseudo( function( dataName ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn !!$.data( elem, dataName );\n\t\t\t};\n\t\t} ) :\n\n\t\t// Support: jQuery <1.8\n\t\tfunction( elem, i, match ) {\n\t\t\treturn !!$.data( elem, match[ 3 ] );\n\t\t}\n} );\n} ) );\n",
    "/*!\n * jQuery UI Disable Selection 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: disableSelection\n//>>group: Core\n//>>description: Disable selection of text content within the set of matched elements.\n//>>docs: http://api.jqueryui.com/disableSelection/\n\n// This file is deprecated\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\n\nreturn $.fn.extend( {\n\tdisableSelection: ( function() {\n\t\tvar eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\n\t\t\t\"selectstart\" :\n\t\t\t\"mousedown\";\n\n\t\treturn function() {\n\t\t\treturn this.on( eventType + \".ui-disableSelection\", function( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} );\n\t\t};\n\t} )(),\n\n\tenableSelection: function() {\n\t\treturn this.off( \".ui-disableSelection\" );\n\t}\n} );\n\n} ) );\n",
    "/*!\n * jQuery UI Focusable 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: :focusable Selector\n//>>group: Core\n//>>description: Selects elements which can be focused.\n//>>docs: http://api.jqueryui.com/focusable-selector/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\n\n// Selectors\n$.ui.focusable = function( element, hasTabindex ) {\n\tvar map, mapName, img, focusableIfVisible, fieldset,\n\t\tnodeName = element.nodeName.toLowerCase();\n\n\tif ( \"area\" === nodeName ) {\n\t\tmap = element.parentNode;\n\t\tmapName = map.name;\n\t\tif ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\n\t\t\treturn false;\n\t\t}\n\t\timg = $( \"img[usemap='#\" + mapName + \"']\" );\n\t\treturn img.length > 0 && img.is( \":visible\" );\n\t}\n\n\tif ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\n\t\tfocusableIfVisible = !element.disabled;\n\n\t\tif ( focusableIfVisible ) {\n\n\t\t\t// Form controls within a disabled fieldset are disabled.\n\t\t\t// However, controls within the fieldset's legend do not get disabled.\n\t\t\t// Since controls generally aren't placed inside legends, we skip\n\t\t\t// this portion of the check.\n\t\t\tfieldset = $( element ).closest( \"fieldset\" )[ 0 ];\n\t\t\tif ( fieldset ) {\n\t\t\t\tfocusableIfVisible = !fieldset.disabled;\n\t\t\t}\n\t\t}\n\t} else if ( \"a\" === nodeName ) {\n\t\tfocusableIfVisible = element.href || hasTabindex;\n\t} else {\n\t\tfocusableIfVisible = hasTabindex;\n\t}\n\n\treturn focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\n};\n\n// Support: IE 8 only\n// IE 8 doesn't resolve inherit to visible/hidden for computed values\nfunction visible( element ) {\n\tvar visibility = element.css( \"visibility\" );\n\twhile ( visibility === \"inherit\" ) {\n\t\telement = element.parent();\n\t\tvisibility = element.css( \"visibility\" );\n\t}\n\treturn visibility !== \"hidden\";\n}\n\n$.extend( $.expr[ \":\" ], {\n\tfocusable: function( element ) {\n\t\treturn $.ui.focusable( element, $.attr( element, \"tabindex\" ) != null );\n\t}\n} );\n\nreturn $.ui.focusable;\n\n} ) );\n",
    "( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\n\n// This file is deprecated\nreturn $.ui.ie = !!/msie [\\w.]+/.exec( navigator.userAgent.toLowerCase() );\n} ) );\n",
    "/*!\n * jQuery UI Keycode 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Keycode\n//>>group: Core\n//>>description: Provide keycodes as keynames\n//>>docs: http://api.jqueryui.com/jQuery.ui.keyCode/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\nreturn $.ui.keyCode = {\n\tBACKSPACE: 8,\n\tCOMMA: 188,\n\tDELETE: 46,\n\tDOWN: 40,\n\tEND: 35,\n\tENTER: 13,\n\tESCAPE: 27,\n\tHOME: 36,\n\tLEFT: 37,\n\tPAGE_DOWN: 34,\n\tPAGE_UP: 33,\n\tPERIOD: 190,\n\tRIGHT: 39,\n\tSPACE: 32,\n\tTAB: 9,\n\tUP: 38\n};\n\n} ) );\n",
    "( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\n\n// $.ui.plugin is deprecated. Use $.widget() extensions instead.\nreturn $.ui.plugin = {\n\tadd: function( module, option, set ) {\n\t\tvar i,\n\t\t\tproto = $.ui[ module ].prototype;\n\t\tfor ( i in set ) {\n\t\t\tproto.plugins[ i ] = proto.plugins[ i ] || [];\n\t\t\tproto.plugins[ i ].push( [ option, set[ i ] ] );\n\t\t}\n\t},\n\tcall: function( instance, name, args, allowDisconnected ) {\n\t\tvar i,\n\t\t\tset = instance.plugins[ name ];\n\n\t\tif ( !set ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !allowDisconnected && ( !instance.element[ 0 ].parentNode ||\n\t\t\t\tinstance.element[ 0 ].parentNode.nodeType === 11 ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( i = 0; i < set.length; i++ ) {\n\t\t\tif ( instance.options[ set[ i ][ 0 ] ] ) {\n\t\t\t\tset[ i ][ 1 ].apply( instance.element, args );\n\t\t\t}\n\t\t}\n\t}\n};\n\n} ) );\n",
    "/*!\n * jQuery UI Position 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/position/\n */\n\n//>>label: Position\n//>>group: Core\n//>>description: Positions elements relative to other elements.\n//>>docs: http://api.jqueryui.com/position/\n//>>demos: http://jqueryui.com/position/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n( function() {\nvar cachedScrollbarWidth,\n\tmax = Math.max,\n\tabs = Math.abs,\n\trhorizontal = /left|center|right/,\n\trvertical = /top|center|bottom/,\n\troffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\n\trposition = /^\\w+/,\n\trpercent = /%$/,\n\t_position = $.fn.position;\n\nfunction getOffsets( offsets, width, height ) {\n\treturn [\n\t\tparseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\n\t\tparseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\n\t];\n}\n\nfunction parseCss( element, property ) {\n\treturn parseInt( $.css( element, property ), 10 ) || 0;\n}\n\nfunction getDimensions( elem ) {\n\tvar raw = elem[ 0 ];\n\tif ( raw.nodeType === 9 ) {\n\t\treturn {\n\t\t\twidth: elem.width(),\n\t\t\theight: elem.height(),\n\t\t\toffset: { top: 0, left: 0 }\n\t\t};\n\t}\n\tif ( $.isWindow( raw ) ) {\n\t\treturn {\n\t\t\twidth: elem.width(),\n\t\t\theight: elem.height(),\n\t\t\toffset: { top: elem.scrollTop(), left: elem.scrollLeft() }\n\t\t};\n\t}\n\tif ( raw.preventDefault ) {\n\t\treturn {\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\toffset: { top: raw.pageY, left: raw.pageX }\n\t\t};\n\t}\n\treturn {\n\t\twidth: elem.outerWidth(),\n\t\theight: elem.outerHeight(),\n\t\toffset: elem.offset()\n\t};\n}\n\n$.position = {\n\tscrollbarWidth: function() {\n\t\tif ( cachedScrollbarWidth !== undefined ) {\n\t\t\treturn cachedScrollbarWidth;\n\t\t}\n\t\tvar w1, w2,\n\t\t\tdiv = $( \"<div \" +\n\t\t\t\t\"style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'>\" +\n\t\t\t\t\"<div style='height:100px;width:auto;'></div></div>\" ),\n\t\t\tinnerDiv = div.children()[ 0 ];\n\n\t\t$( \"body\" ).append( div );\n\t\tw1 = innerDiv.offsetWidth;\n\t\tdiv.css( \"overflow\", \"scroll\" );\n\n\t\tw2 = innerDiv.offsetWidth;\n\n\t\tif ( w1 === w2 ) {\n\t\t\tw2 = div[ 0 ].clientWidth;\n\t\t}\n\n\t\tdiv.remove();\n\n\t\treturn ( cachedScrollbarWidth = w1 - w2 );\n\t},\n\tgetScrollInfo: function( within ) {\n\t\tvar overflowX = within.isWindow || within.isDocument ? \"\" :\n\t\t\t\twithin.element.css( \"overflow-x\" ),\n\t\t\toverflowY = within.isWindow || within.isDocument ? \"\" :\n\t\t\t\twithin.element.css( \"overflow-y\" ),\n\t\t\thasOverflowX = overflowX === \"scroll\" ||\n\t\t\t\t( overflowX === \"auto\" && within.width < within.element[ 0 ].scrollWidth ),\n\t\t\thasOverflowY = overflowY === \"scroll\" ||\n\t\t\t\t( overflowY === \"auto\" && within.height < within.element[ 0 ].scrollHeight );\n\t\treturn {\n\t\t\twidth: hasOverflowY ? $.position.scrollbarWidth() : 0,\n\t\t\theight: hasOverflowX ? $.position.scrollbarWidth() : 0\n\t\t};\n\t},\n\tgetWithinInfo: function( element ) {\n\t\tvar withinElement = $( element || window ),\n\t\t\tisWindow = $.isWindow( withinElement[ 0 ] ),\n\t\t\tisDocument = !!withinElement[ 0 ] && withinElement[ 0 ].nodeType === 9,\n\t\t\thasOffset = !isWindow && !isDocument;\n\t\treturn {\n\t\t\telement: withinElement,\n\t\t\tisWindow: isWindow,\n\t\t\tisDocument: isDocument,\n\t\t\toffset: hasOffset ? $( element ).offset() : { left: 0, top: 0 },\n\t\t\tscrollLeft: withinElement.scrollLeft(),\n\t\t\tscrollTop: withinElement.scrollTop(),\n\t\t\twidth: withinElement.outerWidth(),\n\t\t\theight: withinElement.outerHeight()\n\t\t};\n\t}\n};\n\n$.fn.position = function( options ) {\n\tif ( !options || !options.of ) {\n\t\treturn _position.apply( this, arguments );\n\t}\n\n\t// Make a copy, we don't want to modify arguments\n\toptions = $.extend( {}, options );\n\n\tvar atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\n\t\ttarget = $( options.of ),\n\t\twithin = $.position.getWithinInfo( options.within ),\n\t\tscrollInfo = $.position.getScrollInfo( within ),\n\t\tcollision = ( options.collision || \"flip\" ).split( \" \" ),\n\t\toffsets = {};\n\n\tdimensions = getDimensions( target );\n\tif ( target[ 0 ].preventDefault ) {\n\n\t\t// Force left top to allow flipping\n\t\toptions.at = \"left top\";\n\t}\n\ttargetWidth = dimensions.width;\n\ttargetHeight = dimensions.height;\n\ttargetOffset = dimensions.offset;\n\n\t// Clone to reuse original targetOffset later\n\tbasePosition = $.extend( {}, targetOffset );\n\n\t// Force my and at to have valid horizontal and vertical positions\n\t// if a value is missing or invalid, it will be converted to center\n\t$.each( [ \"my\", \"at\" ], function() {\n\t\tvar pos = ( options[ this ] || \"\" ).split( \" \" ),\n\t\t\thorizontalOffset,\n\t\t\tverticalOffset;\n\n\t\tif ( pos.length === 1 ) {\n\t\t\tpos = rhorizontal.test( pos[ 0 ] ) ?\n\t\t\t\tpos.concat( [ \"center\" ] ) :\n\t\t\t\trvertical.test( pos[ 0 ] ) ?\n\t\t\t\t\t[ \"center\" ].concat( pos ) :\n\t\t\t\t\t[ \"center\", \"center\" ];\n\t\t}\n\t\tpos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\n\t\tpos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\n\n\t\t// Calculate offsets\n\t\thorizontalOffset = roffset.exec( pos[ 0 ] );\n\t\tverticalOffset = roffset.exec( pos[ 1 ] );\n\t\toffsets[ this ] = [\n\t\t\thorizontalOffset ? horizontalOffset[ 0 ] : 0,\n\t\t\tverticalOffset ? verticalOffset[ 0 ] : 0\n\t\t];\n\n\t\t// Reduce to just the positions without the offsets\n\t\toptions[ this ] = [\n\t\t\trposition.exec( pos[ 0 ] )[ 0 ],\n\t\t\trposition.exec( pos[ 1 ] )[ 0 ]\n\t\t];\n\t} );\n\n\t// Normalize collision option\n\tif ( collision.length === 1 ) {\n\t\tcollision[ 1 ] = collision[ 0 ];\n\t}\n\n\tif ( options.at[ 0 ] === \"right\" ) {\n\t\tbasePosition.left += targetWidth;\n\t} else if ( options.at[ 0 ] === \"center\" ) {\n\t\tbasePosition.left += targetWidth / 2;\n\t}\n\n\tif ( options.at[ 1 ] === \"bottom\" ) {\n\t\tbasePosition.top += targetHeight;\n\t} else if ( options.at[ 1 ] === \"center\" ) {\n\t\tbasePosition.top += targetHeight / 2;\n\t}\n\n\tatOffset = getOffsets( offsets.at, targetWidth, targetHeight );\n\tbasePosition.left += atOffset[ 0 ];\n\tbasePosition.top += atOffset[ 1 ];\n\n\treturn this.each( function() {\n\t\tvar collisionPosition, using,\n\t\t\telem = $( this ),\n\t\t\telemWidth = elem.outerWidth(),\n\t\t\telemHeight = elem.outerHeight(),\n\t\t\tmarginLeft = parseCss( this, \"marginLeft\" ),\n\t\t\tmarginTop = parseCss( this, \"marginTop\" ),\n\t\t\tcollisionWidth = elemWidth + marginLeft + parseCss( this, \"marginRight\" ) +\n\t\t\t\tscrollInfo.width,\n\t\t\tcollisionHeight = elemHeight + marginTop + parseCss( this, \"marginBottom\" ) +\n\t\t\t\tscrollInfo.height,\n\t\t\tposition = $.extend( {}, basePosition ),\n\t\t\tmyOffset = getOffsets( offsets.my, elem.outerWidth(), elem.outerHeight() );\n\n\t\tif ( options.my[ 0 ] === \"right\" ) {\n\t\t\tposition.left -= elemWidth;\n\t\t} else if ( options.my[ 0 ] === \"center\" ) {\n\t\t\tposition.left -= elemWidth / 2;\n\t\t}\n\n\t\tif ( options.my[ 1 ] === \"bottom\" ) {\n\t\t\tposition.top -= elemHeight;\n\t\t} else if ( options.my[ 1 ] === \"center\" ) {\n\t\t\tposition.top -= elemHeight / 2;\n\t\t}\n\n\t\tposition.left += myOffset[ 0 ];\n\t\tposition.top += myOffset[ 1 ];\n\n\t\tcollisionPosition = {\n\t\t\tmarginLeft: marginLeft,\n\t\t\tmarginTop: marginTop\n\t\t};\n\n\t\t$.each( [ \"left\", \"top\" ], function( i, dir ) {\n\t\t\tif ( $.ui.position[ collision[ i ] ] ) {\n\t\t\t\t$.ui.position[ collision[ i ] ][ dir ]( position, {\n\t\t\t\t\ttargetWidth: targetWidth,\n\t\t\t\t\ttargetHeight: targetHeight,\n\t\t\t\t\telemWidth: elemWidth,\n\t\t\t\t\telemHeight: elemHeight,\n\t\t\t\t\tcollisionPosition: collisionPosition,\n\t\t\t\t\tcollisionWidth: collisionWidth,\n\t\t\t\t\tcollisionHeight: collisionHeight,\n\t\t\t\t\toffset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\n\t\t\t\t\tmy: options.my,\n\t\t\t\t\tat: options.at,\n\t\t\t\t\twithin: within,\n\t\t\t\t\telem: elem\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\tif ( options.using ) {\n\n\t\t\t// Adds feedback as second argument to using callback, if present\n\t\t\tusing = function( props ) {\n\t\t\t\tvar left = targetOffset.left - position.left,\n\t\t\t\t\tright = left + targetWidth - elemWidth,\n\t\t\t\t\ttop = targetOffset.top - position.top,\n\t\t\t\t\tbottom = top + targetHeight - elemHeight,\n\t\t\t\t\tfeedback = {\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\telement: target,\n\t\t\t\t\t\t\tleft: targetOffset.left,\n\t\t\t\t\t\t\ttop: targetOffset.top,\n\t\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\t\theight: targetHeight\n\t\t\t\t\t\t},\n\t\t\t\t\t\telement: {\n\t\t\t\t\t\t\telement: elem,\n\t\t\t\t\t\t\tleft: position.left,\n\t\t\t\t\t\t\ttop: position.top,\n\t\t\t\t\t\t\twidth: elemWidth,\n\t\t\t\t\t\t\theight: elemHeight\n\t\t\t\t\t\t},\n\t\t\t\t\t\thorizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\n\t\t\t\t\t\tvertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\n\t\t\t\t\t};\n\t\t\t\tif ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\n\t\t\t\t\tfeedback.horizontal = \"center\";\n\t\t\t\t}\n\t\t\t\tif ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\n\t\t\t\t\tfeedback.vertical = \"middle\";\n\t\t\t\t}\n\t\t\t\tif ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\n\t\t\t\t\tfeedback.important = \"horizontal\";\n\t\t\t\t} else {\n\t\t\t\t\tfeedback.important = \"vertical\";\n\t\t\t\t}\n\t\t\t\toptions.using.call( this, props, feedback );\n\t\t\t};\n\t\t}\n\n\t\telem.offset( $.extend( position, { using: using } ) );\n\t} );\n};\n\n$.ui.position = {\n\tfit: {\n\t\tleft: function( position, data ) {\n\t\t\tvar within = data.within,\n\t\t\t\twithinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\n\t\t\t\touterWidth = within.width,\n\t\t\t\tcollisionPosLeft = position.left - data.collisionPosition.marginLeft,\n\t\t\t\toverLeft = withinOffset - collisionPosLeft,\n\t\t\t\toverRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\n\t\t\t\tnewOverRight;\n\n\t\t\t// Element is wider than within\n\t\t\tif ( data.collisionWidth > outerWidth ) {\n\n\t\t\t\t// Element is initially over the left side of within\n\t\t\t\tif ( overLeft > 0 && overRight <= 0 ) {\n\t\t\t\t\tnewOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\n\t\t\t\t\t\twithinOffset;\n\t\t\t\t\tposition.left += overLeft - newOverRight;\n\n\t\t\t\t// Element is initially over right side of within\n\t\t\t\t} else if ( overRight > 0 && overLeft <= 0 ) {\n\t\t\t\t\tposition.left = withinOffset;\n\n\t\t\t\t// Element is initially over both left and right sides of within\n\t\t\t\t} else {\n\t\t\t\t\tif ( overLeft > overRight ) {\n\t\t\t\t\t\tposition.left = withinOffset + outerWidth - data.collisionWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tposition.left = withinOffset;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Too far left -> align with left edge\n\t\t\t} else if ( overLeft > 0 ) {\n\t\t\t\tposition.left += overLeft;\n\n\t\t\t// Too far right -> align with right edge\n\t\t\t} else if ( overRight > 0 ) {\n\t\t\t\tposition.left -= overRight;\n\n\t\t\t// Adjust based on position and margin\n\t\t\t} else {\n\t\t\t\tposition.left = max( position.left - collisionPosLeft, position.left );\n\t\t\t}\n\t\t},\n\t\ttop: function( position, data ) {\n\t\t\tvar within = data.within,\n\t\t\t\twithinOffset = within.isWindow ? within.scrollTop : within.offset.top,\n\t\t\t\touterHeight = data.within.height,\n\t\t\t\tcollisionPosTop = position.top - data.collisionPosition.marginTop,\n\t\t\t\toverTop = withinOffset - collisionPosTop,\n\t\t\t\toverBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\n\t\t\t\tnewOverBottom;\n\n\t\t\t// Element is taller than within\n\t\t\tif ( data.collisionHeight > outerHeight ) {\n\n\t\t\t\t// Element is initially over the top of within\n\t\t\t\tif ( overTop > 0 && overBottom <= 0 ) {\n\t\t\t\t\tnewOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\n\t\t\t\t\t\twithinOffset;\n\t\t\t\t\tposition.top += overTop - newOverBottom;\n\n\t\t\t\t// Element is initially over bottom of within\n\t\t\t\t} else if ( overBottom > 0 && overTop <= 0 ) {\n\t\t\t\t\tposition.top = withinOffset;\n\n\t\t\t\t// Element is initially over both top and bottom of within\n\t\t\t\t} else {\n\t\t\t\t\tif ( overTop > overBottom ) {\n\t\t\t\t\t\tposition.top = withinOffset + outerHeight - data.collisionHeight;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tposition.top = withinOffset;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Too far up -> align with top\n\t\t\t} else if ( overTop > 0 ) {\n\t\t\t\tposition.top += overTop;\n\n\t\t\t// Too far down -> align with bottom edge\n\t\t\t} else if ( overBottom > 0 ) {\n\t\t\t\tposition.top -= overBottom;\n\n\t\t\t// Adjust based on position and margin\n\t\t\t} else {\n\t\t\t\tposition.top = max( position.top - collisionPosTop, position.top );\n\t\t\t}\n\t\t}\n\t},\n\tflip: {\n\t\tleft: function( position, data ) {\n\t\t\tvar within = data.within,\n\t\t\t\twithinOffset = within.offset.left + within.scrollLeft,\n\t\t\t\touterWidth = within.width,\n\t\t\t\toffsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\n\t\t\t\tcollisionPosLeft = position.left - data.collisionPosition.marginLeft,\n\t\t\t\toverLeft = collisionPosLeft - offsetLeft,\n\t\t\t\toverRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\n\t\t\t\tmyOffset = data.my[ 0 ] === \"left\" ?\n\t\t\t\t\t-data.elemWidth :\n\t\t\t\t\tdata.my[ 0 ] === \"right\" ?\n\t\t\t\t\t\tdata.elemWidth :\n\t\t\t\t\t\t0,\n\t\t\t\tatOffset = data.at[ 0 ] === \"left\" ?\n\t\t\t\t\tdata.targetWidth :\n\t\t\t\t\tdata.at[ 0 ] === \"right\" ?\n\t\t\t\t\t\t-data.targetWidth :\n\t\t\t\t\t\t0,\n\t\t\t\toffset = -2 * data.offset[ 0 ],\n\t\t\t\tnewOverRight,\n\t\t\t\tnewOverLeft;\n\n\t\t\tif ( overLeft < 0 ) {\n\t\t\t\tnewOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\n\t\t\t\t\touterWidth - withinOffset;\n\t\t\t\tif ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\n\t\t\t\t\tposition.left += myOffset + atOffset + offset;\n\t\t\t\t}\n\t\t\t} else if ( overRight > 0 ) {\n\t\t\t\tnewOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\n\t\t\t\t\tatOffset + offset - offsetLeft;\n\t\t\t\tif ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\n\t\t\t\t\tposition.left += myOffset + atOffset + offset;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttop: function( position, data ) {\n\t\t\tvar within = data.within,\n\t\t\t\twithinOffset = within.offset.top + within.scrollTop,\n\t\t\t\touterHeight = within.height,\n\t\t\t\toffsetTop = within.isWindow ? within.scrollTop : within.offset.top,\n\t\t\t\tcollisionPosTop = position.top - data.collisionPosition.marginTop,\n\t\t\t\toverTop = collisionPosTop - offsetTop,\n\t\t\t\toverBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\n\t\t\t\ttop = data.my[ 1 ] === \"top\",\n\t\t\t\tmyOffset = top ?\n\t\t\t\t\t-data.elemHeight :\n\t\t\t\t\tdata.my[ 1 ] === \"bottom\" ?\n\t\t\t\t\t\tdata.elemHeight :\n\t\t\t\t\t\t0,\n\t\t\t\tatOffset = data.at[ 1 ] === \"top\" ?\n\t\t\t\t\tdata.targetHeight :\n\t\t\t\t\tdata.at[ 1 ] === \"bottom\" ?\n\t\t\t\t\t\t-data.targetHeight :\n\t\t\t\t\t\t0,\n\t\t\t\toffset = -2 * data.offset[ 1 ],\n\t\t\t\tnewOverTop,\n\t\t\t\tnewOverBottom;\n\t\t\tif ( overTop < 0 ) {\n\t\t\t\tnewOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\n\t\t\t\t\touterHeight - withinOffset;\n\t\t\t\tif ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\n\t\t\t\t\tposition.top += myOffset + atOffset + offset;\n\t\t\t\t}\n\t\t\t} else if ( overBottom > 0 ) {\n\t\t\t\tnewOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\n\t\t\t\t\toffset - offsetTop;\n\t\t\t\tif ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\n\t\t\t\t\tposition.top += myOffset + atOffset + offset;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tflipfit: {\n\t\tleft: function() {\n\t\t\t$.ui.position.flip.left.apply( this, arguments );\n\t\t\t$.ui.position.fit.left.apply( this, arguments );\n\t\t},\n\t\ttop: function() {\n\t\t\t$.ui.position.flip.top.apply( this, arguments );\n\t\t\t$.ui.position.fit.top.apply( this, arguments );\n\t\t}\n\t}\n};\n\n} )();\n\nreturn $.ui.position;\n\n} ) );\n",
    "( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\nreturn $.ui.safeActiveElement = function( document ) {\n\tvar activeElement;\n\n\t// Support: IE 9 only\n\t// IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n\ttry {\n\t\tactiveElement = document.activeElement;\n\t} catch ( error ) {\n\t\tactiveElement = document.body;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE may return null instead of an element\n\t// Interestingly, this only seems to occur when NOT in an iframe\n\tif ( !activeElement ) {\n\t\tactiveElement = document.body;\n\t}\n\n\t// Support: IE 11 only\n\t// IE11 returns a seemingly empty object in some cases when accessing\n\t// document.activeElement from an <iframe>\n\tif ( !activeElement.nodeName ) {\n\t\tactiveElement = document.body;\n\t}\n\n\treturn activeElement;\n};\n\n} ) );\n",
    "( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\nreturn $.ui.safeBlur = function( element ) {\n\n\t// Support: IE9 - 10 only\n\t// If the <body> is blurred, IE will switch windows, see #9420\n\tif ( element && element.nodeName.toLowerCase() !== \"body\" ) {\n\t\t$( element ).trigger( \"blur\" );\n\t}\n};\n\n} ) );\n",
    "/*!\n * jQuery UI Scroll Parent 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: scrollParent\n//>>group: Core\n//>>description: Get the closest ancestor element that is scrollable.\n//>>docs: http://api.jqueryui.com/scrollParent/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\n\nreturn $.fn.scrollParent = function( includeHidden ) {\n\tvar position = this.css( \"position\" ),\n\t\texcludeStaticParent = position === \"absolute\",\n\t\toverflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\n\t\tscrollParent = this.parents().filter( function() {\n\t\t\tvar parent = $( this );\n\t\t\tif ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\n\t\t\t\tparent.css( \"overflow-x\" ) );\n\t\t} ).eq( 0 );\n\n\treturn position === \"fixed\" || !scrollParent.length ?\n\t\t$( this[ 0 ].ownerDocument || document ) :\n\t\tscrollParent;\n};\n\n} ) );\n",
    "/*!\n * jQuery UI Tabbable 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: :tabbable Selector\n//>>group: Core\n//>>description: Selects elements which can be tabbed to.\n//>>docs: http://api.jqueryui.com/tabbable-selector/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\", \"./focusable\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\n\nreturn $.extend( $.expr[ \":\" ], {\n\ttabbable: function( element ) {\n\t\tvar tabIndex = $.attr( element, \"tabindex\" ),\n\t\t\thasTabindex = tabIndex != null;\n\t\treturn ( !hasTabindex || tabIndex >= 0 ) && $.ui.focusable( element, hasTabindex );\n\t}\n} );\n\n} ) );\n",
    "/*!\n * jQuery UI Unique ID 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: uniqueId\n//>>group: Core\n//>>description: Functions to generate and remove uniqueId's\n//>>docs: http://api.jqueryui.com/uniqueId/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\n\nreturn $.fn.extend( {\n\tuniqueId: ( function() {\n\t\tvar uuid = 0;\n\n\t\treturn function() {\n\t\t\treturn this.each( function() {\n\t\t\t\tif ( !this.id ) {\n\t\t\t\t\tthis.id = \"ui-id-\" + ( ++uuid );\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\t} )(),\n\n\tremoveUniqueId: function() {\n\t\treturn this.each( function() {\n\t\t\tif ( /^ui-id-\\d+$/.test( this.id ) ) {\n\t\t\t\t$( this ).removeAttr( \"id\" );\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n} ) );\n",
    "( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} ( function( $ ) {\n\n$.ui = $.ui || {};\n\nreturn $.ui.version = \"1.12.1\";\n\n} ) );\n",
    "/*!\n * jQuery UI Widget 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Widget\n//>>group: Core\n//>>description: Provides a factory for creating stateful widgets with a common API.\n//>>docs: http://api.jqueryui.com/jQuery.widget/\n//>>demos: http://jqueryui.com/widget/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\nvar widgetUuid = 0;\nvar widgetSlice = Array.prototype.slice;\n\n$.cleanData = ( function( orig ) {\n\treturn function( elems ) {\n\t\tvar events, elem, i;\n\t\tfor ( i = 0; ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\ttry {\n\n\t\t\t\t// Only trigger remove when necessary to save time\n\t\t\t\tevents = $._data( elem, \"events\" );\n\t\t\t\tif ( events && events.remove ) {\n\t\t\t\t\t$( elem ).triggerHandler( \"remove\" );\n\t\t\t\t}\n\n\t\t\t// Http://bugs.jquery.com/ticket/8235\n\t\t\t} catch ( e ) {}\n\t\t}\n\t\torig( elems );\n\t};\n} )( $.cleanData );\n\n$.widget = function( name, base, prototype ) {\n\tvar existingConstructor, constructor, basePrototype;\n\n\t// ProxiedPrototype allows the provided prototype to remain unmodified\n\t// so that it can be used as a mixin for multiple widgets (#8876)\n\tvar proxiedPrototype = {};\n\n\tvar namespace = name.split( \".\" )[ 0 ];\n\tname = name.split( \".\" )[ 1 ];\n\tvar fullName = namespace + \"-\" + name;\n\n\tif ( !prototype ) {\n\t\tprototype = base;\n\t\tbase = $.Widget;\n\t}\n\n\tif ( $.isArray( prototype ) ) {\n\t\tprototype = $.extend.apply( null, [ {} ].concat( prototype ) );\n\t}\n\n\t// Create selector for plugin\n\t$.expr[ \":\" ][ fullName.toLowerCase() ] = function( elem ) {\n\t\treturn !!$.data( elem, fullName );\n\t};\n\n\t$[ namespace ] = $[ namespace ] || {};\n\texistingConstructor = $[ namespace ][ name ];\n\tconstructor = $[ namespace ][ name ] = function( options, element ) {\n\n\t\t// Allow instantiation without \"new\" keyword\n\t\tif ( !this._createWidget ) {\n\t\t\treturn new constructor( options, element );\n\t\t}\n\n\t\t// Allow instantiation without initializing for simple inheritance\n\t\t// must use \"new\" keyword (the code above always passes args)\n\t\tif ( arguments.length ) {\n\t\t\tthis._createWidget( options, element );\n\t\t}\n\t};\n\n\t// Extend with the existing constructor to carry over any static properties\n\t$.extend( constructor, existingConstructor, {\n\t\tversion: prototype.version,\n\n\t\t// Copy the object used to create the prototype in case we need to\n\t\t// redefine the widget later\n\t\t_proto: $.extend( {}, prototype ),\n\n\t\t// Track widgets that inherit from this widget in case this widget is\n\t\t// redefined after a widget inherits from it\n\t\t_childConstructors: []\n\t} );\n\n\tbasePrototype = new base();\n\n\t// We need to make the options hash a property directly on the new instance\n\t// otherwise we'll modify the options hash on the prototype that we're\n\t// inheriting from\n\tbasePrototype.options = $.widget.extend( {}, basePrototype.options );\n\t$.each( prototype, function( prop, value ) {\n\t\tif ( !$.isFunction( value ) ) {\n\t\t\tproxiedPrototype[ prop ] = value;\n\t\t\treturn;\n\t\t}\n\t\tproxiedPrototype[ prop ] = ( function() {\n\t\t\tfunction _super() {\n\t\t\t\treturn base.prototype[ prop ].apply( this, arguments );\n\t\t\t}\n\n\t\t\tfunction _superApply( args ) {\n\t\t\t\treturn base.prototype[ prop ].apply( this, args );\n\t\t\t}\n\n\t\t\treturn function() {\n\t\t\t\tvar __super = this._super;\n\t\t\t\tvar __superApply = this._superApply;\n\t\t\t\tvar returnValue;\n\n\t\t\t\tthis._super = _super;\n\t\t\t\tthis._superApply = _superApply;\n\n\t\t\t\treturnValue = value.apply( this, arguments );\n\n\t\t\t\tthis._super = __super;\n\t\t\t\tthis._superApply = __superApply;\n\n\t\t\t\treturn returnValue;\n\t\t\t};\n\t\t} )();\n\t} );\n\tconstructor.prototype = $.widget.extend( basePrototype, {\n\n\t\t// TODO: remove support for widgetEventPrefix\n\t\t// always use the name + a colon as the prefix, e.g., draggable:start\n\t\t// don't prefix for widgets that aren't DOM-based\n\t\twidgetEventPrefix: existingConstructor ? ( basePrototype.widgetEventPrefix || name ) : name\n\t}, proxiedPrototype, {\n\t\tconstructor: constructor,\n\t\tnamespace: namespace,\n\t\twidgetName: name,\n\t\twidgetFullName: fullName\n\t} );\n\n\t// If this widget is being redefined then we need to find all widgets that\n\t// are inheriting from it and redefine all of them so that they inherit from\n\t// the new version of this widget. We're essentially trying to replace one\n\t// level in the prototype chain.\n\tif ( existingConstructor ) {\n\t\t$.each( existingConstructor._childConstructors, function( i, child ) {\n\t\t\tvar childPrototype = child.prototype;\n\n\t\t\t// Redefine the child widget using the same prototype that was\n\t\t\t// originally used, but inherit from the new version of the base\n\t\t\t$.widget( childPrototype.namespace + \".\" + childPrototype.widgetName, constructor,\n\t\t\t\tchild._proto );\n\t\t} );\n\n\t\t// Remove the list of existing child constructors from the old constructor\n\t\t// so the old child constructors can be garbage collected\n\t\tdelete existingConstructor._childConstructors;\n\t} else {\n\t\tbase._childConstructors.push( constructor );\n\t}\n\n\t$.widget.bridge( name, constructor );\n\n\treturn constructor;\n};\n\n$.widget.extend = function( target ) {\n\tvar input = widgetSlice.call( arguments, 1 );\n\tvar inputIndex = 0;\n\tvar inputLength = input.length;\n\tvar key;\n\tvar value;\n\n\tfor ( ; inputIndex < inputLength; inputIndex++ ) {\n\t\tfor ( key in input[ inputIndex ] ) {\n\t\t\tvalue = input[ inputIndex ][ key ];\n\t\t\tif ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {\n\n\t\t\t\t// Clone objects\n\t\t\t\tif ( $.isPlainObject( value ) ) {\n\t\t\t\t\ttarget[ key ] = $.isPlainObject( target[ key ] ) ?\n\t\t\t\t\t\t$.widget.extend( {}, target[ key ], value ) :\n\n\t\t\t\t\t\t// Don't extend strings, arrays, etc. with objects\n\t\t\t\t\t\t$.widget.extend( {}, value );\n\n\t\t\t\t// Copy everything else by reference\n\t\t\t\t} else {\n\t\t\t\t\ttarget[ key ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn target;\n};\n\n$.widget.bridge = function( name, object ) {\n\tvar fullName = object.prototype.widgetFullName || name;\n\t$.fn[ name ] = function( options ) {\n\t\tvar isMethodCall = typeof options === \"string\";\n\t\tvar args = widgetSlice.call( arguments, 1 );\n\t\tvar returnValue = this;\n\n\t\tif ( isMethodCall ) {\n\n\t\t\t// If this is an empty collection, we need to have the instance method\n\t\t\t// return undefined instead of the jQuery instance\n\t\t\tif ( !this.length && options === \"instance\" ) {\n\t\t\t\treturnValue = undefined;\n\t\t\t} else {\n\t\t\t\tthis.each( function() {\n\t\t\t\t\tvar methodValue;\n\t\t\t\t\tvar instance = $.data( this, fullName );\n\n\t\t\t\t\tif ( options === \"instance\" ) {\n\t\t\t\t\t\treturnValue = instance;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !instance ) {\n\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\n\t\t\t\t\t\t\t\" prior to initialization; \" +\n\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\n\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\n\t\t\t\t\t\t\t\" widget instance\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\n\n\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\n\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\n\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\n\t\t\t\t\t\t\tmethodValue;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Allow multiple hashes to be passed on init\n\t\t\tif ( args.length ) {\n\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\n\t\t\t}\n\n\t\t\tthis.each( function() {\n\t\t\t\tvar instance = $.data( this, fullName );\n\t\t\t\tif ( instance ) {\n\t\t\t\t\tinstance.option( options || {} );\n\t\t\t\t\tif ( instance._init ) {\n\t\t\t\t\t\tinstance._init();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$.data( this, fullName, new object( options, this ) );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn returnValue;\n\t};\n};\n\n$.Widget = function( /* options, element */ ) {};\n$.Widget._childConstructors = [];\n\n$.Widget.prototype = {\n\twidgetName: \"widget\",\n\twidgetEventPrefix: \"\",\n\tdefaultElement: \"<div>\",\n\n\toptions: {\n\t\tclasses: {},\n\t\tdisabled: false,\n\n\t\t// Callbacks\n\t\tcreate: null\n\t},\n\n\t_createWidget: function( options, element ) {\n\t\telement = $( element || this.defaultElement || this )[ 0 ];\n\t\tthis.element = $( element );\n\t\tthis.uuid = widgetUuid++;\n\t\tthis.eventNamespace = \".\" + this.widgetName + this.uuid;\n\n\t\tthis.bindings = $();\n\t\tthis.hoverable = $();\n\t\tthis.focusable = $();\n\t\tthis.classesElementLookup = {};\n\n\t\tif ( element !== this ) {\n\t\t\t$.data( element, this.widgetFullName, this );\n\t\t\tthis._on( true, this.element, {\n\t\t\t\tremove: function( event ) {\n\t\t\t\t\tif ( event.target === element ) {\n\t\t\t\t\t\tthis.destroy();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis.document = $( element.style ?\n\n\t\t\t\t// Element within the document\n\t\t\t\telement.ownerDocument :\n\n\t\t\t\t// Element is window or document\n\t\t\t\telement.document || element );\n\t\t\tthis.window = $( this.document[ 0 ].defaultView || this.document[ 0 ].parentWindow );\n\t\t}\n\n\t\tthis.options = $.widget.extend( {},\n\t\t\tthis.options,\n\t\t\tthis._getCreateOptions(),\n\t\t\toptions );\n\n\t\tthis._create();\n\n\t\tif ( this.options.disabled ) {\n\t\t\tthis._setOptionDisabled( this.options.disabled );\n\t\t}\n\n\t\tthis._trigger( \"create\", null, this._getCreateEventData() );\n\t\tthis._init();\n\t},\n\n\t_getCreateOptions: function() {\n\t\treturn {};\n\t},\n\n\t_getCreateEventData: $.noop,\n\n\t_create: $.noop,\n\n\t_init: $.noop,\n\n\tdestroy: function() {\n\t\tvar that = this;\n\n\t\tthis._destroy();\n\t\t$.each( this.classesElementLookup, function( key, value ) {\n\t\t\tthat._removeClass( value, key );\n\t\t} );\n\n\t\t// We can probably remove the unbind calls in 2.0\n\t\t// all event bindings should go through this._on()\n\t\tthis.element\n\t\t\t.off( this.eventNamespace )\n\t\t\t.removeData( this.widgetFullName );\n\t\tthis.widget()\n\t\t\t.off( this.eventNamespace )\n\t\t\t.removeAttr( \"aria-disabled\" );\n\n\t\t// Clean up events and states\n\t\tthis.bindings.off( this.eventNamespace );\n\t},\n\n\t_destroy: $.noop,\n\n\twidget: function() {\n\t\treturn this.element;\n\t},\n\n\toption: function( key, value ) {\n\t\tvar options = key;\n\t\tvar parts;\n\t\tvar curOption;\n\t\tvar i;\n\n\t\tif ( arguments.length === 0 ) {\n\n\t\t\t// Don't return a reference to the internal hash\n\t\t\treturn $.widget.extend( {}, this.options );\n\t\t}\n\n\t\tif ( typeof key === \"string\" ) {\n\n\t\t\t// Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\n\t\t\toptions = {};\n\t\t\tparts = key.split( \".\" );\n\t\t\tkey = parts.shift();\n\t\t\tif ( parts.length ) {\n\t\t\t\tcurOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );\n\t\t\t\tfor ( i = 0; i < parts.length - 1; i++ ) {\n\t\t\t\t\tcurOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\n\t\t\t\t\tcurOption = curOption[ parts[ i ] ];\n\t\t\t\t}\n\t\t\t\tkey = parts.pop();\n\t\t\t\tif ( arguments.length === 1 ) {\n\t\t\t\t\treturn curOption[ key ] === undefined ? null : curOption[ key ];\n\t\t\t\t}\n\t\t\t\tcurOption[ key ] = value;\n\t\t\t} else {\n\t\t\t\tif ( arguments.length === 1 ) {\n\t\t\t\t\treturn this.options[ key ] === undefined ? null : this.options[ key ];\n\t\t\t\t}\n\t\t\t\toptions[ key ] = value;\n\t\t\t}\n\t\t}\n\n\t\tthis._setOptions( options );\n\n\t\treturn this;\n\t},\n\n\t_setOptions: function( options ) {\n\t\tvar key;\n\n\t\tfor ( key in options ) {\n\t\t\tthis._setOption( key, options[ key ] );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tif ( key === \"classes\" ) {\n\t\t\tthis._setOptionClasses( value );\n\t\t}\n\n\t\tthis.options[ key ] = value;\n\n\t\tif ( key === \"disabled\" ) {\n\t\t\tthis._setOptionDisabled( value );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t_setOptionClasses: function( value ) {\n\t\tvar classKey, elements, currentElements;\n\n\t\tfor ( classKey in value ) {\n\t\t\tcurrentElements = this.classesElementLookup[ classKey ];\n\t\t\tif ( value[ classKey ] === this.options.classes[ classKey ] ||\n\t\t\t\t\t!currentElements ||\n\t\t\t\t\t!currentElements.length ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// We are doing this to create a new jQuery object because the _removeClass() call\n\t\t\t// on the next line is going to destroy the reference to the current elements being\n\t\t\t// tracked. We need to save a copy of this collection so that we can add the new classes\n\t\t\t// below.\n\t\t\telements = $( currentElements.get() );\n\t\t\tthis._removeClass( currentElements, classKey );\n\n\t\t\t// We don't use _addClass() here, because that uses this.options.classes\n\t\t\t// for generating the string of classes. We want to use the value passed in from\n\t\t\t// _setOption(), this is the new value of the classes option which was passed to\n\t\t\t// _setOption(). We pass this value directly to _classes().\n\t\t\telements.addClass( this._classes( {\n\t\t\t\telement: elements,\n\t\t\t\tkeys: classKey,\n\t\t\t\tclasses: value,\n\t\t\t\tadd: true\n\t\t\t} ) );\n\t\t}\n\t},\n\n\t_setOptionDisabled: function( value ) {\n\t\tthis._toggleClass( this.widget(), this.widgetFullName + \"-disabled\", null, !!value );\n\n\t\t// If the widget is becoming disabled, then nothing is interactive\n\t\tif ( value ) {\n\t\t\tthis._removeClass( this.hoverable, null, \"ui-state-hover\" );\n\t\t\tthis._removeClass( this.focusable, null, \"ui-state-focus\" );\n\t\t}\n\t},\n\n\tenable: function() {\n\t\treturn this._setOptions( { disabled: false } );\n\t},\n\n\tdisable: function() {\n\t\treturn this._setOptions( { disabled: true } );\n\t},\n\n\t_classes: function( options ) {\n\t\tvar full = [];\n\t\tvar that = this;\n\n\t\toptions = $.extend( {\n\t\t\telement: this.element,\n\t\t\tclasses: this.options.classes || {}\n\t\t}, options );\n\n\t\tfunction processClassString( classes, checkOption ) {\n\t\t\tvar current, i;\n\t\t\tfor ( i = 0; i < classes.length; i++ ) {\n\t\t\t\tcurrent = that.classesElementLookup[ classes[ i ] ] || $();\n\t\t\t\tif ( options.add ) {\n\t\t\t\t\tcurrent = $( $.unique( current.get().concat( options.element.get() ) ) );\n\t\t\t\t} else {\n\t\t\t\t\tcurrent = $( current.not( options.element ).get() );\n\t\t\t\t}\n\t\t\t\tthat.classesElementLookup[ classes[ i ] ] = current;\n\t\t\t\tfull.push( classes[ i ] );\n\t\t\t\tif ( checkOption && options.classes[ classes[ i ] ] ) {\n\t\t\t\t\tfull.push( options.classes[ classes[ i ] ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._on( options.element, {\n\t\t\t\"remove\": \"_untrackClassesElement\"\n\t\t} );\n\n\t\tif ( options.keys ) {\n\t\t\tprocessClassString( options.keys.match( /\\S+/g ) || [], true );\n\t\t}\n\t\tif ( options.extra ) {\n\t\t\tprocessClassString( options.extra.match( /\\S+/g ) || [] );\n\t\t}\n\n\t\treturn full.join( \" \" );\n\t},\n\n\t_untrackClassesElement: function( event ) {\n\t\tvar that = this;\n\t\t$.each( that.classesElementLookup, function( key, value ) {\n\t\t\tif ( $.inArray( event.target, value ) !== -1 ) {\n\t\t\t\tthat.classesElementLookup[ key ] = $( value.not( event.target ).get() );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_removeClass: function( element, keys, extra ) {\n\t\treturn this._toggleClass( element, keys, extra, false );\n\t},\n\n\t_addClass: function( element, keys, extra ) {\n\t\treturn this._toggleClass( element, keys, extra, true );\n\t},\n\n\t_toggleClass: function( element, keys, extra, add ) {\n\t\tadd = ( typeof add === \"boolean\" ) ? add : extra;\n\t\tvar shift = ( typeof element === \"string\" || element === null ),\n\t\t\toptions = {\n\t\t\t\textra: shift ? keys : extra,\n\t\t\t\tkeys: shift ? element : keys,\n\t\t\t\telement: shift ? this.element : element,\n\t\t\t\tadd: add\n\t\t\t};\n\t\toptions.element.toggleClass( this._classes( options ), add );\n\t\treturn this;\n\t},\n\n\t_on: function( suppressDisabledCheck, element, handlers ) {\n\t\tvar delegateElement;\n\t\tvar instance = this;\n\n\t\t// No suppressDisabledCheck flag, shuffle arguments\n\t\tif ( typeof suppressDisabledCheck !== \"boolean\" ) {\n\t\t\thandlers = element;\n\t\t\telement = suppressDisabledCheck;\n\t\t\tsuppressDisabledCheck = false;\n\t\t}\n\n\t\t// No element argument, shuffle and use this.element\n\t\tif ( !handlers ) {\n\t\t\thandlers = element;\n\t\t\telement = this.element;\n\t\t\tdelegateElement = this.widget();\n\t\t} else {\n\t\t\telement = delegateElement = $( element );\n\t\t\tthis.bindings = this.bindings.add( element );\n\t\t}\n\n\t\t$.each( handlers, function( event, handler ) {\n\t\t\tfunction handlerProxy() {\n\n\t\t\t\t// Allow widgets to customize the disabled handling\n\t\t\t\t// - disabled as an array instead of boolean\n\t\t\t\t// - disabled class as method for disabling individual parts\n\t\t\t\tif ( !suppressDisabledCheck &&\n\t\t\t\t\t\t( instance.options.disabled === true ||\n\t\t\t\t\t\t$( this ).hasClass( \"ui-state-disabled\" ) ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\n\t\t\t\t\t.apply( instance, arguments );\n\t\t\t}\n\n\t\t\t// Copy the guid so direct unbinding works\n\t\t\tif ( typeof handler !== \"string\" ) {\n\t\t\t\thandlerProxy.guid = handler.guid =\n\t\t\t\t\thandler.guid || handlerProxy.guid || $.guid++;\n\t\t\t}\n\n\t\t\tvar match = event.match( /^([\\w:-]*)\\s*(.*)$/ );\n\t\t\tvar eventName = match[ 1 ] + instance.eventNamespace;\n\t\t\tvar selector = match[ 2 ];\n\n\t\t\tif ( selector ) {\n\t\t\t\tdelegateElement.on( eventName, selector, handlerProxy );\n\t\t\t} else {\n\t\t\t\telement.on( eventName, handlerProxy );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_off: function( element, eventName ) {\n\t\teventName = ( eventName || \"\" ).split( \" \" ).join( this.eventNamespace + \" \" ) +\n\t\t\tthis.eventNamespace;\n\t\telement.off( eventName ).off( eventName );\n\n\t\t// Clear the stack to avoid memory leaks (#10056)\n\t\tthis.bindings = $( this.bindings.not( element ).get() );\n\t\tthis.focusable = $( this.focusable.not( element ).get() );\n\t\tthis.hoverable = $( this.hoverable.not( element ).get() );\n\t},\n\n\t_delay: function( handler, delay ) {\n\t\tfunction handlerProxy() {\n\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\n\t\t\t\t.apply( instance, arguments );\n\t\t}\n\t\tvar instance = this;\n\t\treturn setTimeout( handlerProxy, delay || 0 );\n\t},\n\n\t_hoverable: function( element ) {\n\t\tthis.hoverable = this.hoverable.add( element );\n\t\tthis._on( element, {\n\t\t\tmouseenter: function( event ) {\n\t\t\t\tthis._addClass( $( event.currentTarget ), null, \"ui-state-hover\" );\n\t\t\t},\n\t\t\tmouseleave: function( event ) {\n\t\t\t\tthis._removeClass( $( event.currentTarget ), null, \"ui-state-hover\" );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_focusable: function( element ) {\n\t\tthis.focusable = this.focusable.add( element );\n\t\tthis._on( element, {\n\t\t\tfocusin: function( event ) {\n\t\t\t\tthis._addClass( $( event.currentTarget ), null, \"ui-state-focus\" );\n\t\t\t},\n\t\t\tfocusout: function( event ) {\n\t\t\t\tthis._removeClass( $( event.currentTarget ), null, \"ui-state-focus\" );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_trigger: function( type, event, data ) {\n\t\tvar prop, orig;\n\t\tvar callback = this.options[ type ];\n\n\t\tdata = data || {};\n\t\tevent = $.Event( event );\n\t\tevent.type = ( type === this.widgetEventPrefix ?\n\t\t\ttype :\n\t\t\tthis.widgetEventPrefix + type ).toLowerCase();\n\n\t\t// The original event may come from any element\n\t\t// so we need to reset the target on the new event\n\t\tevent.target = this.element[ 0 ];\n\n\t\t// Copy original event properties over to the new event\n\t\torig = event.originalEvent;\n\t\tif ( orig ) {\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tif ( !( prop in event ) ) {\n\t\t\t\t\tevent[ prop ] = orig[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element.trigger( event, data );\n\t\treturn !( $.isFunction( callback ) &&\n\t\t\tcallback.apply( this.element[ 0 ], [ event ].concat( data ) ) === false ||\n\t\t\tevent.isDefaultPrevented() );\n\t}\n};\n\n$.each( { show: \"fadeIn\", hide: \"fadeOut\" }, function( method, defaultEffect ) {\n\t$.Widget.prototype[ \"_\" + method ] = function( element, options, callback ) {\n\t\tif ( typeof options === \"string\" ) {\n\t\t\toptions = { effect: options };\n\t\t}\n\n\t\tvar hasOptions;\n\t\tvar effectName = !options ?\n\t\t\tmethod :\n\t\t\toptions === true || typeof options === \"number\" ?\n\t\t\t\tdefaultEffect :\n\t\t\t\toptions.effect || defaultEffect;\n\n\t\toptions = options || {};\n\t\tif ( typeof options === \"number\" ) {\n\t\t\toptions = { duration: options };\n\t\t}\n\n\t\thasOptions = !$.isEmptyObject( options );\n\t\toptions.complete = callback;\n\n\t\tif ( options.delay ) {\n\t\t\telement.delay( options.delay );\n\t\t}\n\n\t\tif ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {\n\t\t\telement[ method ]( options );\n\t\t} else if ( effectName !== method && element[ effectName ] ) {\n\t\t\telement[ effectName ]( options.duration, options.easing, callback );\n\t\t} else {\n\t\t\telement.queue( function( next ) {\n\t\t\t\t$( this )[ method ]();\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback.call( element[ 0 ] );\n\t\t\t\t}\n\t\t\t\tnext();\n\t\t\t} );\n\t\t}\n\t};\n} );\n\nreturn $.widget;\n\n} ) );\n",
    "/*!\n * jQuery UI Autocomplete 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Autocomplete\n//>>group: Widgets\n//>>description: Lists suggested words as the user is typing.\n//>>docs: http://api.jqueryui.com/autocomplete/\n//>>demos: http://jqueryui.com/autocomplete/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/autocomplete.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"./menu\",\n\t\t\t\"../keycode\",\n\t\t\t\"../position\",\n\t\t\t\"../safe-active-element\",\n\t\t\t\"../version\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\n$.widget( \"ui.autocomplete\", {\n\tversion: \"1.12.1\",\n\tdefaultElement: \"<input>\",\n\toptions: {\n\t\tappendTo: null,\n\t\tautoFocus: false,\n\t\tdelay: 300,\n\t\tminLength: 1,\n\t\tposition: {\n\t\t\tmy: \"left top\",\n\t\t\tat: \"left bottom\",\n\t\t\tcollision: \"none\"\n\t\t},\n\t\tsource: null,\n\n\t\t// Callbacks\n\t\tchange: null,\n\t\tclose: null,\n\t\tfocus: null,\n\t\topen: null,\n\t\tresponse: null,\n\t\tsearch: null,\n\t\tselect: null\n\t},\n\n\trequestIndex: 0,\n\tpending: 0,\n\n\t_create: function() {\n\n\t\t// Some browsers only repeat keydown events, not keypress events,\n\t\t// so we use the suppressKeyPress flag to determine if we've already\n\t\t// handled the keydown event. #7269\n\t\t// Unfortunately the code for & in keypress is the same as the up arrow,\n\t\t// so we use the suppressKeyPressRepeat flag to avoid handling keypress\n\t\t// events when we know the keydown event was used to modify the\n\t\t// search term. #7799\n\t\tvar suppressKeyPress, suppressKeyPressRepeat, suppressInput,\n\t\t\tnodeName = this.element[ 0 ].nodeName.toLowerCase(),\n\t\t\tisTextarea = nodeName === \"textarea\",\n\t\t\tisInput = nodeName === \"input\";\n\n\t\t// Textareas are always multi-line\n\t\t// Inputs are always single-line, even if inside a contentEditable element\n\t\t// IE also treats inputs as contentEditable\n\t\t// All other element types are determined by whether or not they're contentEditable\n\t\tthis.isMultiLine = isTextarea || !isInput && this._isContentEditable( this.element );\n\n\t\tthis.valueMethod = this.element[ isTextarea || isInput ? \"val\" : \"text\" ];\n\t\tthis.isNewMenu = true;\n\n\t\tthis._addClass( \"ui-autocomplete-input\" );\n\t\tthis.element.attr( \"autocomplete\", \"off\" );\n\n\t\tthis._on( this.element, {\n\t\t\tkeydown: function( event ) {\n\t\t\t\tif ( this.element.prop( \"readOnly\" ) ) {\n\t\t\t\t\tsuppressKeyPress = true;\n\t\t\t\t\tsuppressInput = true;\n\t\t\t\t\tsuppressKeyPressRepeat = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsuppressKeyPress = false;\n\t\t\t\tsuppressInput = false;\n\t\t\t\tsuppressKeyPressRepeat = false;\n\t\t\t\tvar keyCode = $.ui.keyCode;\n\t\t\t\tswitch ( event.keyCode ) {\n\t\t\t\tcase keyCode.PAGE_UP:\n\t\t\t\t\tsuppressKeyPress = true;\n\t\t\t\t\tthis._move( \"previousPage\", event );\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyCode.PAGE_DOWN:\n\t\t\t\t\tsuppressKeyPress = true;\n\t\t\t\t\tthis._move( \"nextPage\", event );\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyCode.UP:\n\t\t\t\t\tsuppressKeyPress = true;\n\t\t\t\t\tthis._keyEvent( \"previous\", event );\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyCode.DOWN:\n\t\t\t\t\tsuppressKeyPress = true;\n\t\t\t\t\tthis._keyEvent( \"next\", event );\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyCode.ENTER:\n\n\t\t\t\t\t// when menu is open and has focus\n\t\t\t\t\tif ( this.menu.active ) {\n\n\t\t\t\t\t\t// #6055 - Opera still allows the keypress to occur\n\t\t\t\t\t\t// which causes forms to submit\n\t\t\t\t\t\tsuppressKeyPress = true;\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tthis.menu.select( event );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyCode.TAB:\n\t\t\t\t\tif ( this.menu.active ) {\n\t\t\t\t\t\tthis.menu.select( event );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyCode.ESCAPE:\n\t\t\t\t\tif ( this.menu.element.is( \":visible\" ) ) {\n\t\t\t\t\t\tif ( !this.isMultiLine ) {\n\t\t\t\t\t\t\tthis._value( this.term );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.close( event );\n\n\t\t\t\t\t\t// Different browsers have different default behavior for escape\n\t\t\t\t\t\t// Single press can mean undo or clear\n\t\t\t\t\t\t// Double press in IE means clear the whole form\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tsuppressKeyPressRepeat = true;\n\n\t\t\t\t\t// search timeout should be triggered before the input value is changed\n\t\t\t\t\tthis._searchTimeout( event );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\t\t\tkeypress: function( event ) {\n\t\t\t\tif ( suppressKeyPress ) {\n\t\t\t\t\tsuppressKeyPress = false;\n\t\t\t\t\tif ( !this.isMultiLine || this.menu.element.is( \":visible\" ) ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( suppressKeyPressRepeat ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Replicate some key handlers to allow them to repeat in Firefox and Opera\n\t\t\t\tvar keyCode = $.ui.keyCode;\n\t\t\t\tswitch ( event.keyCode ) {\n\t\t\t\tcase keyCode.PAGE_UP:\n\t\t\t\t\tthis._move( \"previousPage\", event );\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyCode.PAGE_DOWN:\n\t\t\t\t\tthis._move( \"nextPage\", event );\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyCode.UP:\n\t\t\t\t\tthis._keyEvent( \"previous\", event );\n\t\t\t\t\tbreak;\n\t\t\t\tcase keyCode.DOWN:\n\t\t\t\t\tthis._keyEvent( \"next\", event );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\t\t\tinput: function( event ) {\n\t\t\t\tif ( suppressInput ) {\n\t\t\t\t\tsuppressInput = false;\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._searchTimeout( event );\n\t\t\t},\n\t\t\tfocus: function() {\n\t\t\t\tthis.selectedItem = null;\n\t\t\t\tthis.previous = this._value();\n\t\t\t},\n\t\t\tblur: function( event ) {\n\t\t\t\tif ( this.cancelBlur ) {\n\t\t\t\t\tdelete this.cancelBlur;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tclearTimeout( this.searching );\n\t\t\t\tthis.close( event );\n\t\t\t\tthis._change( event );\n\t\t\t}\n\t\t} );\n\n\t\tthis._initSource();\n\t\tthis.menu = $( \"<ul>\" )\n\t\t\t.appendTo( this._appendTo() )\n\t\t\t.menu( {\n\n\t\t\t\t// disable ARIA support, the live region takes care of that\n\t\t\t\trole: null\n\t\t\t} )\n\t\t\t.hide()\n\t\t\t.menu( \"instance\" );\n\n\t\tthis._addClass( this.menu.element, \"ui-autocomplete\", \"ui-front\" );\n\t\tthis._on( this.menu.element, {\n\t\t\tmousedown: function( event ) {\n\n\t\t\t\t// prevent moving focus out of the text field\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\t// IE doesn't prevent moving focus even with event.preventDefault()\n\t\t\t\t// so we set a flag to know when we should ignore the blur event\n\t\t\t\tthis.cancelBlur = true;\n\t\t\t\tthis._delay( function() {\n\t\t\t\t\tdelete this.cancelBlur;\n\n\t\t\t\t\t// Support: IE 8 only\n\t\t\t\t\t// Right clicking a menu item or selecting text from the menu items will\n\t\t\t\t\t// result in focus moving out of the input. However, we've already received\n\t\t\t\t\t// and ignored the blur event because of the cancelBlur flag set above. So\n\t\t\t\t\t// we restore focus to ensure that the menu closes properly based on the user's\n\t\t\t\t\t// next actions.\n\t\t\t\t\tif ( this.element[ 0 ] !== $.ui.safeActiveElement( this.document[ 0 ] ) ) {\n\t\t\t\t\t\tthis.element.trigger( \"focus\" );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t},\n\t\t\tmenufocus: function( event, ui ) {\n\t\t\t\tvar label, item;\n\n\t\t\t\t// support: Firefox\n\t\t\t\t// Prevent accidental activation of menu items in Firefox (#7024 #9118)\n\t\t\t\tif ( this.isNewMenu ) {\n\t\t\t\t\tthis.isNewMenu = false;\n\t\t\t\t\tif ( event.originalEvent && /^mouse/.test( event.originalEvent.type ) ) {\n\t\t\t\t\t\tthis.menu.blur();\n\n\t\t\t\t\t\tthis.document.one( \"mousemove\", function() {\n\t\t\t\t\t\t\t$( event.target ).trigger( event.originalEvent );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\titem = ui.item.data( \"ui-autocomplete-item\" );\n\t\t\t\tif ( false !== this._trigger( \"focus\", event, { item: item } ) ) {\n\n\t\t\t\t\t// use value to match what will end up in the input, if it was a key event\n\t\t\t\t\tif ( event.originalEvent && /^key/.test( event.originalEvent.type ) ) {\n\t\t\t\t\t\tthis._value( item.value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Announce the value in the liveRegion\n\t\t\t\tlabel = ui.item.attr( \"aria-label\" ) || item.value;\n\t\t\t\tif ( label && $.trim( label ).length ) {\n\t\t\t\t\tthis.liveRegion.children().hide();\n\t\t\t\t\t$( \"<div>\" ).text( label ).appendTo( this.liveRegion );\n\t\t\t\t}\n\t\t\t},\n\t\t\tmenuselect: function( event, ui ) {\n\t\t\t\tvar item = ui.item.data( \"ui-autocomplete-item\" ),\n\t\t\t\t\tprevious = this.previous;\n\n\t\t\t\t// Only trigger when focus was lost (click on menu)\n\t\t\t\tif ( this.element[ 0 ] !== $.ui.safeActiveElement( this.document[ 0 ] ) ) {\n\t\t\t\t\tthis.element.trigger( \"focus\" );\n\t\t\t\t\tthis.previous = previous;\n\n\t\t\t\t\t// #6109 - IE triggers two focus events and the second\n\t\t\t\t\t// is asynchronous, so we need to reset the previous\n\t\t\t\t\t// term synchronously and asynchronously :-(\n\t\t\t\t\tthis._delay( function() {\n\t\t\t\t\t\tthis.previous = previous;\n\t\t\t\t\t\tthis.selectedItem = item;\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tif ( false !== this._trigger( \"select\", event, { item: item } ) ) {\n\t\t\t\t\tthis._value( item.value );\n\t\t\t\t}\n\n\t\t\t\t// reset the term after the select event\n\t\t\t\t// this allows custom select handling to work properly\n\t\t\t\tthis.term = this._value();\n\n\t\t\t\tthis.close( event );\n\t\t\t\tthis.selectedItem = item;\n\t\t\t}\n\t\t} );\n\n\t\tthis.liveRegion = $( \"<div>\", {\n\t\t\trole: \"status\",\n\t\t\t\"aria-live\": \"assertive\",\n\t\t\t\"aria-relevant\": \"additions\"\n\t\t} )\n\t\t\t.appendTo( this.document[ 0 ].body );\n\n\t\tthis._addClass( this.liveRegion, null, \"ui-helper-hidden-accessible\" );\n\n\t\t// Turning off autocomplete prevents the browser from remembering the\n\t\t// value when navigating through history, so we re-enable autocomplete\n\t\t// if the page is unloaded before the widget is destroyed. #7790\n\t\tthis._on( this.window, {\n\t\t\tbeforeunload: function() {\n\t\t\t\tthis.element.removeAttr( \"autocomplete\" );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_destroy: function() {\n\t\tclearTimeout( this.searching );\n\t\tthis.element.removeAttr( \"autocomplete\" );\n\t\tthis.menu.element.remove();\n\t\tthis.liveRegion.remove();\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tthis._super( key, value );\n\t\tif ( key === \"source\" ) {\n\t\t\tthis._initSource();\n\t\t}\n\t\tif ( key === \"appendTo\" ) {\n\t\t\tthis.menu.element.appendTo( this._appendTo() );\n\t\t}\n\t\tif ( key === \"disabled\" && value && this.xhr ) {\n\t\t\tthis.xhr.abort();\n\t\t}\n\t},\n\n\t_isEventTargetInWidget: function( event ) {\n\t\tvar menuElement = this.menu.element[ 0 ];\n\n\t\treturn event.target === this.element[ 0 ] ||\n\t\t\tevent.target === menuElement ||\n\t\t\t$.contains( menuElement, event.target );\n\t},\n\n\t_closeOnClickOutside: function( event ) {\n\t\tif ( !this._isEventTargetInWidget( event ) ) {\n\t\t\tthis.close();\n\t\t}\n\t},\n\n\t_appendTo: function() {\n\t\tvar element = this.options.appendTo;\n\n\t\tif ( element ) {\n\t\t\telement = element.jquery || element.nodeType ?\n\t\t\t\t$( element ) :\n\t\t\t\tthis.document.find( element ).eq( 0 );\n\t\t}\n\n\t\tif ( !element || !element[ 0 ] ) {\n\t\t\telement = this.element.closest( \".ui-front, dialog\" );\n\t\t}\n\n\t\tif ( !element.length ) {\n\t\t\telement = this.document[ 0 ].body;\n\t\t}\n\n\t\treturn element;\n\t},\n\n\t_initSource: function() {\n\t\tvar array, url,\n\t\t\tthat = this;\n\t\tif ( $.isArray( this.options.source ) ) {\n\t\t\tarray = this.options.source;\n\t\t\tthis.source = function( request, response ) {\n\t\t\t\tresponse( $.ui.autocomplete.filter( array, request.term ) );\n\t\t\t};\n\t\t} else if ( typeof this.options.source === \"string\" ) {\n\t\t\turl = this.options.source;\n\t\t\tthis.source = function( request, response ) {\n\t\t\t\tif ( that.xhr ) {\n\t\t\t\t\tthat.xhr.abort();\n\t\t\t\t}\n\t\t\t\tthat.xhr = $.ajax( {\n\t\t\t\t\turl: url,\n\t\t\t\t\tdata: request,\n\t\t\t\t\tdataType: \"json\",\n\t\t\t\t\tsuccess: function( data ) {\n\t\t\t\t\t\tresponse( data );\n\t\t\t\t\t},\n\t\t\t\t\terror: function() {\n\t\t\t\t\t\tresponse( [] );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t};\n\t\t} else {\n\t\t\tthis.source = this.options.source;\n\t\t}\n\t},\n\n\t_searchTimeout: function( event ) {\n\t\tclearTimeout( this.searching );\n\t\tthis.searching = this._delay( function() {\n\n\t\t\t// Search if the value has changed, or if the user retypes the same value (see #7434)\n\t\t\tvar equalValues = this.term === this._value(),\n\t\t\t\tmenuVisible = this.menu.element.is( \":visible\" ),\n\t\t\t\tmodifierKey = event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;\n\n\t\t\tif ( !equalValues || ( equalValues && !menuVisible && !modifierKey ) ) {\n\t\t\t\tthis.selectedItem = null;\n\t\t\t\tthis.search( null, event );\n\t\t\t}\n\t\t}, this.options.delay );\n\t},\n\n\tsearch: function( value, event ) {\n\t\tvalue = value != null ? value : this._value();\n\n\t\t// Always save the actual value, not the one passed as an argument\n\t\tthis.term = this._value();\n\n\t\tif ( value.length < this.options.minLength ) {\n\t\t\treturn this.close( event );\n\t\t}\n\n\t\tif ( this._trigger( \"search\", event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this._search( value );\n\t},\n\n\t_search: function( value ) {\n\t\tthis.pending++;\n\t\tthis._addClass( \"ui-autocomplete-loading\" );\n\t\tthis.cancelSearch = false;\n\n\t\tthis.source( { term: value }, this._response() );\n\t},\n\n\t_response: function() {\n\t\tvar index = ++this.requestIndex;\n\n\t\treturn $.proxy( function( content ) {\n\t\t\tif ( index === this.requestIndex ) {\n\t\t\t\tthis.__response( content );\n\t\t\t}\n\n\t\t\tthis.pending--;\n\t\t\tif ( !this.pending ) {\n\t\t\t\tthis._removeClass( \"ui-autocomplete-loading\" );\n\t\t\t}\n\t\t}, this );\n\t},\n\n\t__response: function( content ) {\n\t\tif ( content ) {\n\t\t\tcontent = this._normalize( content );\n\t\t}\n\t\tthis._trigger( \"response\", null, { content: content } );\n\t\tif ( !this.options.disabled && content && content.length && !this.cancelSearch ) {\n\t\t\tthis._suggest( content );\n\t\t\tthis._trigger( \"open\" );\n\t\t} else {\n\n\t\t\t// use ._close() instead of .close() so we don't cancel future searches\n\t\t\tthis._close();\n\t\t}\n\t},\n\n\tclose: function( event ) {\n\t\tthis.cancelSearch = true;\n\t\tthis._close( event );\n\t},\n\n\t_close: function( event ) {\n\n\t\t// Remove the handler that closes the menu on outside clicks\n\t\tthis._off( this.document, \"mousedown\" );\n\n\t\tif ( this.menu.element.is( \":visible\" ) ) {\n\t\t\tthis.menu.element.hide();\n\t\t\tthis.menu.blur();\n\t\t\tthis.isNewMenu = true;\n\t\t\tthis._trigger( \"close\", event );\n\t\t}\n\t},\n\n\t_change: function( event ) {\n\t\tif ( this.previous !== this._value() ) {\n\t\t\tthis._trigger( \"change\", event, { item: this.selectedItem } );\n\t\t}\n\t},\n\n\t_normalize: function( items ) {\n\n\t\t// assume all items have the right format when the first item is complete\n\t\tif ( items.length && items[ 0 ].label && items[ 0 ].value ) {\n\t\t\treturn items;\n\t\t}\n\t\treturn $.map( items, function( item ) {\n\t\t\tif ( typeof item === \"string\" ) {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: item,\n\t\t\t\t\tvalue: item\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn $.extend( {}, item, {\n\t\t\t\tlabel: item.label || item.value,\n\t\t\t\tvalue: item.value || item.label\n\t\t\t} );\n\t\t} );\n\t},\n\n\t_suggest: function( items ) {\n\t\tvar ul = this.menu.element.empty();\n\t\tthis._renderMenu( ul, items );\n\t\tthis.isNewMenu = true;\n\t\tthis.menu.refresh();\n\n\t\t// Size and position menu\n\t\tul.show();\n\t\tthis._resizeMenu();\n\t\tul.position( $.extend( {\n\t\t\tof: this.element\n\t\t}, this.options.position ) );\n\n\t\tif ( this.options.autoFocus ) {\n\t\t\tthis.menu.next();\n\t\t}\n\n\t\t// Listen for interactions outside of the widget (#6642)\n\t\tthis._on( this.document, {\n\t\t\tmousedown: \"_closeOnClickOutside\"\n\t\t} );\n\t},\n\n\t_resizeMenu: function() {\n\t\tvar ul = this.menu.element;\n\t\tul.outerWidth( Math.max(\n\n\t\t\t// Firefox wraps long text (possibly a rounding bug)\n\t\t\t// so we add 1px to avoid the wrapping (#7513)\n\t\t\tul.width( \"\" ).outerWidth() + 1,\n\t\t\tthis.element.outerWidth()\n\t\t) );\n\t},\n\n\t_renderMenu: function( ul, items ) {\n\t\tvar that = this;\n\t\t$.each( items, function( index, item ) {\n\t\t\tthat._renderItemData( ul, item );\n\t\t} );\n\t},\n\n\t_renderItemData: function( ul, item ) {\n\t\treturn this._renderItem( ul, item ).data( \"ui-autocomplete-item\", item );\n\t},\n\n\t_renderItem: function( ul, item ) {\n\t\treturn $( \"<li>\" )\n\t\t\t.append( $( \"<div>\" ).text( item.label ) )\n\t\t\t.appendTo( ul );\n\t},\n\n\t_move: function( direction, event ) {\n\t\tif ( !this.menu.element.is( \":visible\" ) ) {\n\t\t\tthis.search( null, event );\n\t\t\treturn;\n\t\t}\n\t\tif ( this.menu.isFirstItem() && /^previous/.test( direction ) ||\n\t\t\t\tthis.menu.isLastItem() && /^next/.test( direction ) ) {\n\n\t\t\tif ( !this.isMultiLine ) {\n\t\t\t\tthis._value( this.term );\n\t\t\t}\n\n\t\t\tthis.menu.blur();\n\t\t\treturn;\n\t\t}\n\t\tthis.menu[ direction ]( event );\n\t},\n\n\twidget: function() {\n\t\treturn this.menu.element;\n\t},\n\n\t_value: function() {\n\t\treturn this.valueMethod.apply( this.element, arguments );\n\t},\n\n\t_keyEvent: function( keyEvent, event ) {\n\t\tif ( !this.isMultiLine || this.menu.element.is( \":visible\" ) ) {\n\t\t\tthis._move( keyEvent, event );\n\n\t\t\t// Prevents moving cursor to beginning/end of the text field in some browsers\n\t\t\tevent.preventDefault();\n\t\t}\n\t},\n\n\t// Support: Chrome <=50\n\t// We should be able to just use this.element.prop( \"isContentEditable\" )\n\t// but hidden elements always report false in Chrome.\n\t// https://code.google.com/p/chromium/issues/detail?id=313082\n\t_isContentEditable: function( element ) {\n\t\tif ( !element.length ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar editable = element.prop( \"contentEditable\" );\n\n\t\tif ( editable === \"inherit\" ) {\n\t\t  return this._isContentEditable( element.parent() );\n\t\t}\n\n\t\treturn editable === \"true\";\n\t}\n} );\n\n$.extend( $.ui.autocomplete, {\n\tescapeRegex: function( value ) {\n\t\treturn value.replace( /[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\" );\n\t},\n\tfilter: function( array, term ) {\n\t\tvar matcher = new RegExp( $.ui.autocomplete.escapeRegex( term ), \"i\" );\n\t\treturn $.grep( array, function( value ) {\n\t\t\treturn matcher.test( value.label || value.value || value );\n\t\t} );\n\t}\n} );\n\n// Live region extension, adding a `messages` option\n// NOTE: This is an experimental API. We are still investigating\n// a full solution for string manipulation and internationalization.\n$.widget( \"ui.autocomplete\", $.ui.autocomplete, {\n\toptions: {\n\t\tmessages: {\n\t\t\tnoResults: \"No search results.\",\n\t\t\tresults: function( amount ) {\n\t\t\t\treturn amount + ( amount > 1 ? \" results are\" : \" result is\" ) +\n\t\t\t\t\t\" available, use up and down arrow keys to navigate.\";\n\t\t\t}\n\t\t}\n\t},\n\n\t__response: function( content ) {\n\t\tvar message;\n\t\tthis._superApply( arguments );\n\t\tif ( this.options.disabled || this.cancelSearch ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( content && content.length ) {\n\t\t\tmessage = this.options.messages.results( content.length );\n\t\t} else {\n\t\t\tmessage = this.options.messages.noResults;\n\t\t}\n\t\tthis.liveRegion.children().hide();\n\t\t$( \"<div>\" ).text( message ).appendTo( this.liveRegion );\n\t}\n} );\n\nreturn $.ui.autocomplete;\n\n} ) );\n",
    "/*!\n * jQuery UI Button 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Button\n//>>group: Widgets\n//>>description: Enhances a form with themeable buttons.\n//>>docs: http://api.jqueryui.com/button/\n//>>demos: http://jqueryui.com/button/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/button.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\n\t\t\t// These are only for backcompat\n\t\t\t// TODO: Remove after 1.12\n\t\t\t\"./controlgroup\",\n\t\t\t\"./checkboxradio\",\n\n\t\t\t\"../keycode\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\n$.widget( \"ui.button\", {\n\tversion: \"1.12.1\",\n\tdefaultElement: \"<button>\",\n\toptions: {\n\t\tclasses: {\n\t\t\t\"ui-button\": \"ui-corner-all\"\n\t\t},\n\t\tdisabled: null,\n\t\ticon: null,\n\t\ticonPosition: \"beginning\",\n\t\tlabel: null,\n\t\tshowLabel: true\n\t},\n\n\t_getCreateOptions: function() {\n\t\tvar disabled,\n\n\t\t\t// This is to support cases like in jQuery Mobile where the base widget does have\n\t\t\t// an implementation of _getCreateOptions\n\t\t\toptions = this._super() || {};\n\n\t\tthis.isInput = this.element.is( \"input\" );\n\n\t\tdisabled = this.element[ 0 ].disabled;\n\t\tif ( disabled != null ) {\n\t\t\toptions.disabled = disabled;\n\t\t}\n\n\t\tthis.originalLabel = this.isInput ? this.element.val() : this.element.html();\n\t\tif ( this.originalLabel ) {\n\t\t\toptions.label = this.originalLabel;\n\t\t}\n\n\t\treturn options;\n\t},\n\n\t_create: function() {\n\t\tif ( !this.option.showLabel & !this.options.icon ) {\n\t\t\tthis.options.showLabel = true;\n\t\t}\n\n\t\t// We have to check the option again here even though we did in _getCreateOptions,\n\t\t// because null may have been passed on init which would override what was set in\n\t\t// _getCreateOptions\n\t\tif ( this.options.disabled == null ) {\n\t\t\tthis.options.disabled = this.element[ 0 ].disabled || false;\n\t\t}\n\n\t\tthis.hasTitle = !!this.element.attr( \"title\" );\n\n\t\t// Check to see if the label needs to be set or if its already correct\n\t\tif ( this.options.label && this.options.label !== this.originalLabel ) {\n\t\t\tif ( this.isInput ) {\n\t\t\t\tthis.element.val( this.options.label );\n\t\t\t} else {\n\t\t\t\tthis.element.html( this.options.label );\n\t\t\t}\n\t\t}\n\t\tthis._addClass( \"ui-button\", \"ui-widget\" );\n\t\tthis._setOption( \"disabled\", this.options.disabled );\n\t\tthis._enhance();\n\n\t\tif ( this.element.is( \"a\" ) ) {\n\t\t\tthis._on( {\n\t\t\t\t\"keyup\": function( event ) {\n\t\t\t\t\tif ( event.keyCode === $.ui.keyCode.SPACE ) {\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t// Support: PhantomJS <= 1.9, IE 8 Only\n\t\t\t\t\t\t// If a native click is available use it so we actually cause navigation\n\t\t\t\t\t\t// otherwise just trigger a click event\n\t\t\t\t\t\tif ( this.element[ 0 ].click ) {\n\t\t\t\t\t\t\tthis.element[ 0 ].click();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.element.trigger( \"click\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t},\n\n\t_enhance: function() {\n\t\tif ( !this.element.is( \"button\" ) ) {\n\t\t\tthis.element.attr( \"role\", \"button\" );\n\t\t}\n\n\t\tif ( this.options.icon ) {\n\t\t\tthis._updateIcon( \"icon\", this.options.icon );\n\t\t\tthis._updateTooltip();\n\t\t}\n\t},\n\n\t_updateTooltip: function() {\n\t\tthis.title = this.element.attr( \"title\" );\n\n\t\tif ( !this.options.showLabel && !this.title ) {\n\t\t\tthis.element.attr( \"title\", this.options.label );\n\t\t}\n\t},\n\n\t_updateIcon: function( option, value ) {\n\t\tvar icon = option !== \"iconPosition\",\n\t\t\tposition = icon ? this.options.iconPosition : value,\n\t\t\tdisplayBlock = position === \"top\" || position === \"bottom\";\n\n\t\t// Create icon\n\t\tif ( !this.icon ) {\n\t\t\tthis.icon = $( \"<span>\" );\n\n\t\t\tthis._addClass( this.icon, \"ui-button-icon\", \"ui-icon\" );\n\n\t\t\tif ( !this.options.showLabel ) {\n\t\t\t\tthis._addClass( \"ui-button-icon-only\" );\n\t\t\t}\n\t\t} else if ( icon ) {\n\n\t\t\t// If we are updating the icon remove the old icon class\n\t\t\tthis._removeClass( this.icon, null, this.options.icon );\n\t\t}\n\n\t\t// If we are updating the icon add the new icon class\n\t\tif ( icon ) {\n\t\t\tthis._addClass( this.icon, null, value );\n\t\t}\n\n\t\tthis._attachIcon( position );\n\n\t\t// If the icon is on top or bottom we need to add the ui-widget-icon-block class and remove\n\t\t// the iconSpace if there is one.\n\t\tif ( displayBlock ) {\n\t\t\tthis._addClass( this.icon, null, \"ui-widget-icon-block\" );\n\t\t\tif ( this.iconSpace ) {\n\t\t\t\tthis.iconSpace.remove();\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Position is beginning or end so remove the ui-widget-icon-block class and add the\n\t\t\t// space if it does not exist\n\t\t\tif ( !this.iconSpace ) {\n\t\t\t\tthis.iconSpace = $( \"<span> </span>\" );\n\t\t\t\tthis._addClass( this.iconSpace, \"ui-button-icon-space\" );\n\t\t\t}\n\t\t\tthis._removeClass( this.icon, null, \"ui-wiget-icon-block\" );\n\t\t\tthis._attachIconSpace( position );\n\t\t}\n\t},\n\n\t_destroy: function() {\n\t\tthis.element.removeAttr( \"role\" );\n\n\t\tif ( this.icon ) {\n\t\t\tthis.icon.remove();\n\t\t}\n\t\tif ( this.iconSpace ) {\n\t\t\tthis.iconSpace.remove();\n\t\t}\n\t\tif ( !this.hasTitle ) {\n\t\t\tthis.element.removeAttr( \"title\" );\n\t\t}\n\t},\n\n\t_attachIconSpace: function( iconPosition ) {\n\t\tthis.icon[ /^(?:end|bottom)/.test( iconPosition ) ? \"before\" : \"after\" ]( this.iconSpace );\n\t},\n\n\t_attachIcon: function( iconPosition ) {\n\t\tthis.element[ /^(?:end|bottom)/.test( iconPosition ) ? \"append\" : \"prepend\" ]( this.icon );\n\t},\n\n\t_setOptions: function( options ) {\n\t\tvar newShowLabel = options.showLabel === undefined ?\n\t\t\t\tthis.options.showLabel :\n\t\t\t\toptions.showLabel,\n\t\t\tnewIcon = options.icon === undefined ? this.options.icon : options.icon;\n\n\t\tif ( !newShowLabel && !newIcon ) {\n\t\t\toptions.showLabel = true;\n\t\t}\n\t\tthis._super( options );\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tif ( key === \"icon\" ) {\n\t\t\tif ( value ) {\n\t\t\t\tthis._updateIcon( key, value );\n\t\t\t} else if ( this.icon ) {\n\t\t\t\tthis.icon.remove();\n\t\t\t\tif ( this.iconSpace ) {\n\t\t\t\t\tthis.iconSpace.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( key === \"iconPosition\" ) {\n\t\t\tthis._updateIcon( key, value );\n\t\t}\n\n\t\t// Make sure we can't end up with a button that has neither text nor icon\n\t\tif ( key === \"showLabel\" ) {\n\t\t\t\tthis._toggleClass( \"ui-button-icon-only\", null, !value );\n\t\t\t\tthis._updateTooltip();\n\t\t}\n\n\t\tif ( key === \"label\" ) {\n\t\t\tif ( this.isInput ) {\n\t\t\t\tthis.element.val( value );\n\t\t\t} else {\n\n\t\t\t\t// If there is an icon, append it, else nothing then append the value\n\t\t\t\t// this avoids removal of the icon when setting label text\n\t\t\t\tthis.element.html( value );\n\t\t\t\tif ( this.icon ) {\n\t\t\t\t\tthis._attachIcon( this.options.iconPosition );\n\t\t\t\t\tthis._attachIconSpace( this.options.iconPosition );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._super( key, value );\n\n\t\tif ( key === \"disabled\" ) {\n\t\t\tthis._toggleClass( null, \"ui-state-disabled\", value );\n\t\t\tthis.element[ 0 ].disabled = value;\n\t\t\tif ( value ) {\n\t\t\t\tthis.element.blur();\n\t\t\t}\n\t\t}\n\t},\n\n\trefresh: function() {\n\n\t\t// Make sure to only check disabled if its an element that supports this otherwise\n\t\t// check for the disabled class to determine state\n\t\tvar isDisabled = this.element.is( \"input, button\" ) ?\n\t\t\tthis.element[ 0 ].disabled : this.element.hasClass( \"ui-button-disabled\" );\n\n\t\tif ( isDisabled !== this.options.disabled ) {\n\t\t\tthis._setOptions( { disabled: isDisabled } );\n\t\t}\n\n\t\tthis._updateTooltip();\n\t}\n} );\n\n// DEPRECATED\nif ( $.uiBackCompat !== false ) {\n\n\t// Text and Icons options\n\t$.widget( \"ui.button\", $.ui.button, {\n\t\toptions: {\n\t\t\ttext: true,\n\t\t\ticons: {\n\t\t\t\tprimary: null,\n\t\t\t\tsecondary: null\n\t\t\t}\n\t\t},\n\n\t\t_create: function() {\n\t\t\tif ( this.options.showLabel && !this.options.text ) {\n\t\t\t\tthis.options.showLabel = this.options.text;\n\t\t\t}\n\t\t\tif ( !this.options.showLabel && this.options.text ) {\n\t\t\t\tthis.options.text = this.options.showLabel;\n\t\t\t}\n\t\t\tif ( !this.options.icon && ( this.options.icons.primary ||\n\t\t\t\t\tthis.options.icons.secondary ) ) {\n\t\t\t\tif ( this.options.icons.primary ) {\n\t\t\t\t\tthis.options.icon = this.options.icons.primary;\n\t\t\t\t} else {\n\t\t\t\t\tthis.options.icon = this.options.icons.secondary;\n\t\t\t\t\tthis.options.iconPosition = \"end\";\n\t\t\t\t}\n\t\t\t} else if ( this.options.icon ) {\n\t\t\t\tthis.options.icons.primary = this.options.icon;\n\t\t\t}\n\t\t\tthis._super();\n\t\t},\n\n\t\t_setOption: function( key, value ) {\n\t\t\tif ( key === \"text\" ) {\n\t\t\t\tthis._super( \"showLabel\", value );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( key === \"showLabel\" ) {\n\t\t\t\tthis.options.text = value;\n\t\t\t}\n\t\t\tif ( key === \"icon\" ) {\n\t\t\t\tthis.options.icons.primary = value;\n\t\t\t}\n\t\t\tif ( key === \"icons\" ) {\n\t\t\t\tif ( value.primary ) {\n\t\t\t\t\tthis._super( \"icon\", value.primary );\n\t\t\t\t\tthis._super( \"iconPosition\", \"beginning\" );\n\t\t\t\t} else if ( value.secondary ) {\n\t\t\t\t\tthis._super( \"icon\", value.secondary );\n\t\t\t\t\tthis._super( \"iconPosition\", \"end\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._superApply( arguments );\n\t\t}\n\t} );\n\n\t$.fn.button = ( function( orig ) {\n\t\treturn function() {\n\t\t\tif ( !this.length || ( this.length && this[ 0 ].tagName !== \"INPUT\" ) ||\n\t\t\t\t\t( this.length && this[ 0 ].tagName === \"INPUT\" && (\n\t\t\t\t\t\tthis.attr( \"type\" ) !== \"checkbox\" && this.attr( \"type\" ) !== \"radio\"\n\t\t\t\t\t) ) ) {\n\t\t\t\treturn orig.apply( this, arguments );\n\t\t\t}\n\t\t\tif ( !$.ui.checkboxradio ) {\n\t\t\t\t$.error( \"Checkboxradio widget missing\" );\n\t\t\t}\n\t\t\tif ( arguments.length === 0 ) {\n\t\t\t\treturn this.checkboxradio( {\n\t\t\t\t\t\"icon\": false\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn this.checkboxradio.apply( this, arguments );\n\t\t};\n\t} )( $.fn.button );\n\n\t$.fn.buttonset = function() {\n\t\tif ( !$.ui.controlgroup ) {\n\t\t\t$.error( \"Controlgroup widget missing\" );\n\t\t}\n\t\tif ( arguments[ 0 ] === \"option\" && arguments[ 1 ] === \"items\" && arguments[ 2 ] ) {\n\t\t\treturn this.controlgroup.apply( this,\n\t\t\t\t[ arguments[ 0 ], \"items.button\", arguments[ 2 ] ] );\n\t\t}\n\t\tif ( arguments[ 0 ] === \"option\" && arguments[ 1 ] === \"items\" ) {\n\t\t\treturn this.controlgroup.apply( this, [ arguments[ 0 ], \"items.button\" ] );\n\t\t}\n\t\tif ( typeof arguments[ 0 ] === \"object\" && arguments[ 0 ].items ) {\n\t\t\targuments[ 0 ].items = {\n\t\t\t\tbutton: arguments[ 0 ].items\n\t\t\t};\n\t\t}\n\t\treturn this.controlgroup.apply( this, arguments );\n\t};\n}\n\nreturn $.ui.button;\n\n} ) );\n",
    "/*!\n * jQuery UI Dialog 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Dialog\n//>>group: Widgets\n//>>description: Displays customizable dialog windows.\n//>>docs: http://api.jqueryui.com/dialog/\n//>>demos: http://jqueryui.com/dialog/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/dialog.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"./button\",\n\t\t\t\"./draggable\",\n\t\t\t\"./mouse\",\n\t\t\t\"./resizable\",\n\t\t\t\"../focusable\",\n\t\t\t\"../keycode\",\n\t\t\t\"../position\",\n\t\t\t\"../safe-active-element\",\n\t\t\t\"../safe-blur\",\n\t\t\t\"../tabbable\",\n\t\t\t\"../unique-id\",\n\t\t\t\"../version\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\n$.widget( \"ui.dialog\", {\n\tversion: \"1.12.1\",\n\toptions: {\n\t\tappendTo: \"body\",\n\t\tautoOpen: true,\n\t\tbuttons: [],\n\t\tclasses: {\n\t\t\t\"ui-dialog\": \"ui-corner-all\",\n\t\t\t\"ui-dialog-titlebar\": \"ui-corner-all\"\n\t\t},\n\t\tcloseOnEscape: true,\n\t\tcloseText: \"Close\",\n\t\tdraggable: true,\n\t\thide: null,\n\t\theight: \"auto\",\n\t\tmaxHeight: null,\n\t\tmaxWidth: null,\n\t\tminHeight: 150,\n\t\tminWidth: 150,\n\t\tmodal: false,\n\t\tposition: {\n\t\t\tmy: \"center\",\n\t\t\tat: \"center\",\n\t\t\tof: window,\n\t\t\tcollision: \"fit\",\n\n\t\t\t// Ensure the titlebar is always visible\n\t\t\tusing: function( pos ) {\n\t\t\t\tvar topOffset = $( this ).css( pos ).offset().top;\n\t\t\t\tif ( topOffset < 0 ) {\n\t\t\t\t\t$( this ).css( \"top\", pos.top - topOffset );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tresizable: true,\n\t\tshow: null,\n\t\ttitle: null,\n\t\twidth: 300,\n\n\t\t// Callbacks\n\t\tbeforeClose: null,\n\t\tclose: null,\n\t\tdrag: null,\n\t\tdragStart: null,\n\t\tdragStop: null,\n\t\tfocus: null,\n\t\topen: null,\n\t\tresize: null,\n\t\tresizeStart: null,\n\t\tresizeStop: null\n\t},\n\n\tsizeRelatedOptions: {\n\t\tbuttons: true,\n\t\theight: true,\n\t\tmaxHeight: true,\n\t\tmaxWidth: true,\n\t\tminHeight: true,\n\t\tminWidth: true,\n\t\twidth: true\n\t},\n\n\tresizableRelatedOptions: {\n\t\tmaxHeight: true,\n\t\tmaxWidth: true,\n\t\tminHeight: true,\n\t\tminWidth: true\n\t},\n\n\t_create: function() {\n\t\tthis.originalCss = {\n\t\t\tdisplay: this.element[ 0 ].style.display,\n\t\t\twidth: this.element[ 0 ].style.width,\n\t\t\tminHeight: this.element[ 0 ].style.minHeight,\n\t\t\tmaxHeight: this.element[ 0 ].style.maxHeight,\n\t\t\theight: this.element[ 0 ].style.height\n\t\t};\n\t\tthis.originalPosition = {\n\t\t\tparent: this.element.parent(),\n\t\t\tindex: this.element.parent().children().index( this.element )\n\t\t};\n\t\tthis.originalTitle = this.element.attr( \"title\" );\n\t\tif ( this.options.title == null && this.originalTitle != null ) {\n\t\t\tthis.options.title = this.originalTitle;\n\t\t}\n\n\t\t// Dialogs can't be disabled\n\t\tif ( this.options.disabled ) {\n\t\t\tthis.options.disabled = false;\n\t\t}\n\n\t\tthis._createWrapper();\n\n\t\tthis.element\n\t\t\t.show()\n\t\t\t.removeAttr( \"title\" )\n\t\t\t.appendTo( this.uiDialog );\n\n\t\tthis._addClass( \"ui-dialog-content\", \"ui-widget-content\" );\n\n\t\tthis._createTitlebar();\n\t\tthis._createButtonPane();\n\n\t\tif ( this.options.draggable && $.fn.draggable ) {\n\t\t\tthis._makeDraggable();\n\t\t}\n\t\tif ( this.options.resizable && $.fn.resizable ) {\n\t\t\tthis._makeResizable();\n\t\t}\n\n\t\tthis._isOpen = false;\n\n\t\tthis._trackFocus();\n\t},\n\n\t_init: function() {\n\t\tif ( this.options.autoOpen ) {\n\t\t\tthis.open();\n\t\t}\n\t},\n\n\t_appendTo: function() {\n\t\tvar element = this.options.appendTo;\n\t\tif ( element && ( element.jquery || element.nodeType ) ) {\n\t\t\treturn $( element );\n\t\t}\n\t\treturn this.document.find( element || \"body\" ).eq( 0 );\n\t},\n\n\t_destroy: function() {\n\t\tvar next,\n\t\t\toriginalPosition = this.originalPosition;\n\n\t\tthis._untrackInstance();\n\t\tthis._destroyOverlay();\n\n\t\tthis.element\n\t\t\t.removeUniqueId()\n\t\t\t.css( this.originalCss )\n\n\t\t\t// Without detaching first, the following becomes really slow\n\t\t\t.detach();\n\n\t\tthis.uiDialog.remove();\n\n\t\tif ( this.originalTitle ) {\n\t\t\tthis.element.attr( \"title\", this.originalTitle );\n\t\t}\n\n\t\tnext = originalPosition.parent.children().eq( originalPosition.index );\n\n\t\t// Don't try to place the dialog next to itself (#8613)\n\t\tif ( next.length && next[ 0 ] !== this.element[ 0 ] ) {\n\t\t\tnext.before( this.element );\n\t\t} else {\n\t\t\toriginalPosition.parent.append( this.element );\n\t\t}\n\t},\n\n\twidget: function() {\n\t\treturn this.uiDialog;\n\t},\n\n\tdisable: $.noop,\n\tenable: $.noop,\n\n\tclose: function( event ) {\n\t\tvar that = this;\n\n\t\tif ( !this._isOpen || this._trigger( \"beforeClose\", event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isOpen = false;\n\t\tthis._focusedElement = null;\n\t\tthis._destroyOverlay();\n\t\tthis._untrackInstance();\n\n\t\tif ( !this.opener.filter( \":focusable\" ).trigger( \"focus\" ).length ) {\n\n\t\t\t// Hiding a focused element doesn't trigger blur in WebKit\n\t\t\t// so in case we have nothing to focus on, explicitly blur the active element\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=47182\n\t\t\t$.ui.safeBlur( $.ui.safeActiveElement( this.document[ 0 ] ) );\n\t\t}\n\n\t\tthis._hide( this.uiDialog, this.options.hide, function() {\n\t\t\tthat._trigger( \"close\", event );\n\t\t} );\n\t},\n\n\tisOpen: function() {\n\t\treturn this._isOpen;\n\t},\n\n\tmoveToTop: function() {\n\t\tthis._moveToTop();\n\t},\n\n\t_moveToTop: function( event, silent ) {\n\t\tvar moved = false,\n\t\t\tzIndices = this.uiDialog.siblings( \".ui-front:visible\" ).map( function() {\n\t\t\t\treturn +$( this ).css( \"z-index\" );\n\t\t\t} ).get(),\n\t\t\tzIndexMax = Math.max.apply( null, zIndices );\n\n\t\tif ( zIndexMax >= +this.uiDialog.css( \"z-index\" ) ) {\n\t\t\tthis.uiDialog.css( \"z-index\", zIndexMax + 1 );\n\t\t\tmoved = true;\n\t\t}\n\n\t\tif ( moved && !silent ) {\n\t\t\tthis._trigger( \"focus\", event );\n\t\t}\n\t\treturn moved;\n\t},\n\n\topen: function() {\n\t\tvar that = this;\n\t\tif ( this._isOpen ) {\n\t\t\tif ( this._moveToTop() ) {\n\t\t\t\tthis._focusTabbable();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isOpen = true;\n\t\tthis.opener = $( $.ui.safeActiveElement( this.document[ 0 ] ) );\n\n\t\tthis._size();\n\t\tthis._position();\n\t\tthis._createOverlay();\n\t\tthis._moveToTop( null, true );\n\n\t\t// Ensure the overlay is moved to the top with the dialog, but only when\n\t\t// opening. The overlay shouldn't move after the dialog is open so that\n\t\t// modeless dialogs opened after the modal dialog stack properly.\n\t\tif ( this.overlay ) {\n\t\t\tthis.overlay.css( \"z-index\", this.uiDialog.css( \"z-index\" ) - 1 );\n\t\t}\n\n\t\tthis._show( this.uiDialog, this.options.show, function() {\n\t\t\tthat._focusTabbable();\n\t\t\tthat._trigger( \"focus\" );\n\t\t} );\n\n\t\t// Track the dialog immediately upon openening in case a focus event\n\t\t// somehow occurs outside of the dialog before an element inside the\n\t\t// dialog is focused (#10152)\n\t\tthis._makeFocusTarget();\n\n\t\tthis._trigger( \"open\" );\n\t},\n\n\t_focusTabbable: function() {\n\n\t\t// Set focus to the first match:\n\t\t// 1. An element that was focused previously\n\t\t// 2. First element inside the dialog matching [autofocus]\n\t\t// 3. Tabbable element inside the content element\n\t\t// 4. Tabbable element inside the buttonpane\n\t\t// 5. The close button\n\t\t// 6. The dialog itself\n\t\tvar hasFocus = this._focusedElement;\n\t\tif ( !hasFocus ) {\n\t\t\thasFocus = this.element.find( \"[autofocus]\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.element.find( \":tabbable\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.uiDialogButtonPane.find( \":tabbable\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.uiDialogTitlebarClose.filter( \":tabbable\" );\n\t\t}\n\t\tif ( !hasFocus.length ) {\n\t\t\thasFocus = this.uiDialog;\n\t\t}\n\t\thasFocus.eq( 0 ).trigger( \"focus\" );\n\t},\n\n\t_keepFocus: function( event ) {\n\t\tfunction checkFocus() {\n\t\t\tvar activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),\n\t\t\t\tisActive = this.uiDialog[ 0 ] === activeElement ||\n\t\t\t\t\t$.contains( this.uiDialog[ 0 ], activeElement );\n\t\t\tif ( !isActive ) {\n\t\t\t\tthis._focusTabbable();\n\t\t\t}\n\t\t}\n\t\tevent.preventDefault();\n\t\tcheckFocus.call( this );\n\n\t\t// support: IE\n\t\t// IE <= 8 doesn't prevent moving focus even with event.preventDefault()\n\t\t// so we check again later\n\t\tthis._delay( checkFocus );\n\t},\n\n\t_createWrapper: function() {\n\t\tthis.uiDialog = $( \"<div>\" )\n\t\t\t.hide()\n\t\t\t.attr( {\n\n\t\t\t\t// Setting tabIndex makes the div focusable\n\t\t\t\ttabIndex: -1,\n\t\t\t\trole: \"dialog\"\n\t\t\t} )\n\t\t\t.appendTo( this._appendTo() );\n\n\t\tthis._addClass( this.uiDialog, \"ui-dialog\", \"ui-widget ui-widget-content ui-front\" );\n\t\tthis._on( this.uiDialog, {\n\t\t\tkeydown: function( event ) {\n\t\t\t\tif ( this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&\n\t\t\t\t\t\tevent.keyCode === $.ui.keyCode.ESCAPE ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.close( event );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prevent tabbing out of dialogs\n\t\t\t\tif ( event.keyCode !== $.ui.keyCode.TAB || event.isDefaultPrevented() ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar tabbables = this.uiDialog.find( \":tabbable\" ),\n\t\t\t\t\tfirst = tabbables.filter( \":first\" ),\n\t\t\t\t\tlast = tabbables.filter( \":last\" );\n\n\t\t\t\tif ( ( event.target === last[ 0 ] || event.target === this.uiDialog[ 0 ] ) &&\n\t\t\t\t\t\t!event.shiftKey ) {\n\t\t\t\t\tthis._delay( function() {\n\t\t\t\t\t\tfirst.trigger( \"focus\" );\n\t\t\t\t\t} );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else if ( ( event.target === first[ 0 ] ||\n\t\t\t\t\t\tevent.target === this.uiDialog[ 0 ] ) && event.shiftKey ) {\n\t\t\t\t\tthis._delay( function() {\n\t\t\t\t\t\tlast.trigger( \"focus\" );\n\t\t\t\t\t} );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t},\n\t\t\tmousedown: function( event ) {\n\t\t\t\tif ( this._moveToTop( event ) ) {\n\t\t\t\t\tthis._focusTabbable();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// We assume that any existing aria-describedby attribute means\n\t\t// that the dialog content is marked up properly\n\t\t// otherwise we brute force the content as the description\n\t\tif ( !this.element.find( \"[aria-describedby]\" ).length ) {\n\t\t\tthis.uiDialog.attr( {\n\t\t\t\t\"aria-describedby\": this.element.uniqueId().attr( \"id\" )\n\t\t\t} );\n\t\t}\n\t},\n\n\t_createTitlebar: function() {\n\t\tvar uiDialogTitle;\n\n\t\tthis.uiDialogTitlebar = $( \"<div>\" );\n\t\tthis._addClass( this.uiDialogTitlebar,\n\t\t\t\"ui-dialog-titlebar\", \"ui-widget-header ui-helper-clearfix\" );\n\t\tthis._on( this.uiDialogTitlebar, {\n\t\t\tmousedown: function( event ) {\n\n\t\t\t\t// Don't prevent click on close button (#8838)\n\t\t\t\t// Focusing a dialog that is partially scrolled out of view\n\t\t\t\t// causes the browser to scroll it into view, preventing the click event\n\t\t\t\tif ( !$( event.target ).closest( \".ui-dialog-titlebar-close\" ) ) {\n\n\t\t\t\t\t// Dialog isn't getting focus when dragging (#8063)\n\t\t\t\t\tthis.uiDialog.trigger( \"focus\" );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Support: IE\n\t\t// Use type=\"button\" to prevent enter keypresses in textboxes from closing the\n\t\t// dialog in IE (#9312)\n\t\tthis.uiDialogTitlebarClose = $( \"<button type='button'></button>\" )\n\t\t\t.button( {\n\t\t\t\tlabel: $( \"<a>\" ).text( this.options.closeText ).html(),\n\t\t\t\ticon: \"ui-icon-closethick\",\n\t\t\t\tshowLabel: false\n\t\t\t} )\n\t\t\t.appendTo( this.uiDialogTitlebar );\n\n\t\tthis._addClass( this.uiDialogTitlebarClose, \"ui-dialog-titlebar-close\" );\n\t\tthis._on( this.uiDialogTitlebarClose, {\n\t\t\tclick: function( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.close( event );\n\t\t\t}\n\t\t} );\n\n\t\tuiDialogTitle = $( \"<span>\" ).uniqueId().prependTo( this.uiDialogTitlebar );\n\t\tthis._addClass( uiDialogTitle, \"ui-dialog-title\" );\n\t\tthis._title( uiDialogTitle );\n\n\t\tthis.uiDialogTitlebar.prependTo( this.uiDialog );\n\n\t\tthis.uiDialog.attr( {\n\t\t\t\"aria-labelledby\": uiDialogTitle.attr( \"id\" )\n\t\t} );\n\t},\n\n\t_title: function( title ) {\n\t\tif ( this.options.title ) {\n\t\t\ttitle.text( this.options.title );\n\t\t} else {\n\t\t\ttitle.html( \"&#160;\" );\n\t\t}\n\t},\n\n\t_createButtonPane: function() {\n\t\tthis.uiDialogButtonPane = $( \"<div>\" );\n\t\tthis._addClass( this.uiDialogButtonPane, \"ui-dialog-buttonpane\",\n\t\t\t\"ui-widget-content ui-helper-clearfix\" );\n\n\t\tthis.uiButtonSet = $( \"<div>\" )\n\t\t\t.appendTo( this.uiDialogButtonPane );\n\t\tthis._addClass( this.uiButtonSet, \"ui-dialog-buttonset\" );\n\n\t\tthis._createButtons();\n\t},\n\n\t_createButtons: function() {\n\t\tvar that = this,\n\t\t\tbuttons = this.options.buttons;\n\n\t\t// If we already have a button pane, remove it\n\t\tthis.uiDialogButtonPane.remove();\n\t\tthis.uiButtonSet.empty();\n\n\t\tif ( $.isEmptyObject( buttons ) || ( $.isArray( buttons ) && !buttons.length ) ) {\n\t\t\tthis._removeClass( this.uiDialog, \"ui-dialog-buttons\" );\n\t\t\treturn;\n\t\t}\n\n\t\t$.each( buttons, function( name, props ) {\n\t\t\tvar click, buttonOptions;\n\t\t\tprops = $.isFunction( props ) ?\n\t\t\t\t{ click: props, text: name } :\n\t\t\t\tprops;\n\n\t\t\t// Default to a non-submitting button\n\t\t\tprops = $.extend( { type: \"button\" }, props );\n\n\t\t\t// Change the context for the click callback to be the main element\n\t\t\tclick = props.click;\n\t\t\tbuttonOptions = {\n\t\t\t\ticon: props.icon,\n\t\t\t\ticonPosition: props.iconPosition,\n\t\t\t\tshowLabel: props.showLabel,\n\n\t\t\t\t// Deprecated options\n\t\t\t\ticons: props.icons,\n\t\t\t\ttext: props.text\n\t\t\t};\n\n\t\t\tdelete props.click;\n\t\t\tdelete props.icon;\n\t\t\tdelete props.iconPosition;\n\t\t\tdelete props.showLabel;\n\n\t\t\t// Deprecated options\n\t\t\tdelete props.icons;\n\t\t\tif ( typeof props.text === \"boolean\" ) {\n\t\t\t\tdelete props.text;\n\t\t\t}\n\n\t\t\t$( \"<button></button>\", props )\n\t\t\t\t.button( buttonOptions )\n\t\t\t\t.appendTo( that.uiButtonSet )\n\t\t\t\t.on( \"click\", function() {\n\t\t\t\t\tclick.apply( that.element[ 0 ], arguments );\n\t\t\t\t} );\n\t\t} );\n\t\tthis._addClass( this.uiDialog, \"ui-dialog-buttons\" );\n\t\tthis.uiDialogButtonPane.appendTo( this.uiDialog );\n\t},\n\n\t_makeDraggable: function() {\n\t\tvar that = this,\n\t\t\toptions = this.options;\n\n\t\tfunction filteredUi( ui ) {\n\t\t\treturn {\n\t\t\t\tposition: ui.position,\n\t\t\t\toffset: ui.offset\n\t\t\t};\n\t\t}\n\n\t\tthis.uiDialog.draggable( {\n\t\t\tcancel: \".ui-dialog-content, .ui-dialog-titlebar-close\",\n\t\t\thandle: \".ui-dialog-titlebar\",\n\t\t\tcontainment: \"document\",\n\t\t\tstart: function( event, ui ) {\n\t\t\t\tthat._addClass( $( this ), \"ui-dialog-dragging\" );\n\t\t\t\tthat._blockFrames();\n\t\t\t\tthat._trigger( \"dragStart\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tdrag: function( event, ui ) {\n\t\t\t\tthat._trigger( \"drag\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tstop: function( event, ui ) {\n\t\t\t\tvar left = ui.offset.left - that.document.scrollLeft(),\n\t\t\t\t\ttop = ui.offset.top - that.document.scrollTop();\n\n\t\t\t\toptions.position = {\n\t\t\t\t\tmy: \"left top\",\n\t\t\t\t\tat: \"left\" + ( left >= 0 ? \"+\" : \"\" ) + left + \" \" +\n\t\t\t\t\t\t\"top\" + ( top >= 0 ? \"+\" : \"\" ) + top,\n\t\t\t\t\tof: that.window\n\t\t\t\t};\n\t\t\t\tthat._removeClass( $( this ), \"ui-dialog-dragging\" );\n\t\t\t\tthat._unblockFrames();\n\t\t\t\tthat._trigger( \"dragStop\", event, filteredUi( ui ) );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_makeResizable: function() {\n\t\tvar that = this,\n\t\t\toptions = this.options,\n\t\t\thandles = options.resizable,\n\n\t\t\t// .ui-resizable has position: relative defined in the stylesheet\n\t\t\t// but dialogs have to use absolute or fixed positioning\n\t\t\tposition = this.uiDialog.css( \"position\" ),\n\t\t\tresizeHandles = typeof handles === \"string\" ?\n\t\t\t\thandles :\n\t\t\t\t\"n,e,s,w,se,sw,ne,nw\";\n\n\t\tfunction filteredUi( ui ) {\n\t\t\treturn {\n\t\t\t\toriginalPosition: ui.originalPosition,\n\t\t\t\toriginalSize: ui.originalSize,\n\t\t\t\tposition: ui.position,\n\t\t\t\tsize: ui.size\n\t\t\t};\n\t\t}\n\n\t\tthis.uiDialog.resizable( {\n\t\t\tcancel: \".ui-dialog-content\",\n\t\t\tcontainment: \"document\",\n\t\t\talsoResize: this.element,\n\t\t\tmaxWidth: options.maxWidth,\n\t\t\tmaxHeight: options.maxHeight,\n\t\t\tminWidth: options.minWidth,\n\t\t\tminHeight: this._minHeight(),\n\t\t\thandles: resizeHandles,\n\t\t\tstart: function( event, ui ) {\n\t\t\t\tthat._addClass( $( this ), \"ui-dialog-resizing\" );\n\t\t\t\tthat._blockFrames();\n\t\t\t\tthat._trigger( \"resizeStart\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tresize: function( event, ui ) {\n\t\t\t\tthat._trigger( \"resize\", event, filteredUi( ui ) );\n\t\t\t},\n\t\t\tstop: function( event, ui ) {\n\t\t\t\tvar offset = that.uiDialog.offset(),\n\t\t\t\t\tleft = offset.left - that.document.scrollLeft(),\n\t\t\t\t\ttop = offset.top - that.document.scrollTop();\n\n\t\t\t\toptions.height = that.uiDialog.height();\n\t\t\t\toptions.width = that.uiDialog.width();\n\t\t\t\toptions.position = {\n\t\t\t\t\tmy: \"left top\",\n\t\t\t\t\tat: \"left\" + ( left >= 0 ? \"+\" : \"\" ) + left + \" \" +\n\t\t\t\t\t\t\"top\" + ( top >= 0 ? \"+\" : \"\" ) + top,\n\t\t\t\t\tof: that.window\n\t\t\t\t};\n\t\t\t\tthat._removeClass( $( this ), \"ui-dialog-resizing\" );\n\t\t\t\tthat._unblockFrames();\n\t\t\t\tthat._trigger( \"resizeStop\", event, filteredUi( ui ) );\n\t\t\t}\n\t\t} )\n\t\t\t.css( \"position\", position );\n\t},\n\n\t_trackFocus: function() {\n\t\tthis._on( this.widget(), {\n\t\t\tfocusin: function( event ) {\n\t\t\t\tthis._makeFocusTarget();\n\t\t\t\tthis._focusedElement = $( event.target );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_makeFocusTarget: function() {\n\t\tthis._untrackInstance();\n\t\tthis._trackingInstances().unshift( this );\n\t},\n\n\t_untrackInstance: function() {\n\t\tvar instances = this._trackingInstances(),\n\t\t\texists = $.inArray( this, instances );\n\t\tif ( exists !== -1 ) {\n\t\t\tinstances.splice( exists, 1 );\n\t\t}\n\t},\n\n\t_trackingInstances: function() {\n\t\tvar instances = this.document.data( \"ui-dialog-instances\" );\n\t\tif ( !instances ) {\n\t\t\tinstances = [];\n\t\t\tthis.document.data( \"ui-dialog-instances\", instances );\n\t\t}\n\t\treturn instances;\n\t},\n\n\t_minHeight: function() {\n\t\tvar options = this.options;\n\n\t\treturn options.height === \"auto\" ?\n\t\t\toptions.minHeight :\n\t\t\tMath.min( options.minHeight, options.height );\n\t},\n\n\t_position: function() {\n\n\t\t// Need to show the dialog to get the actual offset in the position plugin\n\t\tvar isVisible = this.uiDialog.is( \":visible\" );\n\t\tif ( !isVisible ) {\n\t\t\tthis.uiDialog.show();\n\t\t}\n\t\tthis.uiDialog.position( this.options.position );\n\t\tif ( !isVisible ) {\n\t\t\tthis.uiDialog.hide();\n\t\t}\n\t},\n\n\t_setOptions: function( options ) {\n\t\tvar that = this,\n\t\t\tresize = false,\n\t\t\tresizableOptions = {};\n\n\t\t$.each( options, function( key, value ) {\n\t\t\tthat._setOption( key, value );\n\n\t\t\tif ( key in that.sizeRelatedOptions ) {\n\t\t\t\tresize = true;\n\t\t\t}\n\t\t\tif ( key in that.resizableRelatedOptions ) {\n\t\t\t\tresizableOptions[ key ] = value;\n\t\t\t}\n\t\t} );\n\n\t\tif ( resize ) {\n\t\t\tthis._size();\n\t\t\tthis._position();\n\t\t}\n\t\tif ( this.uiDialog.is( \":data(ui-resizable)\" ) ) {\n\t\t\tthis.uiDialog.resizable( \"option\", resizableOptions );\n\t\t}\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tvar isDraggable, isResizable,\n\t\t\tuiDialog = this.uiDialog;\n\n\t\tif ( key === \"disabled\" ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._super( key, value );\n\n\t\tif ( key === \"appendTo\" ) {\n\t\t\tthis.uiDialog.appendTo( this._appendTo() );\n\t\t}\n\n\t\tif ( key === \"buttons\" ) {\n\t\t\tthis._createButtons();\n\t\t}\n\n\t\tif ( key === \"closeText\" ) {\n\t\t\tthis.uiDialogTitlebarClose.button( {\n\n\t\t\t\t// Ensure that we always pass a string\n\t\t\t\tlabel: $( \"<a>\" ).text( \"\" + this.options.closeText ).html()\n\t\t\t} );\n\t\t}\n\n\t\tif ( key === \"draggable\" ) {\n\t\t\tisDraggable = uiDialog.is( \":data(ui-draggable)\" );\n\t\t\tif ( isDraggable && !value ) {\n\t\t\t\tuiDialog.draggable( \"destroy\" );\n\t\t\t}\n\n\t\t\tif ( !isDraggable && value ) {\n\t\t\t\tthis._makeDraggable();\n\t\t\t}\n\t\t}\n\n\t\tif ( key === \"position\" ) {\n\t\t\tthis._position();\n\t\t}\n\n\t\tif ( key === \"resizable\" ) {\n\n\t\t\t// currently resizable, becoming non-resizable\n\t\t\tisResizable = uiDialog.is( \":data(ui-resizable)\" );\n\t\t\tif ( isResizable && !value ) {\n\t\t\t\tuiDialog.resizable( \"destroy\" );\n\t\t\t}\n\n\t\t\t// Currently resizable, changing handles\n\t\t\tif ( isResizable && typeof value === \"string\" ) {\n\t\t\t\tuiDialog.resizable( \"option\", \"handles\", value );\n\t\t\t}\n\n\t\t\t// Currently non-resizable, becoming resizable\n\t\t\tif ( !isResizable && value !== false ) {\n\t\t\t\tthis._makeResizable();\n\t\t\t}\n\t\t}\n\n\t\tif ( key === \"title\" ) {\n\t\t\tthis._title( this.uiDialogTitlebar.find( \".ui-dialog-title\" ) );\n\t\t}\n\t},\n\n\t_size: function() {\n\n\t\t// If the user has resized the dialog, the .ui-dialog and .ui-dialog-content\n\t\t// divs will both have width and height set, so we need to reset them\n\t\tvar nonContentHeight, minContentHeight, maxContentHeight,\n\t\t\toptions = this.options;\n\n\t\t// Reset content sizing\n\t\tthis.element.show().css( {\n\t\t\twidth: \"auto\",\n\t\t\tminHeight: 0,\n\t\t\tmaxHeight: \"none\",\n\t\t\theight: 0\n\t\t} );\n\n\t\tif ( options.minWidth > options.width ) {\n\t\t\toptions.width = options.minWidth;\n\t\t}\n\n\t\t// Reset wrapper sizing\n\t\t// determine the height of all the non-content elements\n\t\tnonContentHeight = this.uiDialog.css( {\n\t\t\theight: \"auto\",\n\t\t\twidth: options.width\n\t\t} )\n\t\t\t.outerHeight();\n\t\tminContentHeight = Math.max( 0, options.minHeight - nonContentHeight );\n\t\tmaxContentHeight = typeof options.maxHeight === \"number\" ?\n\t\t\tMath.max( 0, options.maxHeight - nonContentHeight ) :\n\t\t\t\"none\";\n\n\t\tif ( options.height === \"auto\" ) {\n\t\t\tthis.element.css( {\n\t\t\t\tminHeight: minContentHeight,\n\t\t\t\tmaxHeight: maxContentHeight,\n\t\t\t\theight: \"auto\"\n\t\t\t} );\n\t\t} else {\n\t\t\tthis.element.height( Math.max( 0, options.height - nonContentHeight ) );\n\t\t}\n\n\t\tif ( this.uiDialog.is( \":data(ui-resizable)\" ) ) {\n\t\t\tthis.uiDialog.resizable( \"option\", \"minHeight\", this._minHeight() );\n\t\t}\n\t},\n\n\t_blockFrames: function() {\n\t\tthis.iframeBlocks = this.document.find( \"iframe\" ).map( function() {\n\t\t\tvar iframe = $( this );\n\n\t\t\treturn $( \"<div>\" )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\twidth: iframe.outerWidth(),\n\t\t\t\t\theight: iframe.outerHeight()\n\t\t\t\t} )\n\t\t\t\t.appendTo( iframe.parent() )\n\t\t\t\t.offset( iframe.offset() )[ 0 ];\n\t\t} );\n\t},\n\n\t_unblockFrames: function() {\n\t\tif ( this.iframeBlocks ) {\n\t\t\tthis.iframeBlocks.remove();\n\t\t\tdelete this.iframeBlocks;\n\t\t}\n\t},\n\n\t_allowInteraction: function( event ) {\n\t\tif ( $( event.target ).closest( \".ui-dialog\" ).length ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// TODO: Remove hack when datepicker implements\n\t\t// the .ui-front logic (#8989)\n\t\treturn !!$( event.target ).closest( \".ui-datepicker\" ).length;\n\t},\n\n\t_createOverlay: function() {\n\t\tif ( !this.options.modal ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We use a delay in case the overlay is created from an\n\t\t// event that we're going to be cancelling (#2804)\n\t\tvar isOpening = true;\n\t\tthis._delay( function() {\n\t\t\tisOpening = false;\n\t\t} );\n\n\t\tif ( !this.document.data( \"ui-dialog-overlays\" ) ) {\n\n\t\t\t// Prevent use of anchors and inputs\n\t\t\t// Using _on() for an event handler shared across many instances is\n\t\t\t// safe because the dialogs stack and must be closed in reverse order\n\t\t\tthis._on( this.document, {\n\t\t\t\tfocusin: function( event ) {\n\t\t\t\t\tif ( isOpening ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !this._allowInteraction( event ) ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tthis._trackingInstances()[ 0 ]._focusTabbable();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tthis.overlay = $( \"<div>\" )\n\t\t\t.appendTo( this._appendTo() );\n\n\t\tthis._addClass( this.overlay, null, \"ui-widget-overlay ui-front\" );\n\t\tthis._on( this.overlay, {\n\t\t\tmousedown: \"_keepFocus\"\n\t\t} );\n\t\tthis.document.data( \"ui-dialog-overlays\",\n\t\t\t( this.document.data( \"ui-dialog-overlays\" ) || 0 ) + 1 );\n\t},\n\n\t_destroyOverlay: function() {\n\t\tif ( !this.options.modal ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.overlay ) {\n\t\t\tvar overlays = this.document.data( \"ui-dialog-overlays\" ) - 1;\n\n\t\t\tif ( !overlays ) {\n\t\t\t\tthis._off( this.document, \"focusin\" );\n\t\t\t\tthis.document.removeData( \"ui-dialog-overlays\" );\n\t\t\t} else {\n\t\t\t\tthis.document.data( \"ui-dialog-overlays\", overlays );\n\t\t\t}\n\n\t\t\tthis.overlay.remove();\n\t\t\tthis.overlay = null;\n\t\t}\n\t}\n} );\n\n// DEPRECATED\n// TODO: switch return back to widget declaration at top of file when this is removed\nif ( $.uiBackCompat !== false ) {\n\n\t// Backcompat for dialogClass option\n\t$.widget( \"ui.dialog\", $.ui.dialog, {\n\t\toptions: {\n\t\t\tdialogClass: \"\"\n\t\t},\n\t\t_createWrapper: function() {\n\t\t\tthis._super();\n\t\t\tthis.uiDialog.addClass( this.options.dialogClass );\n\t\t},\n\t\t_setOption: function( key, value ) {\n\t\t\tif ( key === \"dialogClass\" ) {\n\t\t\t\tthis.uiDialog\n\t\t\t\t\t.removeClass( this.options.dialogClass )\n\t\t\t\t\t.addClass( value );\n\t\t\t}\n\t\t\tthis._superApply( arguments );\n\t\t}\n\t} );\n}\n\nreturn $.ui.dialog;\n\n} ) );\n",
    "/*!\n * jQuery UI Draggable 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Draggable\n//>>group: Interactions\n//>>description: Enables dragging functionality for any element.\n//>>docs: http://api.jqueryui.com/draggable/\n//>>demos: http://jqueryui.com/draggable/\n//>>css.structure: ../../themes/base/draggable.css\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"./mouse\",\n\t\t\t\"../data\",\n\t\t\t\"../plugin\",\n\t\t\t\"../safe-active-element\",\n\t\t\t\"../safe-blur\",\n\t\t\t\"../scroll-parent\",\n\t\t\t\"../version\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\n$.widget( \"ui.draggable\", $.ui.mouse, {\n\tversion: \"1.12.1\",\n\twidgetEventPrefix: \"drag\",\n\toptions: {\n\t\taddClasses: true,\n\t\tappendTo: \"parent\",\n\t\taxis: false,\n\t\tconnectToSortable: false,\n\t\tcontainment: false,\n\t\tcursor: \"auto\",\n\t\tcursorAt: false,\n\t\tgrid: false,\n\t\thandle: false,\n\t\thelper: \"original\",\n\t\tiframeFix: false,\n\t\topacity: false,\n\t\trefreshPositions: false,\n\t\trevert: false,\n\t\trevertDuration: 500,\n\t\tscope: \"default\",\n\t\tscroll: true,\n\t\tscrollSensitivity: 20,\n\t\tscrollSpeed: 20,\n\t\tsnap: false,\n\t\tsnapMode: \"both\",\n\t\tsnapTolerance: 20,\n\t\tstack: false,\n\t\tzIndex: false,\n\n\t\t// Callbacks\n\t\tdrag: null,\n\t\tstart: null,\n\t\tstop: null\n\t},\n\t_create: function() {\n\n\t\tif ( this.options.helper === \"original\" ) {\n\t\t\tthis._setPositionRelative();\n\t\t}\n\t\tif ( this.options.addClasses ) {\n\t\t\tthis._addClass( \"ui-draggable\" );\n\t\t}\n\t\tthis._setHandleClassName();\n\n\t\tthis._mouseInit();\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tthis._super( key, value );\n\t\tif ( key === \"handle\" ) {\n\t\t\tthis._removeHandleClassName();\n\t\t\tthis._setHandleClassName();\n\t\t}\n\t},\n\n\t_destroy: function() {\n\t\tif ( ( this.helper || this.element ).is( \".ui-draggable-dragging\" ) ) {\n\t\t\tthis.destroyOnClear = true;\n\t\t\treturn;\n\t\t}\n\t\tthis._removeHandleClassName();\n\t\tthis._mouseDestroy();\n\t},\n\n\t_mouseCapture: function( event ) {\n\t\tvar o = this.options;\n\n\t\t// Among others, prevent a drag on a resizable-handle\n\t\tif ( this.helper || o.disabled ||\n\t\t\t\t$( event.target ).closest( \".ui-resizable-handle\" ).length > 0 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t//Quit if we're not on a valid handle\n\t\tthis.handle = this._getHandle( event );\n\t\tif ( !this.handle ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._blurActiveElement( event );\n\n\t\tthis._blockFrames( o.iframeFix === true ? \"iframe\" : o.iframeFix );\n\n\t\treturn true;\n\n\t},\n\n\t_blockFrames: function( selector ) {\n\t\tthis.iframeBlocks = this.document.find( selector ).map( function() {\n\t\t\tvar iframe = $( this );\n\n\t\t\treturn $( \"<div>\" )\n\t\t\t\t.css( \"position\", \"absolute\" )\n\t\t\t\t.appendTo( iframe.parent() )\n\t\t\t\t.outerWidth( iframe.outerWidth() )\n\t\t\t\t.outerHeight( iframe.outerHeight() )\n\t\t\t\t.offset( iframe.offset() )[ 0 ];\n\t\t} );\n\t},\n\n\t_unblockFrames: function() {\n\t\tif ( this.iframeBlocks ) {\n\t\t\tthis.iframeBlocks.remove();\n\t\t\tdelete this.iframeBlocks;\n\t\t}\n\t},\n\n\t_blurActiveElement: function( event ) {\n\t\tvar activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),\n\t\t\ttarget = $( event.target );\n\n\t\t// Don't blur if the event occurred on an element that is within\n\t\t// the currently focused element\n\t\t// See #10527, #12472\n\t\tif ( target.closest( activeElement ).length ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Blur any element that currently has focus, see #4261\n\t\t$.ui.safeBlur( activeElement );\n\t},\n\n\t_mouseStart: function( event ) {\n\n\t\tvar o = this.options;\n\n\t\t//Create and append the visible helper\n\t\tthis.helper = this._createHelper( event );\n\n\t\tthis._addClass( this.helper, \"ui-draggable-dragging\" );\n\n\t\t//Cache the helper size\n\t\tthis._cacheHelperProportions();\n\n\t\t//If ddmanager is used for droppables, set the global draggable\n\t\tif ( $.ui.ddmanager ) {\n\t\t\t$.ui.ddmanager.current = this;\n\t\t}\n\n\t\t/*\n\t\t * - Position generation -\n\t\t * This block generates everything position related - it's the core of draggables.\n\t\t */\n\n\t\t//Cache the margins of the original element\n\t\tthis._cacheMargins();\n\n\t\t//Store the helper's css position\n\t\tthis.cssPosition = this.helper.css( \"position\" );\n\t\tthis.scrollParent = this.helper.scrollParent( true );\n\t\tthis.offsetParent = this.helper.offsetParent();\n\t\tthis.hasFixedAncestor = this.helper.parents().filter( function() {\n\t\t\t\treturn $( this ).css( \"position\" ) === \"fixed\";\n\t\t\t} ).length > 0;\n\n\t\t//The element's absolute position on the page minus margins\n\t\tthis.positionAbs = this.element.offset();\n\t\tthis._refreshOffsets( event );\n\n\t\t//Generate the original position\n\t\tthis.originalPosition = this.position = this._generatePosition( event, false );\n\t\tthis.originalPageX = event.pageX;\n\t\tthis.originalPageY = event.pageY;\n\n\t\t//Adjust the mouse offset relative to the helper if \"cursorAt\" is supplied\n\t\t( o.cursorAt && this._adjustOffsetFromHelper( o.cursorAt ) );\n\n\t\t//Set a containment if given in the options\n\t\tthis._setContainment();\n\n\t\t//Trigger event + callbacks\n\t\tif ( this._trigger( \"start\", event ) === false ) {\n\t\t\tthis._clear();\n\t\t\treturn false;\n\t\t}\n\n\t\t//Recache the helper size\n\t\tthis._cacheHelperProportions();\n\n\t\t//Prepare the droppable offsets\n\t\tif ( $.ui.ddmanager && !o.dropBehaviour ) {\n\t\t\t$.ui.ddmanager.prepareOffsets( this, event );\n\t\t}\n\n\t\t// Execute the drag once - this causes the helper not to be visible before getting its\n\t\t// correct position\n\t\tthis._mouseDrag( event, true );\n\n\t\t// If the ddmanager is used for droppables, inform the manager that dragging has started\n\t\t// (see #5003)\n\t\tif ( $.ui.ddmanager ) {\n\t\t\t$.ui.ddmanager.dragStart( this, event );\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t_refreshOffsets: function( event ) {\n\t\tthis.offset = {\n\t\t\ttop: this.positionAbs.top - this.margins.top,\n\t\t\tleft: this.positionAbs.left - this.margins.left,\n\t\t\tscroll: false,\n\t\t\tparent: this._getParentOffset(),\n\t\t\trelative: this._getRelativeOffset()\n\t\t};\n\n\t\tthis.offset.click = {\n\t\t\tleft: event.pageX - this.offset.left,\n\t\t\ttop: event.pageY - this.offset.top\n\t\t};\n\t},\n\n\t_mouseDrag: function( event, noPropagation ) {\n\n\t\t// reset any necessary cached properties (see #5009)\n\t\tif ( this.hasFixedAncestor ) {\n\t\t\tthis.offset.parent = this._getParentOffset();\n\t\t}\n\n\t\t//Compute the helpers position\n\t\tthis.position = this._generatePosition( event, true );\n\t\tthis.positionAbs = this._convertPositionTo( \"absolute\" );\n\n\t\t//Call plugins and callbacks and use the resulting position if something is returned\n\t\tif ( !noPropagation ) {\n\t\t\tvar ui = this._uiHash();\n\t\t\tif ( this._trigger( \"drag\", event, ui ) === false ) {\n\t\t\t\tthis._mouseUp( new $.Event( \"mouseup\", event ) );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.position = ui.position;\n\t\t}\n\n\t\tthis.helper[ 0 ].style.left = this.position.left + \"px\";\n\t\tthis.helper[ 0 ].style.top = this.position.top + \"px\";\n\n\t\tif ( $.ui.ddmanager ) {\n\t\t\t$.ui.ddmanager.drag( this, event );\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t_mouseStop: function( event ) {\n\n\t\t//If we are using droppables, inform the manager about the drop\n\t\tvar that = this,\n\t\t\tdropped = false;\n\t\tif ( $.ui.ddmanager && !this.options.dropBehaviour ) {\n\t\t\tdropped = $.ui.ddmanager.drop( this, event );\n\t\t}\n\n\t\t//if a drop comes from outside (a sortable)\n\t\tif ( this.dropped ) {\n\t\t\tdropped = this.dropped;\n\t\t\tthis.dropped = false;\n\t\t}\n\n\t\tif ( ( this.options.revert === \"invalid\" && !dropped ) ||\n\t\t\t\t( this.options.revert === \"valid\" && dropped ) ||\n\t\t\t\tthis.options.revert === true || ( $.isFunction( this.options.revert ) &&\n\t\t\t\tthis.options.revert.call( this.element, dropped ) )\n\t\t) {\n\t\t\t$( this.helper ).animate(\n\t\t\t\tthis.originalPosition,\n\t\t\t\tparseInt( this.options.revertDuration, 10 ),\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( that._trigger( \"stop\", event ) !== false ) {\n\t\t\t\t\t\tthat._clear();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tif ( this._trigger( \"stop\", event ) !== false ) {\n\t\t\t\tthis._clear();\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t_mouseUp: function( event ) {\n\t\tthis._unblockFrames();\n\n\t\t// If the ddmanager is used for droppables, inform the manager that dragging has stopped\n\t\t// (see #5003)\n\t\tif ( $.ui.ddmanager ) {\n\t\t\t$.ui.ddmanager.dragStop( this, event );\n\t\t}\n\n\t\t// Only need to focus if the event occurred on the draggable itself, see #10527\n\t\tif ( this.handleElement.is( event.target ) ) {\n\n\t\t\t// The interaction is over; whether or not the click resulted in a drag,\n\t\t\t// focus the element\n\t\t\tthis.element.trigger( \"focus\" );\n\t\t}\n\n\t\treturn $.ui.mouse.prototype._mouseUp.call( this, event );\n\t},\n\n\tcancel: function() {\n\n\t\tif ( this.helper.is( \".ui-draggable-dragging\" ) ) {\n\t\t\tthis._mouseUp( new $.Event( \"mouseup\", { target: this.element[ 0 ] } ) );\n\t\t} else {\n\t\t\tthis._clear();\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t_getHandle: function( event ) {\n\t\treturn this.options.handle ?\n\t\t\t!!$( event.target ).closest( this.element.find( this.options.handle ) ).length :\n\t\t\ttrue;\n\t},\n\n\t_setHandleClassName: function() {\n\t\tthis.handleElement = this.options.handle ?\n\t\t\tthis.element.find( this.options.handle ) : this.element;\n\t\tthis._addClass( this.handleElement, \"ui-draggable-handle\" );\n\t},\n\n\t_removeHandleClassName: function() {\n\t\tthis._removeClass( this.handleElement, \"ui-draggable-handle\" );\n\t},\n\n\t_createHelper: function( event ) {\n\n\t\tvar o = this.options,\n\t\t\thelperIsFunction = $.isFunction( o.helper ),\n\t\t\thelper = helperIsFunction ?\n\t\t\t\t$( o.helper.apply( this.element[ 0 ], [ event ] ) ) :\n\t\t\t\t( o.helper === \"clone\" ?\n\t\t\t\t\tthis.element.clone().removeAttr( \"id\" ) :\n\t\t\t\t\tthis.element );\n\n\t\tif ( !helper.parents( \"body\" ).length ) {\n\t\t\thelper.appendTo( ( o.appendTo === \"parent\" ?\n\t\t\t\tthis.element[ 0 ].parentNode :\n\t\t\t\to.appendTo ) );\n\t\t}\n\n\t\t// Http://bugs.jqueryui.com/ticket/9446\n\t\t// a helper function can return the original element\n\t\t// which wouldn't have been set to relative in _create\n\t\tif ( helperIsFunction && helper[ 0 ] === this.element[ 0 ] ) {\n\t\t\tthis._setPositionRelative();\n\t\t}\n\n\t\tif ( helper[ 0 ] !== this.element[ 0 ] &&\n\t\t\t\t!( /(fixed|absolute)/ ).test( helper.css( \"position\" ) ) ) {\n\t\t\thelper.css( \"position\", \"absolute\" );\n\t\t}\n\n\t\treturn helper;\n\n\t},\n\n\t_setPositionRelative: function() {\n\t\tif ( !( /^(?:r|a|f)/ ).test( this.element.css( \"position\" ) ) ) {\n\t\t\tthis.element[ 0 ].style.position = \"relative\";\n\t\t}\n\t},\n\n\t_adjustOffsetFromHelper: function( obj ) {\n\t\tif ( typeof obj === \"string\" ) {\n\t\t\tobj = obj.split( \" \" );\n\t\t}\n\t\tif ( $.isArray( obj ) ) {\n\t\t\tobj = { left: +obj[ 0 ], top: +obj[ 1 ] || 0 };\n\t\t}\n\t\tif ( \"left\" in obj ) {\n\t\t\tthis.offset.click.left = obj.left + this.margins.left;\n\t\t}\n\t\tif ( \"right\" in obj ) {\n\t\t\tthis.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;\n\t\t}\n\t\tif ( \"top\" in obj ) {\n\t\t\tthis.offset.click.top = obj.top + this.margins.top;\n\t\t}\n\t\tif ( \"bottom\" in obj ) {\n\t\t\tthis.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;\n\t\t}\n\t},\n\n\t_isRootNode: function( element ) {\n\t\treturn ( /(html|body)/i ).test( element.tagName ) || element === this.document[ 0 ];\n\t},\n\n\t_getParentOffset: function() {\n\n\t\t//Get the offsetParent and cache its position\n\t\tvar po = this.offsetParent.offset(),\n\t\t\tdocument = this.document[ 0 ];\n\n\t\t// This is a special case where we need to modify a offset calculated on start, since the\n\t\t// following happened:\n\t\t// 1. The position of the helper is absolute, so it's position is calculated based on the\n\t\t// next positioned parent\n\t\t// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't\n\t\t// the document, which means that the scroll is included in the initial calculation of the\n\t\t// offset of the parent, and never recalculated upon drag\n\t\tif ( this.cssPosition === \"absolute\" && this.scrollParent[ 0 ] !== document &&\n\t\t\t\t$.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) {\n\t\t\tpo.left += this.scrollParent.scrollLeft();\n\t\t\tpo.top += this.scrollParent.scrollTop();\n\t\t}\n\n\t\tif ( this._isRootNode( this.offsetParent[ 0 ] ) ) {\n\t\t\tpo = { top: 0, left: 0 };\n\t\t}\n\n\t\treturn {\n\t\t\ttop: po.top + ( parseInt( this.offsetParent.css( \"borderTopWidth\" ), 10 ) || 0 ),\n\t\t\tleft: po.left + ( parseInt( this.offsetParent.css( \"borderLeftWidth\" ), 10 ) || 0 )\n\t\t};\n\n\t},\n\n\t_getRelativeOffset: function() {\n\t\tif ( this.cssPosition !== \"relative\" ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\tvar p = this.element.position(),\n\t\t\tscrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] );\n\n\t\treturn {\n\t\t\ttop: p.top - ( parseInt( this.helper.css( \"top\" ), 10 ) || 0 ) +\n\t\t\t\t( !scrollIsRootNode ? this.scrollParent.scrollTop() : 0 ),\n\t\t\tleft: p.left - ( parseInt( this.helper.css( \"left\" ), 10 ) || 0 ) +\n\t\t\t\t( !scrollIsRootNode ? this.scrollParent.scrollLeft() : 0 )\n\t\t};\n\n\t},\n\n\t_cacheMargins: function() {\n\t\tthis.margins = {\n\t\t\tleft: ( parseInt( this.element.css( \"marginLeft\" ), 10 ) || 0 ),\n\t\t\ttop: ( parseInt( this.element.css( \"marginTop\" ), 10 ) || 0 ),\n\t\t\tright: ( parseInt( this.element.css( \"marginRight\" ), 10 ) || 0 ),\n\t\t\tbottom: ( parseInt( this.element.css( \"marginBottom\" ), 10 ) || 0 )\n\t\t};\n\t},\n\n\t_cacheHelperProportions: function() {\n\t\tthis.helperProportions = {\n\t\t\twidth: this.helper.outerWidth(),\n\t\t\theight: this.helper.outerHeight()\n\t\t};\n\t},\n\n\t_setContainment: function() {\n\n\t\tvar isUserScrollable, c, ce,\n\t\t\to = this.options,\n\t\t\tdocument = this.document[ 0 ];\n\n\t\tthis.relativeContainer = null;\n\n\t\tif ( !o.containment ) {\n\t\t\tthis.containment = null;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( o.containment === \"window\" ) {\n\t\t\tthis.containment = [\n\t\t\t\t$( window ).scrollLeft() - this.offset.relative.left - this.offset.parent.left,\n\t\t\t\t$( window ).scrollTop() - this.offset.relative.top - this.offset.parent.top,\n\t\t\t\t$( window ).scrollLeft() + $( window ).width() -\n\t\t\t\t\tthis.helperProportions.width - this.margins.left,\n\t\t\t\t$( window ).scrollTop() +\n\t\t\t\t\t( $( window ).height() || document.body.parentNode.scrollHeight ) -\n\t\t\t\t\tthis.helperProportions.height - this.margins.top\n\t\t\t];\n\t\t\treturn;\n\t\t}\n\n\t\tif ( o.containment === \"document\" ) {\n\t\t\tthis.containment = [\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t$( document ).width() - this.helperProportions.width - this.margins.left,\n\t\t\t\t( $( document ).height() || document.body.parentNode.scrollHeight ) -\n\t\t\t\t\tthis.helperProportions.height - this.margins.top\n\t\t\t];\n\t\t\treturn;\n\t\t}\n\n\t\tif ( o.containment.constructor === Array ) {\n\t\t\tthis.containment = o.containment;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( o.containment === \"parent\" ) {\n\t\t\to.containment = this.helper[ 0 ].parentNode;\n\t\t}\n\n\t\tc = $( o.containment );\n\t\tce = c[ 0 ];\n\n\t\tif ( !ce ) {\n\t\t\treturn;\n\t\t}\n\n\t\tisUserScrollable = /(scroll|auto)/.test( c.css( \"overflow\" ) );\n\n\t\tthis.containment = [\n\t\t\t( parseInt( c.css( \"borderLeftWidth\" ), 10 ) || 0 ) +\n\t\t\t\t( parseInt( c.css( \"paddingLeft\" ), 10 ) || 0 ),\n\t\t\t( parseInt( c.css( \"borderTopWidth\" ), 10 ) || 0 ) +\n\t\t\t\t( parseInt( c.css( \"paddingTop\" ), 10 ) || 0 ),\n\t\t\t( isUserScrollable ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) -\n\t\t\t\t( parseInt( c.css( \"borderRightWidth\" ), 10 ) || 0 ) -\n\t\t\t\t( parseInt( c.css( \"paddingRight\" ), 10 ) || 0 ) -\n\t\t\t\tthis.helperProportions.width -\n\t\t\t\tthis.margins.left -\n\t\t\t\tthis.margins.right,\n\t\t\t( isUserScrollable ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) -\n\t\t\t\t( parseInt( c.css( \"borderBottomWidth\" ), 10 ) || 0 ) -\n\t\t\t\t( parseInt( c.css( \"paddingBottom\" ), 10 ) || 0 ) -\n\t\t\t\tthis.helperProportions.height -\n\t\t\t\tthis.margins.top -\n\t\t\t\tthis.margins.bottom\n\t\t];\n\t\tthis.relativeContainer = c;\n\t},\n\n\t_convertPositionTo: function( d, pos ) {\n\n\t\tif ( !pos ) {\n\t\t\tpos = this.position;\n\t\t}\n\n\t\tvar mod = d === \"absolute\" ? 1 : -1,\n\t\t\tscrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] );\n\n\t\treturn {\n\t\t\ttop: (\n\n\t\t\t\t// The absolute mouse position\n\t\t\t\tpos.top\t+\n\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n\t\t\t\tthis.offset.relative.top * mod +\n\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\n\t\t\t\tthis.offset.parent.top * mod -\n\t\t\t\t( ( this.cssPosition === \"fixed\" ?\n\t\t\t\t\t-this.offset.scroll.top :\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.top ) ) * mod )\n\t\t\t),\n\t\t\tleft: (\n\n\t\t\t\t// The absolute mouse position\n\t\t\t\tpos.left +\n\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n\t\t\t\tthis.offset.relative.left * mod +\n\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\n\t\t\t\tthis.offset.parent.left * mod\t-\n\t\t\t\t( ( this.cssPosition === \"fixed\" ?\n\t\t\t\t\t-this.offset.scroll.left :\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.left ) ) * mod )\n\t\t\t)\n\t\t};\n\n\t},\n\n\t_generatePosition: function( event, constrainPosition ) {\n\n\t\tvar containment, co, top, left,\n\t\t\to = this.options,\n\t\t\tscrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] ),\n\t\t\tpageX = event.pageX,\n\t\t\tpageY = event.pageY;\n\n\t\t// Cache the scroll\n\t\tif ( !scrollIsRootNode || !this.offset.scroll ) {\n\t\t\tthis.offset.scroll = {\n\t\t\t\ttop: this.scrollParent.scrollTop(),\n\t\t\t\tleft: this.scrollParent.scrollLeft()\n\t\t\t};\n\t\t}\n\n\t\t/*\n\t\t * - Position constraining -\n\t\t * Constrain the position to a mix of grid, containment.\n\t\t */\n\n\t\t// If we are not dragging yet, we won't check for options\n\t\tif ( constrainPosition ) {\n\t\t\tif ( this.containment ) {\n\t\t\t\tif ( this.relativeContainer ) {\n\t\t\t\t\tco = this.relativeContainer.offset();\n\t\t\t\t\tcontainment = [\n\t\t\t\t\t\tthis.containment[ 0 ] + co.left,\n\t\t\t\t\t\tthis.containment[ 1 ] + co.top,\n\t\t\t\t\t\tthis.containment[ 2 ] + co.left,\n\t\t\t\t\t\tthis.containment[ 3 ] + co.top\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tcontainment = this.containment;\n\t\t\t\t}\n\n\t\t\t\tif ( event.pageX - this.offset.click.left < containment[ 0 ] ) {\n\t\t\t\t\tpageX = containment[ 0 ] + this.offset.click.left;\n\t\t\t\t}\n\t\t\t\tif ( event.pageY - this.offset.click.top < containment[ 1 ] ) {\n\t\t\t\t\tpageY = containment[ 1 ] + this.offset.click.top;\n\t\t\t\t}\n\t\t\t\tif ( event.pageX - this.offset.click.left > containment[ 2 ] ) {\n\t\t\t\t\tpageX = containment[ 2 ] + this.offset.click.left;\n\t\t\t\t}\n\t\t\t\tif ( event.pageY - this.offset.click.top > containment[ 3 ] ) {\n\t\t\t\t\tpageY = containment[ 3 ] + this.offset.click.top;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( o.grid ) {\n\n\t\t\t\t//Check for grid elements set to 0 to prevent divide by 0 error causing invalid\n\t\t\t\t// argument errors in IE (see ticket #6950)\n\t\t\t\ttop = o.grid[ 1 ] ? this.originalPageY + Math.round( ( pageY -\n\t\t\t\t\tthis.originalPageY ) / o.grid[ 1 ] ) * o.grid[ 1 ] : this.originalPageY;\n\t\t\t\tpageY = containment ? ( ( top - this.offset.click.top >= containment[ 1 ] ||\n\t\t\t\t\ttop - this.offset.click.top > containment[ 3 ] ) ?\n\t\t\t\t\t\ttop :\n\t\t\t\t\t\t( ( top - this.offset.click.top >= containment[ 1 ] ) ?\n\t\t\t\t\t\t\ttop - o.grid[ 1 ] : top + o.grid[ 1 ] ) ) : top;\n\n\t\t\t\tleft = o.grid[ 0 ] ? this.originalPageX +\n\t\t\t\t\tMath.round( ( pageX - this.originalPageX ) / o.grid[ 0 ] ) * o.grid[ 0 ] :\n\t\t\t\t\tthis.originalPageX;\n\t\t\t\tpageX = containment ? ( ( left - this.offset.click.left >= containment[ 0 ] ||\n\t\t\t\t\tleft - this.offset.click.left > containment[ 2 ] ) ?\n\t\t\t\t\t\tleft :\n\t\t\t\t\t\t( ( left - this.offset.click.left >= containment[ 0 ] ) ?\n\t\t\t\t\t\t\tleft - o.grid[ 0 ] : left + o.grid[ 0 ] ) ) : left;\n\t\t\t}\n\n\t\t\tif ( o.axis === \"y\" ) {\n\t\t\t\tpageX = this.originalPageX;\n\t\t\t}\n\n\t\t\tif ( o.axis === \"x\" ) {\n\t\t\t\tpageY = this.originalPageY;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttop: (\n\n\t\t\t\t// The absolute mouse position\n\t\t\t\tpageY -\n\n\t\t\t\t// Click offset (relative to the element)\n\t\t\t\tthis.offset.click.top -\n\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n\t\t\t\tthis.offset.relative.top -\n\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\n\t\t\t\tthis.offset.parent.top +\n\t\t\t\t( this.cssPosition === \"fixed\" ?\n\t\t\t\t\t-this.offset.scroll.top :\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.top ) )\n\t\t\t),\n\t\t\tleft: (\n\n\t\t\t\t// The absolute mouse position\n\t\t\t\tpageX -\n\n\t\t\t\t// Click offset (relative to the element)\n\t\t\t\tthis.offset.click.left -\n\n\t\t\t\t// Only for relative positioned nodes: Relative offset from element to offset parent\n\t\t\t\tthis.offset.relative.left -\n\n\t\t\t\t// The offsetParent's offset without borders (offset + border)\n\t\t\t\tthis.offset.parent.left +\n\t\t\t\t( this.cssPosition === \"fixed\" ?\n\t\t\t\t\t-this.offset.scroll.left :\n\t\t\t\t\t( scrollIsRootNode ? 0 : this.offset.scroll.left ) )\n\t\t\t)\n\t\t};\n\n\t},\n\n\t_clear: function() {\n\t\tthis._removeClass( this.helper, \"ui-draggable-dragging\" );\n\t\tif ( this.helper[ 0 ] !== this.element[ 0 ] && !this.cancelHelperRemoval ) {\n\t\t\tthis.helper.remove();\n\t\t}\n\t\tthis.helper = null;\n\t\tthis.cancelHelperRemoval = false;\n\t\tif ( this.destroyOnClear ) {\n\t\t\tthis.destroy();\n\t\t}\n\t},\n\n\t// From now on bulk stuff - mainly helpers\n\n\t_trigger: function( type, event, ui ) {\n\t\tui = ui || this._uiHash();\n\t\t$.ui.plugin.call( this, type, [ event, ui, this ], true );\n\n\t\t// Absolute position and offset (see #6884 ) have to be recalculated after plugins\n\t\tif ( /^(drag|start|stop)/.test( type ) ) {\n\t\t\tthis.positionAbs = this._convertPositionTo( \"absolute\" );\n\t\t\tui.offset = this.positionAbs;\n\t\t}\n\t\treturn $.Widget.prototype._trigger.call( this, type, event, ui );\n\t},\n\n\tplugins: {},\n\n\t_uiHash: function() {\n\t\treturn {\n\t\t\thelper: this.helper,\n\t\t\tposition: this.position,\n\t\t\toriginalPosition: this.originalPosition,\n\t\t\toffset: this.positionAbs\n\t\t};\n\t}\n\n} );\n\n$.ui.plugin.add( \"draggable\", \"connectToSortable\", {\n\tstart: function( event, ui, draggable ) {\n\t\tvar uiSortable = $.extend( {}, ui, {\n\t\t\titem: draggable.element\n\t\t} );\n\n\t\tdraggable.sortables = [];\n\t\t$( draggable.options.connectToSortable ).each( function() {\n\t\t\tvar sortable = $( this ).sortable( \"instance\" );\n\n\t\t\tif ( sortable && !sortable.options.disabled ) {\n\t\t\t\tdraggable.sortables.push( sortable );\n\n\t\t\t\t// RefreshPositions is called at drag start to refresh the containerCache\n\t\t\t\t// which is used in drag. This ensures it's initialized and synchronized\n\t\t\t\t// with any changes that might have happened on the page since initialization.\n\t\t\t\tsortable.refreshPositions();\n\t\t\t\tsortable._trigger( \"activate\", event, uiSortable );\n\t\t\t}\n\t\t} );\n\t},\n\tstop: function( event, ui, draggable ) {\n\t\tvar uiSortable = $.extend( {}, ui, {\n\t\t\titem: draggable.element\n\t\t} );\n\n\t\tdraggable.cancelHelperRemoval = false;\n\n\t\t$.each( draggable.sortables, function() {\n\t\t\tvar sortable = this;\n\n\t\t\tif ( sortable.isOver ) {\n\t\t\t\tsortable.isOver = 0;\n\n\t\t\t\t// Allow this sortable to handle removing the helper\n\t\t\t\tdraggable.cancelHelperRemoval = true;\n\t\t\t\tsortable.cancelHelperRemoval = false;\n\n\t\t\t\t// Use _storedCSS To restore properties in the sortable,\n\t\t\t\t// as this also handles revert (#9675) since the draggable\n\t\t\t\t// may have modified them in unexpected ways (#8809)\n\t\t\t\tsortable._storedCSS = {\n\t\t\t\t\tposition: sortable.placeholder.css( \"position\" ),\n\t\t\t\t\ttop: sortable.placeholder.css( \"top\" ),\n\t\t\t\t\tleft: sortable.placeholder.css( \"left\" )\n\t\t\t\t};\n\n\t\t\t\tsortable._mouseStop( event );\n\n\t\t\t\t// Once drag has ended, the sortable should return to using\n\t\t\t\t// its original helper, not the shared helper from draggable\n\t\t\t\tsortable.options.helper = sortable.options._helper;\n\t\t\t} else {\n\n\t\t\t\t// Prevent this Sortable from removing the helper.\n\t\t\t\t// However, don't set the draggable to remove the helper\n\t\t\t\t// either as another connected Sortable may yet handle the removal.\n\t\t\t\tsortable.cancelHelperRemoval = true;\n\n\t\t\t\tsortable._trigger( \"deactivate\", event, uiSortable );\n\t\t\t}\n\t\t} );\n\t},\n\tdrag: function( event, ui, draggable ) {\n\t\t$.each( draggable.sortables, function() {\n\t\t\tvar innermostIntersecting = false,\n\t\t\t\tsortable = this;\n\n\t\t\t// Copy over variables that sortable's _intersectsWith uses\n\t\t\tsortable.positionAbs = draggable.positionAbs;\n\t\t\tsortable.helperProportions = draggable.helperProportions;\n\t\t\tsortable.offset.click = draggable.offset.click;\n\n\t\t\tif ( sortable._intersectsWith( sortable.containerCache ) ) {\n\t\t\t\tinnermostIntersecting = true;\n\n\t\t\t\t$.each( draggable.sortables, function() {\n\n\t\t\t\t\t// Copy over variables that sortable's _intersectsWith uses\n\t\t\t\t\tthis.positionAbs = draggable.positionAbs;\n\t\t\t\t\tthis.helperProportions = draggable.helperProportions;\n\t\t\t\t\tthis.offset.click = draggable.offset.click;\n\n\t\t\t\t\tif ( this !== sortable &&\n\t\t\t\t\t\t\tthis._intersectsWith( this.containerCache ) &&\n\t\t\t\t\t\t\t$.contains( sortable.element[ 0 ], this.element[ 0 ] ) ) {\n\t\t\t\t\t\tinnermostIntersecting = false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn innermostIntersecting;\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( innermostIntersecting ) {\n\n\t\t\t\t// If it intersects, we use a little isOver variable and set it once,\n\t\t\t\t// so that the move-in stuff gets fired only once.\n\t\t\t\tif ( !sortable.isOver ) {\n\t\t\t\t\tsortable.isOver = 1;\n\n\t\t\t\t\t// Store draggable's parent in case we need to reappend to it later.\n\t\t\t\t\tdraggable._parent = ui.helper.parent();\n\n\t\t\t\t\tsortable.currentItem = ui.helper\n\t\t\t\t\t\t.appendTo( sortable.element )\n\t\t\t\t\t\t.data( \"ui-sortable-item\", true );\n\n\t\t\t\t\t// Store helper option to later restore it\n\t\t\t\t\tsortable.options._helper = sortable.options.helper;\n\n\t\t\t\t\tsortable.options.helper = function() {\n\t\t\t\t\t\treturn ui.helper[ 0 ];\n\t\t\t\t\t};\n\n\t\t\t\t\t// Fire the start events of the sortable with our passed browser event,\n\t\t\t\t\t// and our own helper (so it doesn't create a new one)\n\t\t\t\t\tevent.target = sortable.currentItem[ 0 ];\n\t\t\t\t\tsortable._mouseCapture( event, true );\n\t\t\t\t\tsortable._mouseStart( event, true, true );\n\n\t\t\t\t\t// Because the browser event is way off the new appended portlet,\n\t\t\t\t\t// modify necessary variables to reflect the changes\n\t\t\t\t\tsortable.offset.click.top = draggable.offset.click.top;\n\t\t\t\t\tsortable.offset.click.left = draggable.offset.click.left;\n\t\t\t\t\tsortable.offset.parent.left -= draggable.offset.parent.left -\n\t\t\t\t\t\tsortable.offset.parent.left;\n\t\t\t\t\tsortable.offset.parent.top -= draggable.offset.parent.top -\n\t\t\t\t\t\tsortable.offset.parent.top;\n\n\t\t\t\t\tdraggable._trigger( \"toSortable\", event );\n\n\t\t\t\t\t// Inform draggable that the helper is in a valid drop zone,\n\t\t\t\t\t// used solely in the revert option to handle \"valid/invalid\".\n\t\t\t\t\tdraggable.dropped = sortable.element;\n\n\t\t\t\t\t// Need to refreshPositions of all sortables in the case that\n\t\t\t\t\t// adding to one sortable changes the location of the other sortables (#9675)\n\t\t\t\t\t$.each( draggable.sortables, function() {\n\t\t\t\t\t\tthis.refreshPositions();\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Hack so receive/update callbacks work (mostly)\n\t\t\t\t\tdraggable.currentItem = draggable.element;\n\t\t\t\t\tsortable.fromOutside = draggable;\n\t\t\t\t}\n\n\t\t\t\tif ( sortable.currentItem ) {\n\t\t\t\t\tsortable._mouseDrag( event );\n\n\t\t\t\t\t// Copy the sortable's position because the draggable's can potentially reflect\n\t\t\t\t\t// a relative position, while sortable is always absolute, which the dragged\n\t\t\t\t\t// element has now become. (#8809)\n\t\t\t\t\tui.position = sortable.position;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// If it doesn't intersect with the sortable, and it intersected before,\n\t\t\t\t// we fake the drag stop of the sortable, but make sure it doesn't remove\n\t\t\t\t// the helper by using cancelHelperRemoval.\n\t\t\t\tif ( sortable.isOver ) {\n\n\t\t\t\t\tsortable.isOver = 0;\n\t\t\t\t\tsortable.cancelHelperRemoval = true;\n\n\t\t\t\t\t// Calling sortable's mouseStop would trigger a revert,\n\t\t\t\t\t// so revert must be temporarily false until after mouseStop is called.\n\t\t\t\t\tsortable.options._revert = sortable.options.revert;\n\t\t\t\t\tsortable.options.revert = false;\n\n\t\t\t\t\tsortable._trigger( \"out\", event, sortable._uiHash( sortable ) );\n\t\t\t\t\tsortable._mouseStop( event, true );\n\n\t\t\t\t\t// Restore sortable behaviors that were modfied\n\t\t\t\t\t// when the draggable entered the sortable area (#9481)\n\t\t\t\t\tsortable.options.revert = sortable.options._revert;\n\t\t\t\t\tsortable.options.helper = sortable.options._helper;\n\n\t\t\t\t\tif ( sortable.placeholder ) {\n\t\t\t\t\t\tsortable.placeholder.remove();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Restore and recalculate the draggable's offset considering the sortable\n\t\t\t\t\t// may have modified them in unexpected ways. (#8809, #10669)\n\t\t\t\t\tui.helper.appendTo( draggable._parent );\n\t\t\t\t\tdraggable._refreshOffsets( event );\n\t\t\t\t\tui.position = draggable._generatePosition( event, true );\n\n\t\t\t\t\tdraggable._trigger( \"fromSortable\", event );\n\n\t\t\t\t\t// Inform draggable that the helper is no longer in a valid drop zone\n\t\t\t\t\tdraggable.dropped = false;\n\n\t\t\t\t\t// Need to refreshPositions of all sortables just in case removing\n\t\t\t\t\t// from one sortable changes the location of other sortables (#9675)\n\t\t\t\t\t$.each( draggable.sortables, function() {\n\t\t\t\t\t\tthis.refreshPositions();\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"cursor\", {\n\tstart: function( event, ui, instance ) {\n\t\tvar t = $( \"body\" ),\n\t\t\to = instance.options;\n\n\t\tif ( t.css( \"cursor\" ) ) {\n\t\t\to._cursor = t.css( \"cursor\" );\n\t\t}\n\t\tt.css( \"cursor\", o.cursor );\n\t},\n\tstop: function( event, ui, instance ) {\n\t\tvar o = instance.options;\n\t\tif ( o._cursor ) {\n\t\t\t$( \"body\" ).css( \"cursor\", o._cursor );\n\t\t}\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"opacity\", {\n\tstart: function( event, ui, instance ) {\n\t\tvar t = $( ui.helper ),\n\t\t\to = instance.options;\n\t\tif ( t.css( \"opacity\" ) ) {\n\t\t\to._opacity = t.css( \"opacity\" );\n\t\t}\n\t\tt.css( \"opacity\", o.opacity );\n\t},\n\tstop: function( event, ui, instance ) {\n\t\tvar o = instance.options;\n\t\tif ( o._opacity ) {\n\t\t\t$( ui.helper ).css( \"opacity\", o._opacity );\n\t\t}\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"scroll\", {\n\tstart: function( event, ui, i ) {\n\t\tif ( !i.scrollParentNotHidden ) {\n\t\t\ti.scrollParentNotHidden = i.helper.scrollParent( false );\n\t\t}\n\n\t\tif ( i.scrollParentNotHidden[ 0 ] !== i.document[ 0 ] &&\n\t\t\t\ti.scrollParentNotHidden[ 0 ].tagName !== \"HTML\" ) {\n\t\t\ti.overflowOffset = i.scrollParentNotHidden.offset();\n\t\t}\n\t},\n\tdrag: function( event, ui, i  ) {\n\n\t\tvar o = i.options,\n\t\t\tscrolled = false,\n\t\t\tscrollParent = i.scrollParentNotHidden[ 0 ],\n\t\t\tdocument = i.document[ 0 ];\n\n\t\tif ( scrollParent !== document && scrollParent.tagName !== \"HTML\" ) {\n\t\t\tif ( !o.axis || o.axis !== \"x\" ) {\n\t\t\t\tif ( ( i.overflowOffset.top + scrollParent.offsetHeight ) - event.pageY <\n\t\t\t\t\t\to.scrollSensitivity ) {\n\t\t\t\t\tscrollParent.scrollTop = scrolled = scrollParent.scrollTop + o.scrollSpeed;\n\t\t\t\t} else if ( event.pageY - i.overflowOffset.top < o.scrollSensitivity ) {\n\t\t\t\t\tscrollParent.scrollTop = scrolled = scrollParent.scrollTop - o.scrollSpeed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !o.axis || o.axis !== \"y\" ) {\n\t\t\t\tif ( ( i.overflowOffset.left + scrollParent.offsetWidth ) - event.pageX <\n\t\t\t\t\t\to.scrollSensitivity ) {\n\t\t\t\t\tscrollParent.scrollLeft = scrolled = scrollParent.scrollLeft + o.scrollSpeed;\n\t\t\t\t} else if ( event.pageX - i.overflowOffset.left < o.scrollSensitivity ) {\n\t\t\t\t\tscrollParent.scrollLeft = scrolled = scrollParent.scrollLeft - o.scrollSpeed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( !o.axis || o.axis !== \"x\" ) {\n\t\t\t\tif ( event.pageY - $( document ).scrollTop() < o.scrollSensitivity ) {\n\t\t\t\t\tscrolled = $( document ).scrollTop( $( document ).scrollTop() - o.scrollSpeed );\n\t\t\t\t} else if ( $( window ).height() - ( event.pageY - $( document ).scrollTop() ) <\n\t\t\t\t\t\to.scrollSensitivity ) {\n\t\t\t\t\tscrolled = $( document ).scrollTop( $( document ).scrollTop() + o.scrollSpeed );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !o.axis || o.axis !== \"y\" ) {\n\t\t\t\tif ( event.pageX - $( document ).scrollLeft() < o.scrollSensitivity ) {\n\t\t\t\t\tscrolled = $( document ).scrollLeft(\n\t\t\t\t\t\t$( document ).scrollLeft() - o.scrollSpeed\n\t\t\t\t\t);\n\t\t\t\t} else if ( $( window ).width() - ( event.pageX - $( document ).scrollLeft() ) <\n\t\t\t\t\t\to.scrollSensitivity ) {\n\t\t\t\t\tscrolled = $( document ).scrollLeft(\n\t\t\t\t\t\t$( document ).scrollLeft() + o.scrollSpeed\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tif ( scrolled !== false && $.ui.ddmanager && !o.dropBehaviour ) {\n\t\t\t$.ui.ddmanager.prepareOffsets( i, event );\n\t\t}\n\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"snap\", {\n\tstart: function( event, ui, i ) {\n\n\t\tvar o = i.options;\n\n\t\ti.snapElements = [];\n\n\t\t$( o.snap.constructor !== String ? ( o.snap.items || \":data(ui-draggable)\" ) : o.snap )\n\t\t\t.each( function() {\n\t\t\t\tvar $t = $( this ),\n\t\t\t\t\t$o = $t.offset();\n\t\t\t\tif ( this !== i.element[ 0 ] ) {\n\t\t\t\t\ti.snapElements.push( {\n\t\t\t\t\t\titem: this,\n\t\t\t\t\t\twidth: $t.outerWidth(), height: $t.outerHeight(),\n\t\t\t\t\t\ttop: $o.top, left: $o.left\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t},\n\tdrag: function( event, ui, inst ) {\n\n\t\tvar ts, bs, ls, rs, l, r, t, b, i, first,\n\t\t\to = inst.options,\n\t\t\td = o.snapTolerance,\n\t\t\tx1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,\n\t\t\ty1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;\n\n\t\tfor ( i = inst.snapElements.length - 1; i >= 0; i-- ) {\n\n\t\t\tl = inst.snapElements[ i ].left - inst.margins.left;\n\t\t\tr = l + inst.snapElements[ i ].width;\n\t\t\tt = inst.snapElements[ i ].top - inst.margins.top;\n\t\t\tb = t + inst.snapElements[ i ].height;\n\n\t\t\tif ( x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d ||\n\t\t\t\t\t!$.contains( inst.snapElements[ i ].item.ownerDocument,\n\t\t\t\t\tinst.snapElements[ i ].item ) ) {\n\t\t\t\tif ( inst.snapElements[ i ].snapping ) {\n\t\t\t\t\t( inst.options.snap.release &&\n\t\t\t\t\t\tinst.options.snap.release.call(\n\t\t\t\t\t\t\tinst.element,\n\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t$.extend( inst._uiHash(), { snapItem: inst.snapElements[ i ].item } )\n\t\t\t\t\t\t) );\n\t\t\t\t}\n\t\t\t\tinst.snapElements[ i ].snapping = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( o.snapMode !== \"inner\" ) {\n\t\t\t\tts = Math.abs( t - y2 ) <= d;\n\t\t\t\tbs = Math.abs( b - y1 ) <= d;\n\t\t\t\tls = Math.abs( l - x2 ) <= d;\n\t\t\t\trs = Math.abs( r - x1 ) <= d;\n\t\t\t\tif ( ts ) {\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: t - inst.helperProportions.height,\n\t\t\t\t\t\tleft: 0\n\t\t\t\t\t} ).top;\n\t\t\t\t}\n\t\t\t\tif ( bs ) {\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: b,\n\t\t\t\t\t\tleft: 0\n\t\t\t\t\t} ).top;\n\t\t\t\t}\n\t\t\t\tif ( ls ) {\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: l - inst.helperProportions.width\n\t\t\t\t\t} ).left;\n\t\t\t\t}\n\t\t\t\tif ( rs ) {\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: r\n\t\t\t\t\t} ).left;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfirst = ( ts || bs || ls || rs );\n\n\t\t\tif ( o.snapMode !== \"outer\" ) {\n\t\t\t\tts = Math.abs( t - y1 ) <= d;\n\t\t\t\tbs = Math.abs( b - y2 ) <= d;\n\t\t\t\tls = Math.abs( l - x1 ) <= d;\n\t\t\t\trs = Math.abs( r - x2 ) <= d;\n\t\t\t\tif ( ts ) {\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: t,\n\t\t\t\t\t\tleft: 0\n\t\t\t\t\t} ).top;\n\t\t\t\t}\n\t\t\t\tif ( bs ) {\n\t\t\t\t\tui.position.top = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: b - inst.helperProportions.height,\n\t\t\t\t\t\tleft: 0\n\t\t\t\t\t} ).top;\n\t\t\t\t}\n\t\t\t\tif ( ls ) {\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: l\n\t\t\t\t\t} ).left;\n\t\t\t\t}\n\t\t\t\tif ( rs ) {\n\t\t\t\t\tui.position.left = inst._convertPositionTo( \"relative\", {\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: r - inst.helperProportions.width\n\t\t\t\t\t} ).left;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !inst.snapElements[ i ].snapping && ( ts || bs || ls || rs || first ) ) {\n\t\t\t\t( inst.options.snap.snap &&\n\t\t\t\t\tinst.options.snap.snap.call(\n\t\t\t\t\t\tinst.element,\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\t$.extend( inst._uiHash(), {\n\t\t\t\t\t\t\tsnapItem: inst.snapElements[ i ].item\n\t\t\t\t\t\t} ) ) );\n\t\t\t}\n\t\t\tinst.snapElements[ i ].snapping = ( ts || bs || ls || rs || first );\n\n\t\t}\n\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"stack\", {\n\tstart: function( event, ui, instance ) {\n\t\tvar min,\n\t\t\to = instance.options,\n\t\t\tgroup = $.makeArray( $( o.stack ) ).sort( function( a, b ) {\n\t\t\t\treturn ( parseInt( $( a ).css( \"zIndex\" ), 10 ) || 0 ) -\n\t\t\t\t\t( parseInt( $( b ).css( \"zIndex\" ), 10 ) || 0 );\n\t\t\t} );\n\n\t\tif ( !group.length ) { return; }\n\n\t\tmin = parseInt( $( group[ 0 ] ).css( \"zIndex\" ), 10 ) || 0;\n\t\t$( group ).each( function( i ) {\n\t\t\t$( this ).css( \"zIndex\", min + i );\n\t\t} );\n\t\tthis.css( \"zIndex\", ( min + group.length ) );\n\t}\n} );\n\n$.ui.plugin.add( \"draggable\", \"zIndex\", {\n\tstart: function( event, ui, instance ) {\n\t\tvar t = $( ui.helper ),\n\t\t\to = instance.options;\n\n\t\tif ( t.css( \"zIndex\" ) ) {\n\t\t\to._zIndex = t.css( \"zIndex\" );\n\t\t}\n\t\tt.css( \"zIndex\", o.zIndex );\n\t},\n\tstop: function( event, ui, instance ) {\n\t\tvar o = instance.options;\n\n\t\tif ( o._zIndex ) {\n\t\t\t$( ui.helper ).css( \"zIndex\", o._zIndex );\n\t\t}\n\t}\n} );\n\nreturn $.ui.draggable;\n\n} ) );\n",
    "/*!\n * jQuery UI Menu 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Menu\n//>>group: Widgets\n//>>description: Creates nestable menus.\n//>>docs: http://api.jqueryui.com/menu/\n//>>demos: http://jqueryui.com/menu/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/menu.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"../keycode\",\n\t\t\t\"../position\",\n\t\t\t\"../safe-active-element\",\n\t\t\t\"../unique-id\",\n\t\t\t\"../version\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\nreturn $.widget( \"ui.menu\", {\n\tversion: \"1.12.1\",\n\tdefaultElement: \"<ul>\",\n\tdelay: 300,\n\toptions: {\n\t\ticons: {\n\t\t\tsubmenu: \"ui-icon-caret-1-e\"\n\t\t},\n\t\titems: \"> *\",\n\t\tmenus: \"ul\",\n\t\tposition: {\n\t\t\tmy: \"left top\",\n\t\t\tat: \"right top\"\n\t\t},\n\t\trole: \"menu\",\n\n\t\t// Callbacks\n\t\tblur: null,\n\t\tfocus: null,\n\t\tselect: null\n\t},\n\n\t_create: function() {\n\t\tthis.activeMenu = this.element;\n\n\t\t// Flag used to prevent firing of the click handler\n\t\t// as the event bubbles up through nested menus\n\t\tthis.mouseHandled = false;\n\t\tthis.element\n\t\t\t.uniqueId()\n\t\t\t.attr( {\n\t\t\t\trole: this.options.role,\n\t\t\t\ttabIndex: 0\n\t\t\t} );\n\n\t\tthis._addClass( \"ui-menu\", \"ui-widget ui-widget-content\" );\n\t\tthis._on( {\n\n\t\t\t// Prevent focus from sticking to links inside menu after clicking\n\t\t\t// them (focus should always stay on UL during navigation).\n\t\t\t\"mousedown .ui-menu-item\": function( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t},\n\t\t\t\"click .ui-menu-item\": function( event ) {\n\t\t\t\tvar target = $( event.target );\n\t\t\t\tvar active = $( $.ui.safeActiveElement( this.document[ 0 ] ) );\n\t\t\t\tif ( !this.mouseHandled && target.not( \".ui-state-disabled\" ).length ) {\n\t\t\t\t\tthis.select( event );\n\n\t\t\t\t\t// Only set the mouseHandled flag if the event will bubble, see #9469.\n\t\t\t\t\tif ( !event.isPropagationStopped() ) {\n\t\t\t\t\t\tthis.mouseHandled = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Open submenu on click\n\t\t\t\t\tif ( target.has( \".ui-menu\" ).length ) {\n\t\t\t\t\t\tthis.expand( event );\n\t\t\t\t\t} else if ( !this.element.is( \":focus\" ) &&\n\t\t\t\t\t\t\tactive.closest( \".ui-menu\" ).length ) {\n\n\t\t\t\t\t\t// Redirect focus to the menu\n\t\t\t\t\t\tthis.element.trigger( \"focus\", [ true ] );\n\n\t\t\t\t\t\t// If the active item is on the top level, let it stay active.\n\t\t\t\t\t\t// Otherwise, blur the active item since it is no longer visible.\n\t\t\t\t\t\tif ( this.active && this.active.parents( \".ui-menu\" ).length === 1 ) {\n\t\t\t\t\t\t\tclearTimeout( this.timer );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"mouseenter .ui-menu-item\": function( event ) {\n\n\t\t\t\t// Ignore mouse events while typeahead is active, see #10458.\n\t\t\t\t// Prevents focusing the wrong item when typeahead causes a scroll while the mouse\n\t\t\t\t// is over an item in the menu\n\t\t\t\tif ( this.previousFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar actualTarget = $( event.target ).closest( \".ui-menu-item\" ),\n\t\t\t\t\ttarget = $( event.currentTarget );\n\n\t\t\t\t// Ignore bubbled events on parent items, see #11641\n\t\t\t\tif ( actualTarget[ 0 ] !== target[ 0 ] ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove ui-state-active class from siblings of the newly focused menu item\n\t\t\t\t// to avoid a jump caused by adjacent elements both having a class with a border\n\t\t\t\tthis._removeClass( target.siblings().children( \".ui-state-active\" ),\n\t\t\t\t\tnull, \"ui-state-active\" );\n\t\t\t\tthis.focus( event, target );\n\t\t\t},\n\t\t\tmouseleave: \"collapseAll\",\n\t\t\t\"mouseleave .ui-menu\": \"collapseAll\",\n\t\t\tfocus: function( event, keepActiveItem ) {\n\n\t\t\t\t// If there's already an active item, keep it active\n\t\t\t\t// If not, activate the first item\n\t\t\t\tvar item = this.active || this.element.find( this.options.items ).eq( 0 );\n\n\t\t\t\tif ( !keepActiveItem ) {\n\t\t\t\t\tthis.focus( event, item );\n\t\t\t\t}\n\t\t\t},\n\t\t\tblur: function( event ) {\n\t\t\t\tthis._delay( function() {\n\t\t\t\t\tvar notContained = !$.contains(\n\t\t\t\t\t\tthis.element[ 0 ],\n\t\t\t\t\t\t$.ui.safeActiveElement( this.document[ 0 ] )\n\t\t\t\t\t);\n\t\t\t\t\tif ( notContained ) {\n\t\t\t\t\t\tthis.collapseAll( event );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t},\n\t\t\tkeydown: \"_keydown\"\n\t\t} );\n\n\t\tthis.refresh();\n\n\t\t// Clicks outside of a menu collapse any open menus\n\t\tthis._on( this.document, {\n\t\t\tclick: function( event ) {\n\t\t\t\tif ( this._closeOnDocumentClick( event ) ) {\n\t\t\t\t\tthis.collapseAll( event );\n\t\t\t\t}\n\n\t\t\t\t// Reset the mouseHandled flag\n\t\t\t\tthis.mouseHandled = false;\n\t\t\t}\n\t\t} );\n\t},\n\n\t_destroy: function() {\n\t\tvar items = this.element.find( \".ui-menu-item\" )\n\t\t\t\t.removeAttr( \"role aria-disabled\" ),\n\t\t\tsubmenus = items.children( \".ui-menu-item-wrapper\" )\n\t\t\t\t.removeUniqueId()\n\t\t\t\t.removeAttr( \"tabIndex role aria-haspopup\" );\n\n\t\t// Destroy (sub)menus\n\t\tthis.element\n\t\t\t.removeAttr( \"aria-activedescendant\" )\n\t\t\t.find( \".ui-menu\" ).addBack()\n\t\t\t\t.removeAttr( \"role aria-labelledby aria-expanded aria-hidden aria-disabled \" +\n\t\t\t\t\t\"tabIndex\" )\n\t\t\t\t.removeUniqueId()\n\t\t\t\t.show();\n\n\t\tsubmenus.children().each( function() {\n\t\t\tvar elem = $( this );\n\t\t\tif ( elem.data( \"ui-menu-submenu-caret\" ) ) {\n\t\t\t\telem.remove();\n\t\t\t}\n\t\t} );\n\t},\n\n\t_keydown: function( event ) {\n\t\tvar match, prev, character, skip,\n\t\t\tpreventDefault = true;\n\n\t\tswitch ( event.keyCode ) {\n\t\tcase $.ui.keyCode.PAGE_UP:\n\t\t\tthis.previousPage( event );\n\t\t\tbreak;\n\t\tcase $.ui.keyCode.PAGE_DOWN:\n\t\t\tthis.nextPage( event );\n\t\t\tbreak;\n\t\tcase $.ui.keyCode.HOME:\n\t\t\tthis._move( \"first\", \"first\", event );\n\t\t\tbreak;\n\t\tcase $.ui.keyCode.END:\n\t\t\tthis._move( \"last\", \"last\", event );\n\t\t\tbreak;\n\t\tcase $.ui.keyCode.UP:\n\t\t\tthis.previous( event );\n\t\t\tbreak;\n\t\tcase $.ui.keyCode.DOWN:\n\t\t\tthis.next( event );\n\t\t\tbreak;\n\t\tcase $.ui.keyCode.LEFT:\n\t\t\tthis.collapse( event );\n\t\t\tbreak;\n\t\tcase $.ui.keyCode.RIGHT:\n\t\t\tif ( this.active && !this.active.is( \".ui-state-disabled\" ) ) {\n\t\t\t\tthis.expand( event );\n\t\t\t}\n\t\t\tbreak;\n\t\tcase $.ui.keyCode.ENTER:\n\t\tcase $.ui.keyCode.SPACE:\n\t\t\tthis._activate( event );\n\t\t\tbreak;\n\t\tcase $.ui.keyCode.ESCAPE:\n\t\t\tthis.collapse( event );\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tpreventDefault = false;\n\t\t\tprev = this.previousFilter || \"\";\n\t\t\tskip = false;\n\n\t\t\t// Support number pad values\n\t\t\tcharacter = event.keyCode >= 96 && event.keyCode <= 105 ?\n\t\t\t\t( event.keyCode - 96 ).toString() : String.fromCharCode( event.keyCode );\n\n\t\t\tclearTimeout( this.filterTimer );\n\n\t\t\tif ( character === prev ) {\n\t\t\t\tskip = true;\n\t\t\t} else {\n\t\t\t\tcharacter = prev + character;\n\t\t\t}\n\n\t\t\tmatch = this._filterMenuItems( character );\n\t\t\tmatch = skip && match.index( this.active.next() ) !== -1 ?\n\t\t\t\tthis.active.nextAll( \".ui-menu-item\" ) :\n\t\t\t\tmatch;\n\n\t\t\t// If no matches on the current filter, reset to the last character pressed\n\t\t\t// to move down the menu to the first item that starts with that character\n\t\t\tif ( !match.length ) {\n\t\t\t\tcharacter = String.fromCharCode( event.keyCode );\n\t\t\t\tmatch = this._filterMenuItems( character );\n\t\t\t}\n\n\t\t\tif ( match.length ) {\n\t\t\t\tthis.focus( event, match );\n\t\t\t\tthis.previousFilter = character;\n\t\t\t\tthis.filterTimer = this._delay( function() {\n\t\t\t\t\tdelete this.previousFilter;\n\t\t\t\t}, 1000 );\n\t\t\t} else {\n\t\t\t\tdelete this.previousFilter;\n\t\t\t}\n\t\t}\n\n\t\tif ( preventDefault ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t},\n\n\t_activate: function( event ) {\n\t\tif ( this.active && !this.active.is( \".ui-state-disabled\" ) ) {\n\t\t\tif ( this.active.children( \"[aria-haspopup='true']\" ).length ) {\n\t\t\t\tthis.expand( event );\n\t\t\t} else {\n\t\t\t\tthis.select( event );\n\t\t\t}\n\t\t}\n\t},\n\n\trefresh: function() {\n\t\tvar menus, items, newSubmenus, newItems, newWrappers,\n\t\t\tthat = this,\n\t\t\ticon = this.options.icons.submenu,\n\t\t\tsubmenus = this.element.find( this.options.menus );\n\n\t\tthis._toggleClass( \"ui-menu-icons\", null, !!this.element.find( \".ui-icon\" ).length );\n\n\t\t// Initialize nested menus\n\t\tnewSubmenus = submenus.filter( \":not(.ui-menu)\" )\n\t\t\t.hide()\n\t\t\t.attr( {\n\t\t\t\trole: this.options.role,\n\t\t\t\t\"aria-hidden\": \"true\",\n\t\t\t\t\"aria-expanded\": \"false\"\n\t\t\t} )\n\t\t\t.each( function() {\n\t\t\t\tvar menu = $( this ),\n\t\t\t\t\titem = menu.prev(),\n\t\t\t\t\tsubmenuCaret = $( \"<span>\" ).data( \"ui-menu-submenu-caret\", true );\n\n\t\t\t\tthat._addClass( submenuCaret, \"ui-menu-icon\", \"ui-icon \" + icon );\n\t\t\t\titem\n\t\t\t\t\t.attr( \"aria-haspopup\", \"true\" )\n\t\t\t\t\t.prepend( submenuCaret );\n\t\t\t\tmenu.attr( \"aria-labelledby\", item.attr( \"id\" ) );\n\t\t\t} );\n\n\t\tthis._addClass( newSubmenus, \"ui-menu\", \"ui-widget ui-widget-content ui-front\" );\n\n\t\tmenus = submenus.add( this.element );\n\t\titems = menus.find( this.options.items );\n\n\t\t// Initialize menu-items containing spaces and/or dashes only as dividers\n\t\titems.not( \".ui-menu-item\" ).each( function() {\n\t\t\tvar item = $( this );\n\t\t\tif ( that._isDivider( item ) ) {\n\t\t\t\tthat._addClass( item, \"ui-menu-divider\", \"ui-widget-content\" );\n\t\t\t}\n\t\t} );\n\n\t\t// Don't refresh list items that are already adapted\n\t\tnewItems = items.not( \".ui-menu-item, .ui-menu-divider\" );\n\t\tnewWrappers = newItems.children()\n\t\t\t.not( \".ui-menu\" )\n\t\t\t\t.uniqueId()\n\t\t\t\t.attr( {\n\t\t\t\t\ttabIndex: -1,\n\t\t\t\t\trole: this._itemRole()\n\t\t\t\t} );\n\t\tthis._addClass( newItems, \"ui-menu-item\" )\n\t\t\t._addClass( newWrappers, \"ui-menu-item-wrapper\" );\n\n\t\t// Add aria-disabled attribute to any disabled menu item\n\t\titems.filter( \".ui-state-disabled\" ).attr( \"aria-disabled\", \"true\" );\n\n\t\t// If the active item has been removed, blur the menu\n\t\tif ( this.active && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {\n\t\t\tthis.blur();\n\t\t}\n\t},\n\n\t_itemRole: function() {\n\t\treturn {\n\t\t\tmenu: \"menuitem\",\n\t\t\tlistbox: \"option\"\n\t\t}[ this.options.role ];\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tif ( key === \"icons\" ) {\n\t\t\tvar icons = this.element.find( \".ui-menu-icon\" );\n\t\t\tthis._removeClass( icons, null, this.options.icons.submenu )\n\t\t\t\t._addClass( icons, null, value.submenu );\n\t\t}\n\t\tthis._super( key, value );\n\t},\n\n\t_setOptionDisabled: function( value ) {\n\t\tthis._super( value );\n\n\t\tthis.element.attr( \"aria-disabled\", String( value ) );\n\t\tthis._toggleClass( null, \"ui-state-disabled\", !!value );\n\t},\n\n\tfocus: function( event, item ) {\n\t\tvar nested, focused, activeParent;\n\t\tthis.blur( event, event && event.type === \"focus\" );\n\n\t\tthis._scrollIntoView( item );\n\n\t\tthis.active = item.first();\n\n\t\tfocused = this.active.children( \".ui-menu-item-wrapper\" );\n\t\tthis._addClass( focused, null, \"ui-state-active\" );\n\n\t\t// Only update aria-activedescendant if there's a role\n\t\t// otherwise we assume focus is managed elsewhere\n\t\tif ( this.options.role ) {\n\t\t\tthis.element.attr( \"aria-activedescendant\", focused.attr( \"id\" ) );\n\t\t}\n\n\t\t// Highlight active parent menu item, if any\n\t\tactiveParent = this.active\n\t\t\t.parent()\n\t\t\t\t.closest( \".ui-menu-item\" )\n\t\t\t\t\t.children( \".ui-menu-item-wrapper\" );\n\t\tthis._addClass( activeParent, null, \"ui-state-active\" );\n\n\t\tif ( event && event.type === \"keydown\" ) {\n\t\t\tthis._close();\n\t\t} else {\n\t\t\tthis.timer = this._delay( function() {\n\t\t\t\tthis._close();\n\t\t\t}, this.delay );\n\t\t}\n\n\t\tnested = item.children( \".ui-menu\" );\n\t\tif ( nested.length && event && ( /^mouse/.test( event.type ) ) ) {\n\t\t\tthis._startOpening( nested );\n\t\t}\n\t\tthis.activeMenu = item.parent();\n\n\t\tthis._trigger( \"focus\", event, { item: item } );\n\t},\n\n\t_scrollIntoView: function( item ) {\n\t\tvar borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;\n\t\tif ( this._hasScroll() ) {\n\t\t\tborderTop = parseFloat( $.css( this.activeMenu[ 0 ], \"borderTopWidth\" ) ) || 0;\n\t\t\tpaddingTop = parseFloat( $.css( this.activeMenu[ 0 ], \"paddingTop\" ) ) || 0;\n\t\t\toffset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;\n\t\t\tscroll = this.activeMenu.scrollTop();\n\t\t\telementHeight = this.activeMenu.height();\n\t\t\titemHeight = item.outerHeight();\n\n\t\t\tif ( offset < 0 ) {\n\t\t\t\tthis.activeMenu.scrollTop( scroll + offset );\n\t\t\t} else if ( offset + itemHeight > elementHeight ) {\n\t\t\t\tthis.activeMenu.scrollTop( scroll + offset - elementHeight + itemHeight );\n\t\t\t}\n\t\t}\n\t},\n\n\tblur: function( event, fromFocus ) {\n\t\tif ( !fromFocus ) {\n\t\t\tclearTimeout( this.timer );\n\t\t}\n\n\t\tif ( !this.active ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._removeClass( this.active.children( \".ui-menu-item-wrapper\" ),\n\t\t\tnull, \"ui-state-active\" );\n\n\t\tthis._trigger( \"blur\", event, { item: this.active } );\n\t\tthis.active = null;\n\t},\n\n\t_startOpening: function( submenu ) {\n\t\tclearTimeout( this.timer );\n\n\t\t// Don't open if already open fixes a Firefox bug that caused a .5 pixel\n\t\t// shift in the submenu position when mousing over the caret icon\n\t\tif ( submenu.attr( \"aria-hidden\" ) !== \"true\" ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.timer = this._delay( function() {\n\t\t\tthis._close();\n\t\t\tthis._open( submenu );\n\t\t}, this.delay );\n\t},\n\n\t_open: function( submenu ) {\n\t\tvar position = $.extend( {\n\t\t\tof: this.active\n\t\t}, this.options.position );\n\n\t\tclearTimeout( this.timer );\n\t\tthis.element.find( \".ui-menu\" ).not( submenu.parents( \".ui-menu\" ) )\n\t\t\t.hide()\n\t\t\t.attr( \"aria-hidden\", \"true\" );\n\n\t\tsubmenu\n\t\t\t.show()\n\t\t\t.removeAttr( \"aria-hidden\" )\n\t\t\t.attr( \"aria-expanded\", \"true\" )\n\t\t\t.position( position );\n\t},\n\n\tcollapseAll: function( event, all ) {\n\t\tclearTimeout( this.timer );\n\t\tthis.timer = this._delay( function() {\n\n\t\t\t// If we were passed an event, look for the submenu that contains the event\n\t\t\tvar currentMenu = all ? this.element :\n\t\t\t\t$( event && event.target ).closest( this.element.find( \".ui-menu\" ) );\n\n\t\t\t// If we found no valid submenu ancestor, use the main menu to close all\n\t\t\t// sub menus anyway\n\t\t\tif ( !currentMenu.length ) {\n\t\t\t\tcurrentMenu = this.element;\n\t\t\t}\n\n\t\t\tthis._close( currentMenu );\n\n\t\t\tthis.blur( event );\n\n\t\t\t// Work around active item staying active after menu is blurred\n\t\t\tthis._removeClass( currentMenu.find( \".ui-state-active\" ), null, \"ui-state-active\" );\n\n\t\t\tthis.activeMenu = currentMenu;\n\t\t}, this.delay );\n\t},\n\n\t// With no arguments, closes the currently active menu - if nothing is active\n\t// it closes all menus.  If passed an argument, it will search for menus BELOW\n\t_close: function( startMenu ) {\n\t\tif ( !startMenu ) {\n\t\t\tstartMenu = this.active ? this.active.parent() : this.element;\n\t\t}\n\n\t\tstartMenu.find( \".ui-menu\" )\n\t\t\t.hide()\n\t\t\t.attr( \"aria-hidden\", \"true\" )\n\t\t\t.attr( \"aria-expanded\", \"false\" );\n\t},\n\n\t_closeOnDocumentClick: function( event ) {\n\t\treturn !$( event.target ).closest( \".ui-menu\" ).length;\n\t},\n\n\t_isDivider: function( item ) {\n\n\t\t// Match hyphen, em dash, en dash\n\t\treturn !/[^\\-\\u2014\\u2013\\s]/.test( item.text() );\n\t},\n\n\tcollapse: function( event ) {\n\t\tvar newItem = this.active &&\n\t\t\tthis.active.parent().closest( \".ui-menu-item\", this.element );\n\t\tif ( newItem && newItem.length ) {\n\t\t\tthis._close();\n\t\t\tthis.focus( event, newItem );\n\t\t}\n\t},\n\n\texpand: function( event ) {\n\t\tvar newItem = this.active &&\n\t\t\tthis.active\n\t\t\t\t.children( \".ui-menu \" )\n\t\t\t\t\t.find( this.options.items )\n\t\t\t\t\t\t.first();\n\n\t\tif ( newItem && newItem.length ) {\n\t\t\tthis._open( newItem.parent() );\n\n\t\t\t// Delay so Firefox will not hide activedescendant change in expanding submenu from AT\n\t\t\tthis._delay( function() {\n\t\t\t\tthis.focus( event, newItem );\n\t\t\t} );\n\t\t}\n\t},\n\n\tnext: function( event ) {\n\t\tthis._move( \"next\", \"first\", event );\n\t},\n\n\tprevious: function( event ) {\n\t\tthis._move( \"prev\", \"last\", event );\n\t},\n\n\tisFirstItem: function() {\n\t\treturn this.active && !this.active.prevAll( \".ui-menu-item\" ).length;\n\t},\n\n\tisLastItem: function() {\n\t\treturn this.active && !this.active.nextAll( \".ui-menu-item\" ).length;\n\t},\n\n\t_move: function( direction, filter, event ) {\n\t\tvar next;\n\t\tif ( this.active ) {\n\t\t\tif ( direction === \"first\" || direction === \"last\" ) {\n\t\t\t\tnext = this.active\n\t\t\t\t\t[ direction === \"first\" ? \"prevAll\" : \"nextAll\" ]( \".ui-menu-item\" )\n\t\t\t\t\t.eq( -1 );\n\t\t\t} else {\n\t\t\t\tnext = this.active\n\t\t\t\t\t[ direction + \"All\" ]( \".ui-menu-item\" )\n\t\t\t\t\t.eq( 0 );\n\t\t\t}\n\t\t}\n\t\tif ( !next || !next.length || !this.active ) {\n\t\t\tnext = this.activeMenu.find( this.options.items )[ filter ]();\n\t\t}\n\n\t\tthis.focus( event, next );\n\t},\n\n\tnextPage: function( event ) {\n\t\tvar item, base, height;\n\n\t\tif ( !this.active ) {\n\t\t\tthis.next( event );\n\t\t\treturn;\n\t\t}\n\t\tif ( this.isLastItem() ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( this._hasScroll() ) {\n\t\t\tbase = this.active.offset().top;\n\t\t\theight = this.element.height();\n\t\t\tthis.active.nextAll( \".ui-menu-item\" ).each( function() {\n\t\t\t\titem = $( this );\n\t\t\t\treturn item.offset().top - base - height < 0;\n\t\t\t} );\n\n\t\t\tthis.focus( event, item );\n\t\t} else {\n\t\t\tthis.focus( event, this.activeMenu.find( this.options.items )\n\t\t\t\t[ !this.active ? \"first\" : \"last\" ]() );\n\t\t}\n\t},\n\n\tpreviousPage: function( event ) {\n\t\tvar item, base, height;\n\t\tif ( !this.active ) {\n\t\t\tthis.next( event );\n\t\t\treturn;\n\t\t}\n\t\tif ( this.isFirstItem() ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( this._hasScroll() ) {\n\t\t\tbase = this.active.offset().top;\n\t\t\theight = this.element.height();\n\t\t\tthis.active.prevAll( \".ui-menu-item\" ).each( function() {\n\t\t\t\titem = $( this );\n\t\t\t\treturn item.offset().top - base + height > 0;\n\t\t\t} );\n\n\t\t\tthis.focus( event, item );\n\t\t} else {\n\t\t\tthis.focus( event, this.activeMenu.find( this.options.items ).first() );\n\t\t}\n\t},\n\n\t_hasScroll: function() {\n\t\treturn this.element.outerHeight() < this.element.prop( \"scrollHeight\" );\n\t},\n\n\tselect: function( event ) {\n\n\t\t// TODO: It should never be possible to not have an active item at this\n\t\t// point, but the tests don't trigger mouseenter before click.\n\t\tthis.active = this.active || $( event.target ).closest( \".ui-menu-item\" );\n\t\tvar ui = { item: this.active };\n\t\tif ( !this.active.has( \".ui-menu\" ).length ) {\n\t\t\tthis.collapseAll( event, true );\n\t\t}\n\t\tthis._trigger( \"select\", event, ui );\n\t},\n\n\t_filterMenuItems: function( character ) {\n\t\tvar escapedCharacter = character.replace( /[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\" ),\n\t\t\tregex = new RegExp( \"^\" + escapedCharacter, \"i\" );\n\n\t\treturn this.activeMenu\n\t\t\t.find( this.options.items )\n\n\t\t\t\t// Only match on items, not dividers or other content (#10571)\n\t\t\t\t.filter( \".ui-menu-item\" )\n\t\t\t\t\t.filter( function() {\n\t\t\t\t\t\treturn regex.test(\n\t\t\t\t\t\t\t$.trim( $( this ).children( \".ui-menu-item-wrapper\" ).text() ) );\n\t\t\t\t\t} );\n\t}\n} );\n\n} ) );\n",
    "/*!\n * jQuery UI Mouse 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Mouse\n//>>group: Widgets\n//>>description: Abstracts mouse-based interactions to assist in creating certain widgets.\n//>>docs: http://api.jqueryui.com/mouse/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"../ie\",\n\t\t\t\"../version\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\nvar mouseHandled = false;\n$( document ).on( \"mouseup\", function() {\n\tmouseHandled = false;\n} );\n\nreturn $.widget( \"ui.mouse\", {\n\tversion: \"1.12.1\",\n\toptions: {\n\t\tcancel: \"input, textarea, button, select, option\",\n\t\tdistance: 1,\n\t\tdelay: 0\n\t},\n\t_mouseInit: function() {\n\t\tvar that = this;\n\n\t\tthis.element\n\t\t\t.on( \"mousedown.\" + this.widgetName, function( event ) {\n\t\t\t\treturn that._mouseDown( event );\n\t\t\t} )\n\t\t\t.on( \"click.\" + this.widgetName, function( event ) {\n\t\t\t\tif ( true === $.data( event.target, that.widgetName + \".preventClickEvent\" ) ) {\n\t\t\t\t\t$.removeData( event.target, that.widgetName + \".preventClickEvent\" );\n\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} );\n\n\t\tthis.started = false;\n\t},\n\n\t// TODO: make sure destroying one instance of mouse doesn't mess with\n\t// other instances of mouse\n\t_mouseDestroy: function() {\n\t\tthis.element.off( \".\" + this.widgetName );\n\t\tif ( this._mouseMoveDelegate ) {\n\t\t\tthis.document\n\t\t\t\t.off( \"mousemove.\" + this.widgetName, this._mouseMoveDelegate )\n\t\t\t\t.off( \"mouseup.\" + this.widgetName, this._mouseUpDelegate );\n\t\t}\n\t},\n\n\t_mouseDown: function( event ) {\n\n\t\t// don't let more than one widget handle mouseStart\n\t\tif ( mouseHandled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseMoved = false;\n\n\t\t// We may have missed mouseup (out of window)\n\t\t( this._mouseStarted && this._mouseUp( event ) );\n\n\t\tthis._mouseDownEvent = event;\n\n\t\tvar that = this,\n\t\t\tbtnIsLeft = ( event.which === 1 ),\n\n\t\t\t// event.target.nodeName works around a bug in IE 8 with\n\t\t\t// disabled inputs (#7620)\n\t\t\telIsCancel = ( typeof this.options.cancel === \"string\" && event.target.nodeName ?\n\t\t\t\t$( event.target ).closest( this.options.cancel ).length : false );\n\t\tif ( !btnIsLeft || elIsCancel || !this._mouseCapture( event ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.mouseDelayMet = !this.options.delay;\n\t\tif ( !this.mouseDelayMet ) {\n\t\t\tthis._mouseDelayTimer = setTimeout( function() {\n\t\t\t\tthat.mouseDelayMet = true;\n\t\t\t}, this.options.delay );\n\t\t}\n\n\t\tif ( this._mouseDistanceMet( event ) && this._mouseDelayMet( event ) ) {\n\t\t\tthis._mouseStarted = ( this._mouseStart( event ) !== false );\n\t\t\tif ( !this._mouseStarted ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Click event may never have fired (Gecko & Opera)\n\t\tif ( true === $.data( event.target, this.widgetName + \".preventClickEvent\" ) ) {\n\t\t\t$.removeData( event.target, this.widgetName + \".preventClickEvent\" );\n\t\t}\n\n\t\t// These delegates are required to keep context\n\t\tthis._mouseMoveDelegate = function( event ) {\n\t\t\treturn that._mouseMove( event );\n\t\t};\n\t\tthis._mouseUpDelegate = function( event ) {\n\t\t\treturn that._mouseUp( event );\n\t\t};\n\n\t\tthis.document\n\t\t\t.on( \"mousemove.\" + this.widgetName, this._mouseMoveDelegate )\n\t\t\t.on( \"mouseup.\" + this.widgetName, this._mouseUpDelegate );\n\n\t\tevent.preventDefault();\n\n\t\tmouseHandled = true;\n\t\treturn true;\n\t},\n\n\t_mouseMove: function( event ) {\n\n\t\t// Only check for mouseups outside the document if you've moved inside the document\n\t\t// at least once. This prevents the firing of mouseup in the case of IE<9, which will\n\t\t// fire a mousemove event if content is placed under the cursor. See #7778\n\t\t// Support: IE <9\n\t\tif ( this._mouseMoved ) {\n\n\t\t\t// IE mouseup check - mouseup happened when mouse was out of window\n\t\t\tif ( $.ui.ie && ( !document.documentMode || document.documentMode < 9 ) &&\n\t\t\t\t\t!event.button ) {\n\t\t\t\treturn this._mouseUp( event );\n\n\t\t\t// Iframe mouseup check - mouseup occurred in another document\n\t\t\t} else if ( !event.which ) {\n\n\t\t\t\t// Support: Safari <=8 - 9\n\t\t\t\t// Safari sets which to 0 if you press any of the following keys\n\t\t\t\t// during a drag (#14461)\n\t\t\t\tif ( event.originalEvent.altKey || event.originalEvent.ctrlKey ||\n\t\t\t\t\t\tevent.originalEvent.metaKey || event.originalEvent.shiftKey ) {\n\t\t\t\t\tthis.ignoreMissingWhich = true;\n\t\t\t\t} else if ( !this.ignoreMissingWhich ) {\n\t\t\t\t\treturn this._mouseUp( event );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( event.which || event.button ) {\n\t\t\tthis._mouseMoved = true;\n\t\t}\n\n\t\tif ( this._mouseStarted ) {\n\t\t\tthis._mouseDrag( event );\n\t\t\treturn event.preventDefault();\n\t\t}\n\n\t\tif ( this._mouseDistanceMet( event ) && this._mouseDelayMet( event ) ) {\n\t\t\tthis._mouseStarted =\n\t\t\t\t( this._mouseStart( this._mouseDownEvent, event ) !== false );\n\t\t\t( this._mouseStarted ? this._mouseDrag( event ) : this._mouseUp( event ) );\n\t\t}\n\n\t\treturn !this._mouseStarted;\n\t},\n\n\t_mouseUp: function( event ) {\n\t\tthis.document\n\t\t\t.off( \"mousemove.\" + this.widgetName, this._mouseMoveDelegate )\n\t\t\t.off( \"mouseup.\" + this.widgetName, this._mouseUpDelegate );\n\n\t\tif ( this._mouseStarted ) {\n\t\t\tthis._mouseStarted = false;\n\n\t\t\tif ( event.target === this._mouseDownEvent.target ) {\n\t\t\t\t$.data( event.target, this.widgetName + \".preventClickEvent\", true );\n\t\t\t}\n\n\t\t\tthis._mouseStop( event );\n\t\t}\n\n\t\tif ( this._mouseDelayTimer ) {\n\t\t\tclearTimeout( this._mouseDelayTimer );\n\t\t\tdelete this._mouseDelayTimer;\n\t\t}\n\n\t\tthis.ignoreMissingWhich = false;\n\t\tmouseHandled = false;\n\t\tevent.preventDefault();\n\t},\n\n\t_mouseDistanceMet: function( event ) {\n\t\treturn ( Math.max(\n\t\t\t\tMath.abs( this._mouseDownEvent.pageX - event.pageX ),\n\t\t\t\tMath.abs( this._mouseDownEvent.pageY - event.pageY )\n\t\t\t) >= this.options.distance\n\t\t);\n\t},\n\n\t_mouseDelayMet: function( /* event */ ) {\n\t\treturn this.mouseDelayMet;\n\t},\n\n\t// These are placeholder methods, to be overriden by extending plugin\n\t_mouseStart: function( /* event */ ) {},\n\t_mouseDrag: function( /* event */ ) {},\n\t_mouseStop: function( /* event */ ) {},\n\t_mouseCapture: function( /* event */ ) { return true; }\n} );\n\n} ) );\n",
    "/*!\n * jQuery UI Resizable 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Resizable\n//>>group: Interactions\n//>>description: Enables resize functionality for any element.\n//>>docs: http://api.jqueryui.com/resizable/\n//>>demos: http://jqueryui.com/resizable/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/resizable.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"./mouse\",\n\t\t\t\"../disable-selection\",\n\t\t\t\"../plugin\",\n\t\t\t\"../version\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\n$.widget( \"ui.resizable\", $.ui.mouse, {\n\tversion: \"1.12.1\",\n\twidgetEventPrefix: \"resize\",\n\toptions: {\n\t\talsoResize: false,\n\t\tanimate: false,\n\t\tanimateDuration: \"slow\",\n\t\tanimateEasing: \"swing\",\n\t\taspectRatio: false,\n\t\tautoHide: false,\n\t\tclasses: {\n\t\t\t\"ui-resizable-se\": \"ui-icon ui-icon-gripsmall-diagonal-se\"\n\t\t},\n\t\tcontainment: false,\n\t\tghost: false,\n\t\tgrid: false,\n\t\thandles: \"e,s,se\",\n\t\thelper: false,\n\t\tmaxHeight: null,\n\t\tmaxWidth: null,\n\t\tminHeight: 10,\n\t\tminWidth: 10,\n\n\t\t// See #7960\n\t\tzIndex: 90,\n\n\t\t// Callbacks\n\t\tresize: null,\n\t\tstart: null,\n\t\tstop: null\n\t},\n\n\t_num: function( value ) {\n\t\treturn parseFloat( value ) || 0;\n\t},\n\n\t_isNumber: function( value ) {\n\t\treturn !isNaN( parseFloat( value ) );\n\t},\n\n\t_hasScroll: function( el, a ) {\n\n\t\tif ( $( el ).css( \"overflow\" ) === \"hidden\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar scroll = ( a && a === \"left\" ) ? \"scrollLeft\" : \"scrollTop\",\n\t\t\thas = false;\n\n\t\tif ( el[ scroll ] > 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// TODO: determine which cases actually cause this to happen\n\t\t// if the element doesn't have the scroll set, see if it's possible to\n\t\t// set the scroll\n\t\tel[ scroll ] = 1;\n\t\thas = ( el[ scroll ] > 0 );\n\t\tel[ scroll ] = 0;\n\t\treturn has;\n\t},\n\n\t_create: function() {\n\n\t\tvar margins,\n\t\t\to = this.options,\n\t\t\tthat = this;\n\t\tthis._addClass( \"ui-resizable\" );\n\n\t\t$.extend( this, {\n\t\t\t_aspectRatio: !!( o.aspectRatio ),\n\t\t\taspectRatio: o.aspectRatio,\n\t\t\toriginalElement: this.element,\n\t\t\t_proportionallyResizeElements: [],\n\t\t\t_helper: o.helper || o.ghost || o.animate ? o.helper || \"ui-resizable-helper\" : null\n\t\t} );\n\n\t\t// Wrap the element if it cannot hold child nodes\n\t\tif ( this.element[ 0 ].nodeName.match( /^(canvas|textarea|input|select|button|img)$/i ) ) {\n\n\t\t\tthis.element.wrap(\n\t\t\t\t$( \"<div class='ui-wrapper' style='overflow: hidden;'></div>\" ).css( {\n\t\t\t\t\tposition: this.element.css( \"position\" ),\n\t\t\t\t\twidth: this.element.outerWidth(),\n\t\t\t\t\theight: this.element.outerHeight(),\n\t\t\t\t\ttop: this.element.css( \"top\" ),\n\t\t\t\t\tleft: this.element.css( \"left\" )\n\t\t\t\t} )\n\t\t\t);\n\n\t\t\tthis.element = this.element.parent().data(\n\t\t\t\t\"ui-resizable\", this.element.resizable( \"instance\" )\n\t\t\t);\n\n\t\t\tthis.elementIsWrapper = true;\n\n\t\t\tmargins = {\n\t\t\t\tmarginTop: this.originalElement.css( \"marginTop\" ),\n\t\t\t\tmarginRight: this.originalElement.css( \"marginRight\" ),\n\t\t\t\tmarginBottom: this.originalElement.css( \"marginBottom\" ),\n\t\t\t\tmarginLeft: this.originalElement.css( \"marginLeft\" )\n\t\t\t};\n\n\t\t\tthis.element.css( margins );\n\t\t\tthis.originalElement.css( \"margin\", 0 );\n\n\t\t\t// support: Safari\n\t\t\t// Prevent Safari textarea resize\n\t\t\tthis.originalResizeStyle = this.originalElement.css( \"resize\" );\n\t\t\tthis.originalElement.css( \"resize\", \"none\" );\n\n\t\t\tthis._proportionallyResizeElements.push( this.originalElement.css( {\n\t\t\t\tposition: \"static\",\n\t\t\t\tzoom: 1,\n\t\t\t\tdisplay: \"block\"\n\t\t\t} ) );\n\n\t\t\t// Support: IE9\n\t\t\t// avoid IE jump (hard set the margin)\n\t\t\tthis.originalElement.css( margins );\n\n\t\t\tthis._proportionallyResize();\n\t\t}\n\n\t\tthis._setupHandles();\n\n\t\tif ( o.autoHide ) {\n\t\t\t$( this.element )\n\t\t\t\t.on( \"mouseenter\", function() {\n\t\t\t\t\tif ( o.disabled ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthat._removeClass( \"ui-resizable-autohide\" );\n\t\t\t\t\tthat._handles.show();\n\t\t\t\t} )\n\t\t\t\t.on( \"mouseleave\", function() {\n\t\t\t\t\tif ( o.disabled ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif ( !that.resizing ) {\n\t\t\t\t\t\tthat._addClass( \"ui-resizable-autohide\" );\n\t\t\t\t\t\tthat._handles.hide();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\n\t\tthis._mouseInit();\n\t},\n\n\t_destroy: function() {\n\n\t\tthis._mouseDestroy();\n\n\t\tvar wrapper,\n\t\t\t_destroy = function( exp ) {\n\t\t\t\t$( exp )\n\t\t\t\t\t.removeData( \"resizable\" )\n\t\t\t\t\t.removeData( \"ui-resizable\" )\n\t\t\t\t\t.off( \".resizable\" )\n\t\t\t\t\t.find( \".ui-resizable-handle\" )\n\t\t\t\t\t\t.remove();\n\t\t\t};\n\n\t\t// TODO: Unwrap at same DOM position\n\t\tif ( this.elementIsWrapper ) {\n\t\t\t_destroy( this.element );\n\t\t\twrapper = this.element;\n\t\t\tthis.originalElement.css( {\n\t\t\t\tposition: wrapper.css( \"position\" ),\n\t\t\t\twidth: wrapper.outerWidth(),\n\t\t\t\theight: wrapper.outerHeight(),\n\t\t\t\ttop: wrapper.css( \"top\" ),\n\t\t\t\tleft: wrapper.css( \"left\" )\n\t\t\t} ).insertAfter( wrapper );\n\t\t\twrapper.remove();\n\t\t}\n\n\t\tthis.originalElement.css( \"resize\", this.originalResizeStyle );\n\t\t_destroy( this.originalElement );\n\n\t\treturn this;\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tthis._super( key, value );\n\n\t\tswitch ( key ) {\n\t\tcase \"handles\":\n\t\t\tthis._removeHandles();\n\t\t\tthis._setupHandles();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t},\n\n\t_setupHandles: function() {\n\t\tvar o = this.options, handle, i, n, hname, axis, that = this;\n\t\tthis.handles = o.handles ||\n\t\t\t( !$( \".ui-resizable-handle\", this.element ).length ?\n\t\t\t\t\"e,s,se\" : {\n\t\t\t\t\tn: \".ui-resizable-n\",\n\t\t\t\t\te: \".ui-resizable-e\",\n\t\t\t\t\ts: \".ui-resizable-s\",\n\t\t\t\t\tw: \".ui-resizable-w\",\n\t\t\t\t\tse: \".ui-resizable-se\",\n\t\t\t\t\tsw: \".ui-resizable-sw\",\n\t\t\t\t\tne: \".ui-resizable-ne\",\n\t\t\t\t\tnw: \".ui-resizable-nw\"\n\t\t\t\t} );\n\n\t\tthis._handles = $();\n\t\tif ( this.handles.constructor === String ) {\n\n\t\t\tif ( this.handles === \"all\" ) {\n\t\t\t\tthis.handles = \"n,e,s,w,se,sw,ne,nw\";\n\t\t\t}\n\n\t\t\tn = this.handles.split( \",\" );\n\t\t\tthis.handles = {};\n\n\t\t\tfor ( i = 0; i < n.length; i++ ) {\n\n\t\t\t\thandle = $.trim( n[ i ] );\n\t\t\t\thname = \"ui-resizable-\" + handle;\n\t\t\t\taxis = $( \"<div>\" );\n\t\t\t\tthis._addClass( axis, \"ui-resizable-handle \" + hname );\n\n\t\t\t\taxis.css( { zIndex: o.zIndex } );\n\n\t\t\t\tthis.handles[ handle ] = \".ui-resizable-\" + handle;\n\t\t\t\tthis.element.append( axis );\n\t\t\t}\n\n\t\t}\n\n\t\tthis._renderAxis = function( target ) {\n\n\t\t\tvar i, axis, padPos, padWrapper;\n\n\t\t\ttarget = target || this.element;\n\n\t\t\tfor ( i in this.handles ) {\n\n\t\t\t\tif ( this.handles[ i ].constructor === String ) {\n\t\t\t\t\tthis.handles[ i ] = this.element.children( this.handles[ i ] ).first().show();\n\t\t\t\t} else if ( this.handles[ i ].jquery || this.handles[ i ].nodeType ) {\n\t\t\t\t\tthis.handles[ i ] = $( this.handles[ i ] );\n\t\t\t\t\tthis._on( this.handles[ i ], { \"mousedown\": that._mouseDown } );\n\t\t\t\t}\n\n\t\t\t\tif ( this.elementIsWrapper &&\n\t\t\t\t\t\tthis.originalElement[ 0 ]\n\t\t\t\t\t\t\t.nodeName\n\t\t\t\t\t\t\t.match( /^(textarea|input|select|button)$/i ) ) {\n\t\t\t\t\taxis = $( this.handles[ i ], this.element );\n\n\t\t\t\t\tpadWrapper = /sw|ne|nw|se|n|s/.test( i ) ?\n\t\t\t\t\t\taxis.outerHeight() :\n\t\t\t\t\t\taxis.outerWidth();\n\n\t\t\t\t\tpadPos = [ \"padding\",\n\t\t\t\t\t\t/ne|nw|n/.test( i ) ? \"Top\" :\n\t\t\t\t\t\t/se|sw|s/.test( i ) ? \"Bottom\" :\n\t\t\t\t\t\t/^e$/.test( i ) ? \"Right\" : \"Left\" ].join( \"\" );\n\n\t\t\t\t\ttarget.css( padPos, padWrapper );\n\n\t\t\t\t\tthis._proportionallyResize();\n\t\t\t\t}\n\n\t\t\t\tthis._handles = this._handles.add( this.handles[ i ] );\n\t\t\t}\n\t\t};\n\n\t\t// TODO: make renderAxis a prototype function\n\t\tthis._renderAxis( this.element );\n\n\t\tthis._handles = this._handles.add( this.element.find( \".ui-resizable-handle\" ) );\n\t\tthis._handles.disableSelection();\n\n\t\tthis._handles.on( \"mouseover\", function() {\n\t\t\tif ( !that.resizing ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\taxis = this.className.match( /ui-resizable-(se|sw|ne|nw|n|e|s|w)/i );\n\t\t\t\t}\n\t\t\t\tthat.axis = axis && axis[ 1 ] ? axis[ 1 ] : \"se\";\n\t\t\t}\n\t\t} );\n\n\t\tif ( o.autoHide ) {\n\t\t\tthis._handles.hide();\n\t\t\tthis._addClass( \"ui-resizable-autohide\" );\n\t\t}\n\t},\n\n\t_removeHandles: function() {\n\t\tthis._handles.remove();\n\t},\n\n\t_mouseCapture: function( event ) {\n\t\tvar i, handle,\n\t\t\tcapture = false;\n\n\t\tfor ( i in this.handles ) {\n\t\t\thandle = $( this.handles[ i ] )[ 0 ];\n\t\t\tif ( handle === event.target || $.contains( handle, event.target ) ) {\n\t\t\t\tcapture = true;\n\t\t\t}\n\t\t}\n\n\t\treturn !this.options.disabled && capture;\n\t},\n\n\t_mouseStart: function( event ) {\n\n\t\tvar curleft, curtop, cursor,\n\t\t\to = this.options,\n\t\t\tel = this.element;\n\n\t\tthis.resizing = true;\n\n\t\tthis._renderProxy();\n\n\t\tcurleft = this._num( this.helper.css( \"left\" ) );\n\t\tcurtop = this._num( this.helper.css( \"top\" ) );\n\n\t\tif ( o.containment ) {\n\t\t\tcurleft += $( o.containment ).scrollLeft() || 0;\n\t\t\tcurtop += $( o.containment ).scrollTop() || 0;\n\t\t}\n\n\t\tthis.offset = this.helper.offset();\n\t\tthis.position = { left: curleft, top: curtop };\n\n\t\tthis.size = this._helper ? {\n\t\t\t\twidth: this.helper.width(),\n\t\t\t\theight: this.helper.height()\n\t\t\t} : {\n\t\t\t\twidth: el.width(),\n\t\t\t\theight: el.height()\n\t\t\t};\n\n\t\tthis.originalSize = this._helper ? {\n\t\t\t\twidth: el.outerWidth(),\n\t\t\t\theight: el.outerHeight()\n\t\t\t} : {\n\t\t\t\twidth: el.width(),\n\t\t\t\theight: el.height()\n\t\t\t};\n\n\t\tthis.sizeDiff = {\n\t\t\twidth: el.outerWidth() - el.width(),\n\t\t\theight: el.outerHeight() - el.height()\n\t\t};\n\n\t\tthis.originalPosition = { left: curleft, top: curtop };\n\t\tthis.originalMousePosition = { left: event.pageX, top: event.pageY };\n\n\t\tthis.aspectRatio = ( typeof o.aspectRatio === \"number\" ) ?\n\t\t\to.aspectRatio :\n\t\t\t( ( this.originalSize.width / this.originalSize.height ) || 1 );\n\n\t\tcursor = $( \".ui-resizable-\" + this.axis ).css( \"cursor\" );\n\t\t$( \"body\" ).css( \"cursor\", cursor === \"auto\" ? this.axis + \"-resize\" : cursor );\n\n\t\tthis._addClass( \"ui-resizable-resizing\" );\n\t\tthis._propagate( \"start\", event );\n\t\treturn true;\n\t},\n\n\t_mouseDrag: function( event ) {\n\n\t\tvar data, props,\n\t\t\tsmp = this.originalMousePosition,\n\t\t\ta = this.axis,\n\t\t\tdx = ( event.pageX - smp.left ) || 0,\n\t\t\tdy = ( event.pageY - smp.top ) || 0,\n\t\t\ttrigger = this._change[ a ];\n\n\t\tthis._updatePrevProperties();\n\n\t\tif ( !trigger ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdata = trigger.apply( this, [ event, dx, dy ] );\n\n\t\tthis._updateVirtualBoundaries( event.shiftKey );\n\t\tif ( this._aspectRatio || event.shiftKey ) {\n\t\t\tdata = this._updateRatio( data, event );\n\t\t}\n\n\t\tdata = this._respectSize( data, event );\n\n\t\tthis._updateCache( data );\n\n\t\tthis._propagate( \"resize\", event );\n\n\t\tprops = this._applyChanges();\n\n\t\tif ( !this._helper && this._proportionallyResizeElements.length ) {\n\t\t\tthis._proportionallyResize();\n\t\t}\n\n\t\tif ( !$.isEmptyObject( props ) ) {\n\t\t\tthis._updatePrevProperties();\n\t\t\tthis._trigger( \"resize\", event, this.ui() );\n\t\t\tthis._applyChanges();\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t_mouseStop: function( event ) {\n\n\t\tthis.resizing = false;\n\t\tvar pr, ista, soffseth, soffsetw, s, left, top,\n\t\t\to = this.options, that = this;\n\n\t\tif ( this._helper ) {\n\n\t\t\tpr = this._proportionallyResizeElements;\n\t\t\tista = pr.length && ( /textarea/i ).test( pr[ 0 ].nodeName );\n\t\t\tsoffseth = ista && this._hasScroll( pr[ 0 ], \"left\" ) ? 0 : that.sizeDiff.height;\n\t\t\tsoffsetw = ista ? 0 : that.sizeDiff.width;\n\n\t\t\ts = {\n\t\t\t\twidth: ( that.helper.width()  - soffsetw ),\n\t\t\t\theight: ( that.helper.height() - soffseth )\n\t\t\t};\n\t\t\tleft = ( parseFloat( that.element.css( \"left\" ) ) +\n\t\t\t\t( that.position.left - that.originalPosition.left ) ) || null;\n\t\t\ttop = ( parseFloat( that.element.css( \"top\" ) ) +\n\t\t\t\t( that.position.top - that.originalPosition.top ) ) || null;\n\n\t\t\tif ( !o.animate ) {\n\t\t\t\tthis.element.css( $.extend( s, { top: top, left: left } ) );\n\t\t\t}\n\n\t\t\tthat.helper.height( that.size.height );\n\t\t\tthat.helper.width( that.size.width );\n\n\t\t\tif ( this._helper && !o.animate ) {\n\t\t\t\tthis._proportionallyResize();\n\t\t\t}\n\t\t}\n\n\t\t$( \"body\" ).css( \"cursor\", \"auto\" );\n\n\t\tthis._removeClass( \"ui-resizable-resizing\" );\n\n\t\tthis._propagate( \"stop\", event );\n\n\t\tif ( this._helper ) {\n\t\t\tthis.helper.remove();\n\t\t}\n\n\t\treturn false;\n\n\t},\n\n\t_updatePrevProperties: function() {\n\t\tthis.prevPosition = {\n\t\t\ttop: this.position.top,\n\t\t\tleft: this.position.left\n\t\t};\n\t\tthis.prevSize = {\n\t\t\twidth: this.size.width,\n\t\t\theight: this.size.height\n\t\t};\n\t},\n\n\t_applyChanges: function() {\n\t\tvar props = {};\n\n\t\tif ( this.position.top !== this.prevPosition.top ) {\n\t\t\tprops.top = this.position.top + \"px\";\n\t\t}\n\t\tif ( this.position.left !== this.prevPosition.left ) {\n\t\t\tprops.left = this.position.left + \"px\";\n\t\t}\n\t\tif ( this.size.width !== this.prevSize.width ) {\n\t\t\tprops.width = this.size.width + \"px\";\n\t\t}\n\t\tif ( this.size.height !== this.prevSize.height ) {\n\t\t\tprops.height = this.size.height + \"px\";\n\t\t}\n\n\t\tthis.helper.css( props );\n\n\t\treturn props;\n\t},\n\n\t_updateVirtualBoundaries: function( forceAspectRatio ) {\n\t\tvar pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,\n\t\t\to = this.options;\n\n\t\tb = {\n\t\t\tminWidth: this._isNumber( o.minWidth ) ? o.minWidth : 0,\n\t\t\tmaxWidth: this._isNumber( o.maxWidth ) ? o.maxWidth : Infinity,\n\t\t\tminHeight: this._isNumber( o.minHeight ) ? o.minHeight : 0,\n\t\t\tmaxHeight: this._isNumber( o.maxHeight ) ? o.maxHeight : Infinity\n\t\t};\n\n\t\tif ( this._aspectRatio || forceAspectRatio ) {\n\t\t\tpMinWidth = b.minHeight * this.aspectRatio;\n\t\t\tpMinHeight = b.minWidth / this.aspectRatio;\n\t\t\tpMaxWidth = b.maxHeight * this.aspectRatio;\n\t\t\tpMaxHeight = b.maxWidth / this.aspectRatio;\n\n\t\t\tif ( pMinWidth > b.minWidth ) {\n\t\t\t\tb.minWidth = pMinWidth;\n\t\t\t}\n\t\t\tif ( pMinHeight > b.minHeight ) {\n\t\t\t\tb.minHeight = pMinHeight;\n\t\t\t}\n\t\t\tif ( pMaxWidth < b.maxWidth ) {\n\t\t\t\tb.maxWidth = pMaxWidth;\n\t\t\t}\n\t\t\tif ( pMaxHeight < b.maxHeight ) {\n\t\t\t\tb.maxHeight = pMaxHeight;\n\t\t\t}\n\t\t}\n\t\tthis._vBoundaries = b;\n\t},\n\n\t_updateCache: function( data ) {\n\t\tthis.offset = this.helper.offset();\n\t\tif ( this._isNumber( data.left ) ) {\n\t\t\tthis.position.left = data.left;\n\t\t}\n\t\tif ( this._isNumber( data.top ) ) {\n\t\t\tthis.position.top = data.top;\n\t\t}\n\t\tif ( this._isNumber( data.height ) ) {\n\t\t\tthis.size.height = data.height;\n\t\t}\n\t\tif ( this._isNumber( data.width ) ) {\n\t\t\tthis.size.width = data.width;\n\t\t}\n\t},\n\n\t_updateRatio: function( data ) {\n\n\t\tvar cpos = this.position,\n\t\t\tcsize = this.size,\n\t\t\ta = this.axis;\n\n\t\tif ( this._isNumber( data.height ) ) {\n\t\t\tdata.width = ( data.height * this.aspectRatio );\n\t\t} else if ( this._isNumber( data.width ) ) {\n\t\t\tdata.height = ( data.width / this.aspectRatio );\n\t\t}\n\n\t\tif ( a === \"sw\" ) {\n\t\t\tdata.left = cpos.left + ( csize.width - data.width );\n\t\t\tdata.top = null;\n\t\t}\n\t\tif ( a === \"nw\" ) {\n\t\t\tdata.top = cpos.top + ( csize.height - data.height );\n\t\t\tdata.left = cpos.left + ( csize.width - data.width );\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t_respectSize: function( data ) {\n\n\t\tvar o = this._vBoundaries,\n\t\t\ta = this.axis,\n\t\t\tismaxw = this._isNumber( data.width ) && o.maxWidth && ( o.maxWidth < data.width ),\n\t\t\tismaxh = this._isNumber( data.height ) && o.maxHeight && ( o.maxHeight < data.height ),\n\t\t\tisminw = this._isNumber( data.width ) && o.minWidth && ( o.minWidth > data.width ),\n\t\t\tisminh = this._isNumber( data.height ) && o.minHeight && ( o.minHeight > data.height ),\n\t\t\tdw = this.originalPosition.left + this.originalSize.width,\n\t\t\tdh = this.originalPosition.top + this.originalSize.height,\n\t\t\tcw = /sw|nw|w/.test( a ), ch = /nw|ne|n/.test( a );\n\t\tif ( isminw ) {\n\t\t\tdata.width = o.minWidth;\n\t\t}\n\t\tif ( isminh ) {\n\t\t\tdata.height = o.minHeight;\n\t\t}\n\t\tif ( ismaxw ) {\n\t\t\tdata.width = o.maxWidth;\n\t\t}\n\t\tif ( ismaxh ) {\n\t\t\tdata.height = o.maxHeight;\n\t\t}\n\n\t\tif ( isminw && cw ) {\n\t\t\tdata.left = dw - o.minWidth;\n\t\t}\n\t\tif ( ismaxw && cw ) {\n\t\t\tdata.left = dw - o.maxWidth;\n\t\t}\n\t\tif ( isminh && ch ) {\n\t\t\tdata.top = dh - o.minHeight;\n\t\t}\n\t\tif ( ismaxh && ch ) {\n\t\t\tdata.top = dh - o.maxHeight;\n\t\t}\n\n\t\t// Fixing jump error on top/left - bug #2330\n\t\tif ( !data.width && !data.height && !data.left && data.top ) {\n\t\t\tdata.top = null;\n\t\t} else if ( !data.width && !data.height && !data.top && data.left ) {\n\t\t\tdata.left = null;\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t_getPaddingPlusBorderDimensions: function( element ) {\n\t\tvar i = 0,\n\t\t\twidths = [],\n\t\t\tborders = [\n\t\t\t\telement.css( \"borderTopWidth\" ),\n\t\t\t\telement.css( \"borderRightWidth\" ),\n\t\t\t\telement.css( \"borderBottomWidth\" ),\n\t\t\t\telement.css( \"borderLeftWidth\" )\n\t\t\t],\n\t\t\tpaddings = [\n\t\t\t\telement.css( \"paddingTop\" ),\n\t\t\t\telement.css( \"paddingRight\" ),\n\t\t\t\telement.css( \"paddingBottom\" ),\n\t\t\t\telement.css( \"paddingLeft\" )\n\t\t\t];\n\n\t\tfor ( ; i < 4; i++ ) {\n\t\t\twidths[ i ] = ( parseFloat( borders[ i ] ) || 0 );\n\t\t\twidths[ i ] += ( parseFloat( paddings[ i ] ) || 0 );\n\t\t}\n\n\t\treturn {\n\t\t\theight: widths[ 0 ] + widths[ 2 ],\n\t\t\twidth: widths[ 1 ] + widths[ 3 ]\n\t\t};\n\t},\n\n\t_proportionallyResize: function() {\n\n\t\tif ( !this._proportionallyResizeElements.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar prel,\n\t\t\ti = 0,\n\t\t\telement = this.helper || this.element;\n\n\t\tfor ( ; i < this._proportionallyResizeElements.length; i++ ) {\n\n\t\t\tprel = this._proportionallyResizeElements[ i ];\n\n\t\t\t// TODO: Seems like a bug to cache this.outerDimensions\n\t\t\t// considering that we are in a loop.\n\t\t\tif ( !this.outerDimensions ) {\n\t\t\t\tthis.outerDimensions = this._getPaddingPlusBorderDimensions( prel );\n\t\t\t}\n\n\t\t\tprel.css( {\n\t\t\t\theight: ( element.height() - this.outerDimensions.height ) || 0,\n\t\t\t\twidth: ( element.width() - this.outerDimensions.width ) || 0\n\t\t\t} );\n\n\t\t}\n\n\t},\n\n\t_renderProxy: function() {\n\n\t\tvar el = this.element, o = this.options;\n\t\tthis.elementOffset = el.offset();\n\n\t\tif ( this._helper ) {\n\n\t\t\tthis.helper = this.helper || $( \"<div style='overflow:hidden;'></div>\" );\n\n\t\t\tthis._addClass( this.helper, this._helper );\n\t\t\tthis.helper.css( {\n\t\t\t\twidth: this.element.outerWidth(),\n\t\t\t\theight: this.element.outerHeight(),\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tleft: this.elementOffset.left + \"px\",\n\t\t\t\ttop: this.elementOffset.top + \"px\",\n\t\t\t\tzIndex: ++o.zIndex //TODO: Don't modify option\n\t\t\t} );\n\n\t\t\tthis.helper\n\t\t\t\t.appendTo( \"body\" )\n\t\t\t\t.disableSelection();\n\n\t\t} else {\n\t\t\tthis.helper = this.element;\n\t\t}\n\n\t},\n\n\t_change: {\n\t\te: function( event, dx ) {\n\t\t\treturn { width: this.originalSize.width + dx };\n\t\t},\n\t\tw: function( event, dx ) {\n\t\t\tvar cs = this.originalSize, sp = this.originalPosition;\n\t\t\treturn { left: sp.left + dx, width: cs.width - dx };\n\t\t},\n\t\tn: function( event, dx, dy ) {\n\t\t\tvar cs = this.originalSize, sp = this.originalPosition;\n\t\t\treturn { top: sp.top + dy, height: cs.height - dy };\n\t\t},\n\t\ts: function( event, dx, dy ) {\n\t\t\treturn { height: this.originalSize.height + dy };\n\t\t},\n\t\tse: function( event, dx, dy ) {\n\t\t\treturn $.extend( this._change.s.apply( this, arguments ),\n\t\t\t\tthis._change.e.apply( this, [ event, dx, dy ] ) );\n\t\t},\n\t\tsw: function( event, dx, dy ) {\n\t\t\treturn $.extend( this._change.s.apply( this, arguments ),\n\t\t\t\tthis._change.w.apply( this, [ event, dx, dy ] ) );\n\t\t},\n\t\tne: function( event, dx, dy ) {\n\t\t\treturn $.extend( this._change.n.apply( this, arguments ),\n\t\t\t\tthis._change.e.apply( this, [ event, dx, dy ] ) );\n\t\t},\n\t\tnw: function( event, dx, dy ) {\n\t\t\treturn $.extend( this._change.n.apply( this, arguments ),\n\t\t\t\tthis._change.w.apply( this, [ event, dx, dy ] ) );\n\t\t}\n\t},\n\n\t_propagate: function( n, event ) {\n\t\t$.ui.plugin.call( this, n, [ event, this.ui() ] );\n\t\t( n !== \"resize\" && this._trigger( n, event, this.ui() ) );\n\t},\n\n\tplugins: {},\n\n\tui: function() {\n\t\treturn {\n\t\t\toriginalElement: this.originalElement,\n\t\t\telement: this.element,\n\t\t\thelper: this.helper,\n\t\t\tposition: this.position,\n\t\t\tsize: this.size,\n\t\t\toriginalSize: this.originalSize,\n\t\t\toriginalPosition: this.originalPosition\n\t\t};\n\t}\n\n} );\n\n/*\n * Resizable Extensions\n */\n\n$.ui.plugin.add( \"resizable\", \"animate\", {\n\n\tstop: function( event ) {\n\t\tvar that = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tpr = that._proportionallyResizeElements,\n\t\t\tista = pr.length && ( /textarea/i ).test( pr[ 0 ].nodeName ),\n\t\t\tsoffseth = ista && that._hasScroll( pr[ 0 ], \"left\" ) ? 0 : that.sizeDiff.height,\n\t\t\tsoffsetw = ista ? 0 : that.sizeDiff.width,\n\t\t\tstyle = {\n\t\t\t\twidth: ( that.size.width - soffsetw ),\n\t\t\t\theight: ( that.size.height - soffseth )\n\t\t\t},\n\t\t\tleft = ( parseFloat( that.element.css( \"left\" ) ) +\n\t\t\t\t( that.position.left - that.originalPosition.left ) ) || null,\n\t\t\ttop = ( parseFloat( that.element.css( \"top\" ) ) +\n\t\t\t\t( that.position.top - that.originalPosition.top ) ) || null;\n\n\t\tthat.element.animate(\n\t\t\t$.extend( style, top && left ? { top: top, left: left } : {} ), {\n\t\t\t\tduration: o.animateDuration,\n\t\t\t\teasing: o.animateEasing,\n\t\t\t\tstep: function() {\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\twidth: parseFloat( that.element.css( \"width\" ) ),\n\t\t\t\t\t\theight: parseFloat( that.element.css( \"height\" ) ),\n\t\t\t\t\t\ttop: parseFloat( that.element.css( \"top\" ) ),\n\t\t\t\t\t\tleft: parseFloat( that.element.css( \"left\" ) )\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( pr && pr.length ) {\n\t\t\t\t\t\t$( pr[ 0 ] ).css( { width: data.width, height: data.height } );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Propagating resize, and updating values for each animation step\n\t\t\t\t\tthat._updateCache( data );\n\t\t\t\t\tthat._propagate( \"resize\", event );\n\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n} );\n\n$.ui.plugin.add( \"resizable\", \"containment\", {\n\n\tstart: function() {\n\t\tvar element, p, co, ch, cw, width, height,\n\t\t\tthat = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tel = that.element,\n\t\t\toc = o.containment,\n\t\t\tce = ( oc instanceof $ ) ?\n\t\t\t\toc.get( 0 ) :\n\t\t\t\t( /parent/.test( oc ) ) ? el.parent().get( 0 ) : oc;\n\n\t\tif ( !ce ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthat.containerElement = $( ce );\n\n\t\tif ( /document/.test( oc ) || oc === document ) {\n\t\t\tthat.containerOffset = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0\n\t\t\t};\n\t\t\tthat.containerPosition = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0\n\t\t\t};\n\n\t\t\tthat.parentData = {\n\t\t\t\telement: $( document ),\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: $( document ).width(),\n\t\t\t\theight: $( document ).height() || document.body.parentNode.scrollHeight\n\t\t\t};\n\t\t} else {\n\t\t\telement = $( ce );\n\t\t\tp = [];\n\t\t\t$( [ \"Top\", \"Right\", \"Left\", \"Bottom\" ] ).each( function( i, name ) {\n\t\t\t\tp[ i ] = that._num( element.css( \"padding\" + name ) );\n\t\t\t} );\n\n\t\t\tthat.containerOffset = element.offset();\n\t\t\tthat.containerPosition = element.position();\n\t\t\tthat.containerSize = {\n\t\t\t\theight: ( element.innerHeight() - p[ 3 ] ),\n\t\t\t\twidth: ( element.innerWidth() - p[ 1 ] )\n\t\t\t};\n\n\t\t\tco = that.containerOffset;\n\t\t\tch = that.containerSize.height;\n\t\t\tcw = that.containerSize.width;\n\t\t\twidth = ( that._hasScroll ( ce, \"left\" ) ? ce.scrollWidth : cw );\n\t\t\theight = ( that._hasScroll ( ce ) ? ce.scrollHeight : ch ) ;\n\n\t\t\tthat.parentData = {\n\t\t\t\telement: ce,\n\t\t\t\tleft: co.left,\n\t\t\t\ttop: co.top,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t}\n\t},\n\n\tresize: function( event ) {\n\t\tvar woset, hoset, isParent, isOffsetRelative,\n\t\t\tthat = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tco = that.containerOffset,\n\t\t\tcp = that.position,\n\t\t\tpRatio = that._aspectRatio || event.shiftKey,\n\t\t\tcop = {\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0\n\t\t\t},\n\t\t\tce = that.containerElement,\n\t\t\tcontinueResize = true;\n\n\t\tif ( ce[ 0 ] !== document && ( /static/ ).test( ce.css( \"position\" ) ) ) {\n\t\t\tcop = co;\n\t\t}\n\n\t\tif ( cp.left < ( that._helper ? co.left : 0 ) ) {\n\t\t\tthat.size.width = that.size.width +\n\t\t\t\t( that._helper ?\n\t\t\t\t\t( that.position.left - co.left ) :\n\t\t\t\t\t( that.position.left - cop.left ) );\n\n\t\t\tif ( pRatio ) {\n\t\t\t\tthat.size.height = that.size.width / that.aspectRatio;\n\t\t\t\tcontinueResize = false;\n\t\t\t}\n\t\t\tthat.position.left = o.helper ? co.left : 0;\n\t\t}\n\n\t\tif ( cp.top < ( that._helper ? co.top : 0 ) ) {\n\t\t\tthat.size.height = that.size.height +\n\t\t\t\t( that._helper ?\n\t\t\t\t\t( that.position.top - co.top ) :\n\t\t\t\t\tthat.position.top );\n\n\t\t\tif ( pRatio ) {\n\t\t\t\tthat.size.width = that.size.height * that.aspectRatio;\n\t\t\t\tcontinueResize = false;\n\t\t\t}\n\t\t\tthat.position.top = that._helper ? co.top : 0;\n\t\t}\n\n\t\tisParent = that.containerElement.get( 0 ) === that.element.parent().get( 0 );\n\t\tisOffsetRelative = /relative|absolute/.test( that.containerElement.css( \"position\" ) );\n\n\t\tif ( isParent && isOffsetRelative ) {\n\t\t\tthat.offset.left = that.parentData.left + that.position.left;\n\t\t\tthat.offset.top = that.parentData.top + that.position.top;\n\t\t} else {\n\t\t\tthat.offset.left = that.element.offset().left;\n\t\t\tthat.offset.top = that.element.offset().top;\n\t\t}\n\n\t\twoset = Math.abs( that.sizeDiff.width +\n\t\t\t( that._helper ?\n\t\t\t\tthat.offset.left - cop.left :\n\t\t\t\t( that.offset.left - co.left ) ) );\n\n\t\thoset = Math.abs( that.sizeDiff.height +\n\t\t\t( that._helper ?\n\t\t\t\tthat.offset.top - cop.top :\n\t\t\t\t( that.offset.top - co.top ) ) );\n\n\t\tif ( woset + that.size.width >= that.parentData.width ) {\n\t\t\tthat.size.width = that.parentData.width - woset;\n\t\t\tif ( pRatio ) {\n\t\t\t\tthat.size.height = that.size.width / that.aspectRatio;\n\t\t\t\tcontinueResize = false;\n\t\t\t}\n\t\t}\n\n\t\tif ( hoset + that.size.height >= that.parentData.height ) {\n\t\t\tthat.size.height = that.parentData.height - hoset;\n\t\t\tif ( pRatio ) {\n\t\t\t\tthat.size.width = that.size.height * that.aspectRatio;\n\t\t\t\tcontinueResize = false;\n\t\t\t}\n\t\t}\n\n\t\tif ( !continueResize ) {\n\t\t\tthat.position.left = that.prevPosition.left;\n\t\t\tthat.position.top = that.prevPosition.top;\n\t\t\tthat.size.width = that.prevSize.width;\n\t\t\tthat.size.height = that.prevSize.height;\n\t\t}\n\t},\n\n\tstop: function() {\n\t\tvar that = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tco = that.containerOffset,\n\t\t\tcop = that.containerPosition,\n\t\t\tce = that.containerElement,\n\t\t\thelper = $( that.helper ),\n\t\t\tho = helper.offset(),\n\t\t\tw = helper.outerWidth() - that.sizeDiff.width,\n\t\t\th = helper.outerHeight() - that.sizeDiff.height;\n\n\t\tif ( that._helper && !o.animate && ( /relative/ ).test( ce.css( \"position\" ) ) ) {\n\t\t\t$( this ).css( {\n\t\t\t\tleft: ho.left - cop.left - co.left,\n\t\t\t\twidth: w,\n\t\t\t\theight: h\n\t\t\t} );\n\t\t}\n\n\t\tif ( that._helper && !o.animate && ( /static/ ).test( ce.css( \"position\" ) ) ) {\n\t\t\t$( this ).css( {\n\t\t\t\tleft: ho.left - cop.left - co.left,\n\t\t\t\twidth: w,\n\t\t\t\theight: h\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n$.ui.plugin.add( \"resizable\", \"alsoResize\", {\n\n\tstart: function() {\n\t\tvar that = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options;\n\n\t\t$( o.alsoResize ).each( function() {\n\t\t\tvar el = $( this );\n\t\t\tel.data( \"ui-resizable-alsoresize\", {\n\t\t\t\twidth: parseFloat( el.width() ), height: parseFloat( el.height() ),\n\t\t\t\tleft: parseFloat( el.css( \"left\" ) ), top: parseFloat( el.css( \"top\" ) )\n\t\t\t} );\n\t\t} );\n\t},\n\n\tresize: function( event, ui ) {\n\t\tvar that = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tos = that.originalSize,\n\t\t\top = that.originalPosition,\n\t\t\tdelta = {\n\t\t\t\theight: ( that.size.height - os.height ) || 0,\n\t\t\t\twidth: ( that.size.width - os.width ) || 0,\n\t\t\t\ttop: ( that.position.top - op.top ) || 0,\n\t\t\t\tleft: ( that.position.left - op.left ) || 0\n\t\t\t};\n\n\t\t\t$( o.alsoResize ).each( function() {\n\t\t\t\tvar el = $( this ), start = $( this ).data( \"ui-resizable-alsoresize\" ), style = {},\n\t\t\t\t\tcss = el.parents( ui.originalElement[ 0 ] ).length ?\n\t\t\t\t\t\t\t[ \"width\", \"height\" ] :\n\t\t\t\t\t\t\t[ \"width\", \"height\", \"top\", \"left\" ];\n\n\t\t\t\t$.each( css, function( i, prop ) {\n\t\t\t\t\tvar sum = ( start[ prop ] || 0 ) + ( delta[ prop ] || 0 );\n\t\t\t\t\tif ( sum && sum >= 0 ) {\n\t\t\t\t\t\tstyle[ prop ] = sum || null;\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tel.css( style );\n\t\t\t} );\n\t},\n\n\tstop: function() {\n\t\t$( this ).removeData( \"ui-resizable-alsoresize\" );\n\t}\n} );\n\n$.ui.plugin.add( \"resizable\", \"ghost\", {\n\n\tstart: function() {\n\n\t\tvar that = $( this ).resizable( \"instance\" ), cs = that.size;\n\n\t\tthat.ghost = that.originalElement.clone();\n\t\tthat.ghost.css( {\n\t\t\topacity: 0.25,\n\t\t\tdisplay: \"block\",\n\t\t\tposition: \"relative\",\n\t\t\theight: cs.height,\n\t\t\twidth: cs.width,\n\t\t\tmargin: 0,\n\t\t\tleft: 0,\n\t\t\ttop: 0\n\t\t} );\n\n\t\tthat._addClass( that.ghost, \"ui-resizable-ghost\" );\n\n\t\t// DEPRECATED\n\t\t// TODO: remove after 1.12\n\t\tif ( $.uiBackCompat !== false && typeof that.options.ghost === \"string\" ) {\n\n\t\t\t// Ghost option\n\t\t\tthat.ghost.addClass( this.options.ghost );\n\t\t}\n\n\t\tthat.ghost.appendTo( that.helper );\n\n\t},\n\n\tresize: function() {\n\t\tvar that = $( this ).resizable( \"instance\" );\n\t\tif ( that.ghost ) {\n\t\t\tthat.ghost.css( {\n\t\t\t\tposition: \"relative\",\n\t\t\t\theight: that.size.height,\n\t\t\t\twidth: that.size.width\n\t\t\t} );\n\t\t}\n\t},\n\n\tstop: function() {\n\t\tvar that = $( this ).resizable( \"instance\" );\n\t\tif ( that.ghost && that.helper ) {\n\t\t\tthat.helper.get( 0 ).removeChild( that.ghost.get( 0 ) );\n\t\t}\n\t}\n\n} );\n\n$.ui.plugin.add( \"resizable\", \"grid\", {\n\n\tresize: function() {\n\t\tvar outerDimensions,\n\t\t\tthat = $( this ).resizable( \"instance\" ),\n\t\t\to = that.options,\n\t\t\tcs = that.size,\n\t\t\tos = that.originalSize,\n\t\t\top = that.originalPosition,\n\t\t\ta = that.axis,\n\t\t\tgrid = typeof o.grid === \"number\" ? [ o.grid, o.grid ] : o.grid,\n\t\t\tgridX = ( grid[ 0 ] || 1 ),\n\t\t\tgridY = ( grid[ 1 ] || 1 ),\n\t\t\tox = Math.round( ( cs.width - os.width ) / gridX ) * gridX,\n\t\t\toy = Math.round( ( cs.height - os.height ) / gridY ) * gridY,\n\t\t\tnewWidth = os.width + ox,\n\t\t\tnewHeight = os.height + oy,\n\t\t\tisMaxWidth = o.maxWidth && ( o.maxWidth < newWidth ),\n\t\t\tisMaxHeight = o.maxHeight && ( o.maxHeight < newHeight ),\n\t\t\tisMinWidth = o.minWidth && ( o.minWidth > newWidth ),\n\t\t\tisMinHeight = o.minHeight && ( o.minHeight > newHeight );\n\n\t\to.grid = grid;\n\n\t\tif ( isMinWidth ) {\n\t\t\tnewWidth += gridX;\n\t\t}\n\t\tif ( isMinHeight ) {\n\t\t\tnewHeight += gridY;\n\t\t}\n\t\tif ( isMaxWidth ) {\n\t\t\tnewWidth -= gridX;\n\t\t}\n\t\tif ( isMaxHeight ) {\n\t\t\tnewHeight -= gridY;\n\t\t}\n\n\t\tif ( /^(se|s|e)$/.test( a ) ) {\n\t\t\tthat.size.width = newWidth;\n\t\t\tthat.size.height = newHeight;\n\t\t} else if ( /^(ne)$/.test( a ) ) {\n\t\t\tthat.size.width = newWidth;\n\t\t\tthat.size.height = newHeight;\n\t\t\tthat.position.top = op.top - oy;\n\t\t} else if ( /^(sw)$/.test( a ) ) {\n\t\t\tthat.size.width = newWidth;\n\t\t\tthat.size.height = newHeight;\n\t\t\tthat.position.left = op.left - ox;\n\t\t} else {\n\t\t\tif ( newHeight - gridY <= 0 || newWidth - gridX <= 0 ) {\n\t\t\t\touterDimensions = that._getPaddingPlusBorderDimensions( this );\n\t\t\t}\n\n\t\t\tif ( newHeight - gridY > 0 ) {\n\t\t\t\tthat.size.height = newHeight;\n\t\t\t\tthat.position.top = op.top - oy;\n\t\t\t} else {\n\t\t\t\tnewHeight = gridY - outerDimensions.height;\n\t\t\t\tthat.size.height = newHeight;\n\t\t\t\tthat.position.top = op.top + os.height - newHeight;\n\t\t\t}\n\t\t\tif ( newWidth - gridX > 0 ) {\n\t\t\t\tthat.size.width = newWidth;\n\t\t\t\tthat.position.left = op.left - ox;\n\t\t\t} else {\n\t\t\t\tnewWidth = gridX - outerDimensions.width;\n\t\t\t\tthat.size.width = newWidth;\n\t\t\t\tthat.position.left = op.left + os.width - newWidth;\n\t\t\t}\n\t\t}\n\t}\n\n} );\n\nreturn $.ui.resizable;\n\n} ) );\n",
    "/*!\n * jQuery UI Spinner 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Spinner\n//>>group: Widgets\n//>>description: Displays buttons to easily input numbers via the keyboard or mouse.\n//>>docs: http://api.jqueryui.com/spinner/\n//>>demos: http://jqueryui.com/spinner/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/spinner.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"./button\",\n\t\t\t\"../version\",\n\t\t\t\"../keycode\",\n\t\t\t\"../safe-active-element\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\nfunction spinnerModifer( fn ) {\n\treturn function() {\n\t\tvar previous = this.element.val();\n\t\tfn.apply( this, arguments );\n\t\tthis._refresh();\n\t\tif ( previous !== this.element.val() ) {\n\t\t\tthis._trigger( \"change\" );\n\t\t}\n\t};\n}\n\n$.widget( \"ui.spinner\", {\n\tversion: \"1.12.1\",\n\tdefaultElement: \"<input>\",\n\twidgetEventPrefix: \"spin\",\n\toptions: {\n\t\tclasses: {\n\t\t\t\"ui-spinner\": \"ui-corner-all\",\n\t\t\t\"ui-spinner-down\": \"ui-corner-br\",\n\t\t\t\"ui-spinner-up\": \"ui-corner-tr\"\n\t\t},\n\t\tculture: null,\n\t\ticons: {\n\t\t\tdown: \"ui-icon-triangle-1-s\",\n\t\t\tup: \"ui-icon-triangle-1-n\"\n\t\t},\n\t\tincremental: true,\n\t\tmax: null,\n\t\tmin: null,\n\t\tnumberFormat: null,\n\t\tpage: 10,\n\t\tstep: 1,\n\n\t\tchange: null,\n\t\tspin: null,\n\t\tstart: null,\n\t\tstop: null\n\t},\n\n\t_create: function() {\n\n\t\t// handle string values that need to be parsed\n\t\tthis._setOption( \"max\", this.options.max );\n\t\tthis._setOption( \"min\", this.options.min );\n\t\tthis._setOption( \"step\", this.options.step );\n\n\t\t// Only format if there is a value, prevents the field from being marked\n\t\t// as invalid in Firefox, see #9573.\n\t\tif ( this.value() !== \"\" ) {\n\n\t\t\t// Format the value, but don't constrain.\n\t\t\tthis._value( this.element.val(), true );\n\t\t}\n\n\t\tthis._draw();\n\t\tthis._on( this._events );\n\t\tthis._refresh();\n\n\t\t// Turning off autocomplete prevents the browser from remembering the\n\t\t// value when navigating through history, so we re-enable autocomplete\n\t\t// if the page is unloaded before the widget is destroyed. #7790\n\t\tthis._on( this.window, {\n\t\t\tbeforeunload: function() {\n\t\t\t\tthis.element.removeAttr( \"autocomplete\" );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_getCreateOptions: function() {\n\t\tvar options = this._super();\n\t\tvar element = this.element;\n\n\t\t$.each( [ \"min\", \"max\", \"step\" ], function( i, option ) {\n\t\t\tvar value = element.attr( option );\n\t\t\tif ( value != null && value.length ) {\n\t\t\t\toptions[ option ] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn options;\n\t},\n\n\t_events: {\n\t\tkeydown: function( event ) {\n\t\t\tif ( this._start( event ) && this._keydown( event ) ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t},\n\t\tkeyup: \"_stop\",\n\t\tfocus: function() {\n\t\t\tthis.previous = this.element.val();\n\t\t},\n\t\tblur: function( event ) {\n\t\t\tif ( this.cancelBlur ) {\n\t\t\t\tdelete this.cancelBlur;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._stop();\n\t\t\tthis._refresh();\n\t\t\tif ( this.previous !== this.element.val() ) {\n\t\t\t\tthis._trigger( \"change\", event );\n\t\t\t}\n\t\t},\n\t\tmousewheel: function( event, delta ) {\n\t\t\tif ( !delta ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( !this.spinning && !this._start( event ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis._spin( ( delta > 0 ? 1 : -1 ) * this.options.step, event );\n\t\t\tclearTimeout( this.mousewheelTimer );\n\t\t\tthis.mousewheelTimer = this._delay( function() {\n\t\t\t\tif ( this.spinning ) {\n\t\t\t\t\tthis._stop( event );\n\t\t\t\t}\n\t\t\t}, 100 );\n\t\t\tevent.preventDefault();\n\t\t},\n\t\t\"mousedown .ui-spinner-button\": function( event ) {\n\t\t\tvar previous;\n\n\t\t\t// We never want the buttons to have focus; whenever the user is\n\t\t\t// interacting with the spinner, the focus should be on the input.\n\t\t\t// If the input is focused then this.previous is properly set from\n\t\t\t// when the input first received focus. If the input is not focused\n\t\t\t// then we need to set this.previous based on the value before spinning.\n\t\t\tprevious = this.element[ 0 ] === $.ui.safeActiveElement( this.document[ 0 ] ) ?\n\t\t\t\tthis.previous : this.element.val();\n\t\t\tfunction checkFocus() {\n\t\t\t\tvar isActive = this.element[ 0 ] === $.ui.safeActiveElement( this.document[ 0 ] );\n\t\t\t\tif ( !isActive ) {\n\t\t\t\t\tthis.element.trigger( \"focus\" );\n\t\t\t\t\tthis.previous = previous;\n\n\t\t\t\t\t// support: IE\n\t\t\t\t\t// IE sets focus asynchronously, so we need to check if focus\n\t\t\t\t\t// moved off of the input because the user clicked on the button.\n\t\t\t\t\tthis._delay( function() {\n\t\t\t\t\t\tthis.previous = previous;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Ensure focus is on (or stays on) the text field\n\t\t\tevent.preventDefault();\n\t\t\tcheckFocus.call( this );\n\n\t\t\t// Support: IE\n\t\t\t// IE doesn't prevent moving focus even with event.preventDefault()\n\t\t\t// so we set a flag to know when we should ignore the blur event\n\t\t\t// and check (again) if focus moved off of the input.\n\t\t\tthis.cancelBlur = true;\n\t\t\tthis._delay( function() {\n\t\t\t\tdelete this.cancelBlur;\n\t\t\t\tcheckFocus.call( this );\n\t\t\t} );\n\n\t\t\tif ( this._start( event ) === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._repeat( null, $( event.currentTarget )\n\t\t\t\t.hasClass( \"ui-spinner-up\" ) ? 1 : -1, event );\n\t\t},\n\t\t\"mouseup .ui-spinner-button\": \"_stop\",\n\t\t\"mouseenter .ui-spinner-button\": function( event ) {\n\n\t\t\t// button will add ui-state-active if mouse was down while mouseleave and kept down\n\t\t\tif ( !$( event.currentTarget ).hasClass( \"ui-state-active\" ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( this._start( event ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._repeat( null, $( event.currentTarget )\n\t\t\t\t.hasClass( \"ui-spinner-up\" ) ? 1 : -1, event );\n\t\t},\n\n\t\t// TODO: do we really want to consider this a stop?\n\t\t// shouldn't we just stop the repeater and wait until mouseup before\n\t\t// we trigger the stop event?\n\t\t\"mouseleave .ui-spinner-button\": \"_stop\"\n\t},\n\n\t// Support mobile enhanced option and make backcompat more sane\n\t_enhance: function() {\n\t\tthis.uiSpinner = this.element\n\t\t\t.attr( \"autocomplete\", \"off\" )\n\t\t\t.wrap( \"<span>\" )\n\t\t\t.parent()\n\n\t\t\t\t// Add buttons\n\t\t\t\t.append(\n\t\t\t\t\t\"<a></a><a></a>\"\n\t\t\t\t);\n\t},\n\n\t_draw: function() {\n\t\tthis._enhance();\n\n\t\tthis._addClass( this.uiSpinner, \"ui-spinner\", \"ui-widget ui-widget-content\" );\n\t\tthis._addClass( \"ui-spinner-input\" );\n\n\t\tthis.element.attr( \"role\", \"spinbutton\" );\n\n\t\t// Button bindings\n\t\tthis.buttons = this.uiSpinner.children( \"a\" )\n\t\t\t.attr( \"tabIndex\", -1 )\n\t\t\t.attr( \"aria-hidden\", true )\n\t\t\t.button( {\n\t\t\t\tclasses: {\n\t\t\t\t\t\"ui-button\": \"\"\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// TODO: Right now button does not support classes this is already updated in button PR\n\t\tthis._removeClass( this.buttons, \"ui-corner-all\" );\n\n\t\tthis._addClass( this.buttons.first(), \"ui-spinner-button ui-spinner-up\" );\n\t\tthis._addClass( this.buttons.last(), \"ui-spinner-button ui-spinner-down\" );\n\t\tthis.buttons.first().button( {\n\t\t\t\"icon\": this.options.icons.up,\n\t\t\t\"showLabel\": false\n\t\t} );\n\t\tthis.buttons.last().button( {\n\t\t\t\"icon\": this.options.icons.down,\n\t\t\t\"showLabel\": false\n\t\t} );\n\n\t\t// IE 6 doesn't understand height: 50% for the buttons\n\t\t// unless the wrapper has an explicit height\n\t\tif ( this.buttons.height() > Math.ceil( this.uiSpinner.height() * 0.5 ) &&\n\t\t\t\tthis.uiSpinner.height() > 0 ) {\n\t\t\tthis.uiSpinner.height( this.uiSpinner.height() );\n\t\t}\n\t},\n\n\t_keydown: function( event ) {\n\t\tvar options = this.options,\n\t\t\tkeyCode = $.ui.keyCode;\n\n\t\tswitch ( event.keyCode ) {\n\t\tcase keyCode.UP:\n\t\t\tthis._repeat( null, 1, event );\n\t\t\treturn true;\n\t\tcase keyCode.DOWN:\n\t\t\tthis._repeat( null, -1, event );\n\t\t\treturn true;\n\t\tcase keyCode.PAGE_UP:\n\t\t\tthis._repeat( null, options.page, event );\n\t\t\treturn true;\n\t\tcase keyCode.PAGE_DOWN:\n\t\t\tthis._repeat( null, -options.page, event );\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t_start: function( event ) {\n\t\tif ( !this.spinning && this._trigger( \"start\", event ) === false ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !this.counter ) {\n\t\t\tthis.counter = 1;\n\t\t}\n\t\tthis.spinning = true;\n\t\treturn true;\n\t},\n\n\t_repeat: function( i, steps, event ) {\n\t\ti = i || 500;\n\n\t\tclearTimeout( this.timer );\n\t\tthis.timer = this._delay( function() {\n\t\t\tthis._repeat( 40, steps, event );\n\t\t}, i );\n\n\t\tthis._spin( steps * this.options.step, event );\n\t},\n\n\t_spin: function( step, event ) {\n\t\tvar value = this.value() || 0;\n\n\t\tif ( !this.counter ) {\n\t\t\tthis.counter = 1;\n\t\t}\n\n\t\tvalue = this._adjustValue( value + step * this._increment( this.counter ) );\n\n\t\tif ( !this.spinning || this._trigger( \"spin\", event, { value: value } ) !== false ) {\n\t\t\tthis._value( value );\n\t\t\tthis.counter++;\n\t\t}\n\t},\n\n\t_increment: function( i ) {\n\t\tvar incremental = this.options.incremental;\n\n\t\tif ( incremental ) {\n\t\t\treturn $.isFunction( incremental ) ?\n\t\t\t\tincremental( i ) :\n\t\t\t\tMath.floor( i * i * i / 50000 - i * i / 500 + 17 * i / 200 + 1 );\n\t\t}\n\n\t\treturn 1;\n\t},\n\n\t_precision: function() {\n\t\tvar precision = this._precisionOf( this.options.step );\n\t\tif ( this.options.min !== null ) {\n\t\t\tprecision = Math.max( precision, this._precisionOf( this.options.min ) );\n\t\t}\n\t\treturn precision;\n\t},\n\n\t_precisionOf: function( num ) {\n\t\tvar str = num.toString(),\n\t\t\tdecimal = str.indexOf( \".\" );\n\t\treturn decimal === -1 ? 0 : str.length - decimal - 1;\n\t},\n\n\t_adjustValue: function( value ) {\n\t\tvar base, aboveMin,\n\t\t\toptions = this.options;\n\n\t\t// Make sure we're at a valid step\n\t\t// - find out where we are relative to the base (min or 0)\n\t\tbase = options.min !== null ? options.min : 0;\n\t\taboveMin = value - base;\n\n\t\t// - round to the nearest step\n\t\taboveMin = Math.round( aboveMin / options.step ) * options.step;\n\n\t\t// - rounding is based on 0, so adjust back to our base\n\t\tvalue = base + aboveMin;\n\n\t\t// Fix precision from bad JS floating point math\n\t\tvalue = parseFloat( value.toFixed( this._precision() ) );\n\n\t\t// Clamp the value\n\t\tif ( options.max !== null && value > options.max ) {\n\t\t\treturn options.max;\n\t\t}\n\t\tif ( options.min !== null && value < options.min ) {\n\t\t\treturn options.min;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\t_stop: function( event ) {\n\t\tif ( !this.spinning ) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearTimeout( this.timer );\n\t\tclearTimeout( this.mousewheelTimer );\n\t\tthis.counter = 0;\n\t\tthis.spinning = false;\n\t\tthis._trigger( \"stop\", event );\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tvar prevValue, first, last;\n\n\t\tif ( key === \"culture\" || key === \"numberFormat\" ) {\n\t\t\tprevValue = this._parse( this.element.val() );\n\t\t\tthis.options[ key ] = value;\n\t\t\tthis.element.val( this._format( prevValue ) );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key === \"max\" || key === \"min\" || key === \"step\" ) {\n\t\t\tif ( typeof value === \"string\" ) {\n\t\t\t\tvalue = this._parse( value );\n\t\t\t}\n\t\t}\n\t\tif ( key === \"icons\" ) {\n\t\t\tfirst = this.buttons.first().find( \".ui-icon\" );\n\t\t\tthis._removeClass( first, null, this.options.icons.up );\n\t\t\tthis._addClass( first, null, value.up );\n\t\t\tlast = this.buttons.last().find( \".ui-icon\" );\n\t\t\tthis._removeClass( last, null, this.options.icons.down );\n\t\t\tthis._addClass( last, null, value.down );\n\t\t}\n\n\t\tthis._super( key, value );\n\t},\n\n\t_setOptionDisabled: function( value ) {\n\t\tthis._super( value );\n\n\t\tthis._toggleClass( this.uiSpinner, null, \"ui-state-disabled\", !!value );\n\t\tthis.element.prop( \"disabled\", !!value );\n\t\tthis.buttons.button( value ? \"disable\" : \"enable\" );\n\t},\n\n\t_setOptions: spinnerModifer( function( options ) {\n\t\tthis._super( options );\n\t} ),\n\n\t_parse: function( val ) {\n\t\tif ( typeof val === \"string\" && val !== \"\" ) {\n\t\t\tval = window.Globalize && this.options.numberFormat ?\n\t\t\t\tGlobalize.parseFloat( val, 10, this.options.culture ) : +val;\n\t\t}\n\t\treturn val === \"\" || isNaN( val ) ? null : val;\n\t},\n\n\t_format: function( value ) {\n\t\tif ( value === \"\" ) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn window.Globalize && this.options.numberFormat ?\n\t\t\tGlobalize.format( value, this.options.numberFormat, this.options.culture ) :\n\t\t\tvalue;\n\t},\n\n\t_refresh: function() {\n\t\tthis.element.attr( {\n\t\t\t\"aria-valuemin\": this.options.min,\n\t\t\t\"aria-valuemax\": this.options.max,\n\n\t\t\t// TODO: what should we do with values that can't be parsed?\n\t\t\t\"aria-valuenow\": this._parse( this.element.val() )\n\t\t} );\n\t},\n\n\tisValid: function() {\n\t\tvar value = this.value();\n\n\t\t// Null is invalid\n\t\tif ( value === null ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If value gets adjusted, it's invalid\n\t\treturn value === this._adjustValue( value );\n\t},\n\n\t// Update the value without triggering change\n\t_value: function( value, allowAny ) {\n\t\tvar parsed;\n\t\tif ( value !== \"\" ) {\n\t\t\tparsed = this._parse( value );\n\t\t\tif ( parsed !== null ) {\n\t\t\t\tif ( !allowAny ) {\n\t\t\t\t\tparsed = this._adjustValue( parsed );\n\t\t\t\t}\n\t\t\t\tvalue = this._format( parsed );\n\t\t\t}\n\t\t}\n\t\tthis.element.val( value );\n\t\tthis._refresh();\n\t},\n\n\t_destroy: function() {\n\t\tthis.element\n\t\t\t.prop( \"disabled\", false )\n\t\t\t.removeAttr( \"autocomplete role aria-valuemin aria-valuemax aria-valuenow\" );\n\n\t\tthis.uiSpinner.replaceWith( this.element );\n\t},\n\n\tstepUp: spinnerModifer( function( steps ) {\n\t\tthis._stepUp( steps );\n\t} ),\n\t_stepUp: function( steps ) {\n\t\tif ( this._start() ) {\n\t\t\tthis._spin( ( steps || 1 ) * this.options.step );\n\t\t\tthis._stop();\n\t\t}\n\t},\n\n\tstepDown: spinnerModifer( function( steps ) {\n\t\tthis._stepDown( steps );\n\t} ),\n\t_stepDown: function( steps ) {\n\t\tif ( this._start() ) {\n\t\t\tthis._spin( ( steps || 1 ) * -this.options.step );\n\t\t\tthis._stop();\n\t\t}\n\t},\n\n\tpageUp: spinnerModifer( function( pages ) {\n\t\tthis._stepUp( ( pages || 1 ) * this.options.page );\n\t} ),\n\n\tpageDown: spinnerModifer( function( pages ) {\n\t\tthis._stepDown( ( pages || 1 ) * this.options.page );\n\t} ),\n\n\tvalue: function( newVal ) {\n\t\tif ( !arguments.length ) {\n\t\t\treturn this._parse( this.element.val() );\n\t\t}\n\t\tspinnerModifer( this._value ).call( this, newVal );\n\t},\n\n\twidget: function() {\n\t\treturn this.uiSpinner;\n\t}\n} );\n\n// DEPRECATED\n// TODO: switch return back to widget declaration at top of file when this is removed\nif ( $.uiBackCompat !== false ) {\n\n\t// Backcompat for spinner html extension points\n\t$.widget( \"ui.spinner\", $.ui.spinner, {\n\t\t_enhance: function() {\n\t\t\tthis.uiSpinner = this.element\n\t\t\t\t.attr( \"autocomplete\", \"off\" )\n\t\t\t\t.wrap( this._uiSpinnerHtml() )\n\t\t\t\t.parent()\n\n\t\t\t\t\t// Add buttons\n\t\t\t\t\t.append( this._buttonHtml() );\n\t\t},\n\t\t_uiSpinnerHtml: function() {\n\t\t\treturn \"<span>\";\n\t\t},\n\n\t\t_buttonHtml: function() {\n\t\t\treturn \"<a></a><a></a>\";\n\t\t}\n\t} );\n}\n\nreturn $.ui.spinner;\n\n} ) );\n",
    "!function(e,r){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=r();else if(\"function\"==typeof define&&define.amd)define([],r);else{var t=r();for(var n in t)(\"object\"==typeof exports?exports:e)[n]=t[n]}}(this,function(){return function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var t={};return r.m=e,r.c=t,r.p=\"\",r(0)}([function(e,r,t){e.exports=t(1)},function(e,r,t){\"use strict\";function n(){var e=\"undefined\"==typeof JSON?{}:JSON;o.setupJSON(e)}var o=t(2),i=t(3);n();var a=window._rollbarConfig,s=a&&a.globalAlias||\"Rollbar\",u=window[s]&&\"undefined\"!=typeof window[s].shimId;!u&&a?o.wrapper.init(a):(window.Rollbar=o.wrapper,window.RollbarNotifier=i.Notifier),e.exports=o.wrapper},function(e,r,t){\"use strict\";function n(e,r,t){!t[4]&&window._rollbarWrappedError&&(t[4]=window._rollbarWrappedError,window._rollbarWrappedError=null),e.uncaughtError.apply(e,t),r&&r.apply(window,t)}function o(e,r){if(r.hasOwnProperty&&r.hasOwnProperty(\"addEventListener\")){var t=r.addEventListener;r.addEventListener=function(r,n,o){t.call(this,r,e.wrap(n),o)};var n=r.removeEventListener;r.removeEventListener=function(e,r,t){n.call(this,e,r&&r._wrapped||r,t)}}}var i=t(3),a=t(8),s=i.Notifier;window._rollbarWrappedError=null;var u={};u.init=function(e,r){var t=new s(r);if(t.configure(e),e.captureUncaught){var i;r&&a.isType(r._rollbarOldOnError,\"function\")?i=r._rollbarOldOnError:window.onerror&&!window.onerror.belongsToShim&&(i=window.onerror),window.onerror=function(){var e=Array.prototype.slice.call(arguments,0);n(t,i,e)};var u,c,l=[\"EventTarget\",\"Window\",\"Node\",\"ApplicationCache\",\"AudioTrackList\",\"ChannelMergerNode\",\"CryptoOperation\",\"EventSource\",\"FileReader\",\"HTMLUnknownElement\",\"IDBDatabase\",\"IDBRequest\",\"IDBTransaction\",\"KeyOperation\",\"MediaController\",\"MessagePort\",\"ModalWindow\",\"Notification\",\"SVGElementInstance\",\"Screen\",\"TextTrack\",\"TextTrackCue\",\"TextTrackList\",\"WebSocket\",\"WebSocketWorker\",\"Worker\",\"XMLHttpRequest\",\"XMLHttpRequestEventTarget\",\"XMLHttpRequestUpload\"];for(u=0;u<l.length;++u)c=l[u],window[c]&&window[c].prototype&&o(t,window[c].prototype)}return e.captureUnhandledRejections&&(r&&a.isType(r._unhandledRejectionHandler,\"function\")&&window.removeEventListener(\"unhandledrejection\",r._unhandledRejectionHandler),t._unhandledRejectionHandler=function(e){var r=e.reason,n=e.promise,o=e.detail;!r&&o&&(r=o.reason,n=o.promise),t.unhandledRejection(r,n)},window.addEventListener(\"unhandledrejection\",t._unhandledRejectionHandler)),window.Rollbar=t,s.processPayloads(),t},e.exports={wrapper:u,setupJSON:i.setupJSON}},function(e,r,t){\"use strict\";function n(e){E=e,w.setupJSON(e),v.setupJSON(e)}function o(e,r){return function(){var t=r||this;try{return e.apply(t,arguments)}catch(e){v.consoleError(\"[Rollbar]:\",e)}}}function i(){h||(h=setTimeout(f,1e3))}function a(){return _}function s(e){_=_||this;var r=\"https://\"+s.DEFAULT_ENDPOINT;this.options={enabled:!0,endpoint:r,environment:\"production\",scrubFields:g([],s.DEFAULT_SCRUB_FIELDS),checkIgnore:null,logLevel:s.DEFAULT_LOG_LEVEL,reportLevel:s.DEFAULT_REPORT_LEVEL,uncaughtErrorLevel:s.DEFAULT_UNCAUGHT_ERROR_LEVEL,payload:{}},this.lastError=null,this.plugins={},this.parentNotifier=e,e&&(e.hasOwnProperty(\"shimId\")?e.notifier=this:this.configure(e.options))}function u(e){window._rollbarPayloadQueue.push(e),i()}function c(e){return o(function(){var r=this._getLogArgs(arguments);return this._log(e||r.level||this.options.logLevel||s.DEFAULT_LOG_LEVEL,r.message,r.err,r.custom,r.callback)})}function l(e,r){e||(e=r?E.stringify(r):\"\");var t={body:e};return r&&(t.extra=g(!0,{},r)),{message:t}}function p(e,r,t){var n=m.guessErrorClass(r.message),o=r.name||n[0],i=n[1],a={exception:{class:o,message:i}};if(e&&(a.exception.description=e||\"uncaught exception\"),r.stack){var s,u,c,p,f,d,h,w;for(a.frames=[],h=0;h<r.stack.length;++h)s=r.stack[h],u={filename:s.url?v.sanitizeUrl(s.url):\"(unknown)\",lineno:s.line||null,method:s.func&&\"?\"!==s.func?s.func:\"[anonymous]\",colno:s.column},c=p=f=null,d=s.context?s.context.length:0,d&&(w=Math.floor(d/2),p=s.context.slice(0,w),c=s.context[w],f=s.context.slice(w)),c&&(u.code=c),(p||f)&&(u.context={},p&&p.length&&(u.context.pre=p),f&&f.length&&(u.context.post=f)),s.args&&(u.args=s.args),a.frames.push(u);return a.frames.reverse(),t&&(a.extra=g(!0,{},t)),{trace:a}}return l(o+\": \"+i,t)}function f(){var e;try{for(;e=window._rollbarPayloadQueue.shift();)d(e)}finally{h=void 0}}function d(e){var r=e.endpointUrl,t=e.accessToken,n=e.payload,o=e.callback||function(){},i=(new Date).getTime();i-L>=6e4&&(L=i,R=0);var a=window._globalRollbarOptions.maxItems,c=window._globalRollbarOptions.itemsPerMinute,l=function(){return!n.ignoreRateLimit&&a>=1&&T>=a},p=function(){return!n.ignoreRateLimit&&c>=1&&R>=c};return l()?void o(new Error(a+\" max items reached\")):p()?void o(new Error(c+\" items per minute reached\")):(T++,R++,l()&&_._log(_.options.uncaughtErrorLevel,\"maxItems has been hit. Ignoring errors for the remainder of the current page load.\",null,{maxItems:a},null,!1,!0),n.ignoreRateLimit&&delete n.ignoreRateLimit,void y.post(r,t,n,function(r,t){return r?(r instanceof b&&(e.callback=function(){},setTimeout(function(){u(e)},s.RETRY_DELAY)),o(r)):o(null,t)}))}var h,g=t(4),m=t(5),v=t(8),w=t(11),y=w.XHR,b=w.ConnectionError,E=null;s.NOTIFIER_VERSION=\"1.9.4\",s.DEFAULT_ENDPOINT=\"api.rollbar.com/api/1/\",s.DEFAULT_SCRUB_FIELDS=[\"pw\",\"pass\",\"passwd\",\"password\",\"secret\",\"confirm_password\",\"confirmPassword\",\"password_confirmation\",\"passwordConfirmation\",\"access_token\",\"accessToken\",\"secret_key\",\"secretKey\",\"secretToken\"],s.DEFAULT_LOG_LEVEL=\"debug\",s.DEFAULT_REPORT_LEVEL=\"debug\",s.DEFAULT_UNCAUGHT_ERROR_LEVEL=\"error\",s.DEFAULT_ITEMS_PER_MIN=60,s.DEFAULT_MAX_ITEMS=0,s.LEVELS={debug:0,info:1,warning:2,error:3,critical:4},s.RETRY_DELAY=1e4,window._rollbarPayloadQueue=window._rollbarPayloadQueue||[],window._globalRollbarOptions={startTime:(new Date).getTime(),maxItems:s.DEFAULT_MAX_ITEMS,itemsPerMinute:s.DEFAULT_ITEMS_PER_MIN};var _,x=s.prototype;x._getLogArgs=function(e){for(var r,t,n,i,a,u,c=this.options.logLevel||s.DEFAULT_LOG_LEVEL,l=[],p=0;p<e.length;++p)u=e[p],a=v.typeName(u),\"string\"===a?r?l.push(u):r=u:\"function\"===a?i=o(u,this):\"date\"===a?l.push(u):\"error\"===a||u instanceof Error||\"undefined\"!=typeof DOMException&&u instanceof DOMException?t?l.push(u):t=u:\"object\"!==a&&\"array\"!==a||(n?l.push(u):n=u);return l.length&&(n=n||{},n.extraArgs=l),{level:c,message:r,err:t,custom:n,callback:i}},x._route=function(e){var r=this.options.endpoint,t=/\\/$/.test(r),n=/^\\//.test(e);return t&&n?e=e.substring(1):t||n||(e=\"/\"+e),r+e},x._processShimQueue=function(e){for(var r,t,n,o,i,a,u,c={};t=e.shift();)r=t.shim,n=t.method,o=t.args,i=r.parentShim,u=c[r.shimId],u||(i?(a=c[i.shimId],u=new s(a)):u=this,c[r.shimId]=u),u[n]&&v.isType(u[n],\"function\")&&u[n].apply(u,o)},x._buildPayload=function(e,r,t,n,o){var i=this.options.accessToken,a=this.options.environment,u=g(!0,{},this.options.payload),c=v.uuid4();if(void 0===s.LEVELS[r])throw new Error(\"Invalid level\");if(!t&&!n&&!o)throw new Error(\"No message, stack info or custom data\");var l={environment:a,endpoint:this.options.endpoint,uuid:c,level:r,platform:\"browser\",framework:\"browser-js\",language:\"javascript\",body:this._buildBody(t,n,o),request:{url:window.location.href,query_string:window.location.search,user_ip:\"$remote_ip\"},client:{runtime_ms:e.getTime()-window._globalRollbarOptions.startTime,timestamp:Math.round(e.getTime()/1e3),javascript:{browser:window.navigator.userAgent,language:window.navigator.language,cookie_enabled:window.navigator.cookieEnabled,screen:{width:window.screen.width,height:window.screen.height},plugins:this._getBrowserPlugins()}},server:{},notifier:{name:\"rollbar-browser-js\",version:s.NOTIFIER_VERSION}};u.body&&delete u.body;var p={access_token:i,data:g(!0,l,u)};return this._scrub(p.data),p},x._buildBody=function(e,r,t){var n;return n=r?p(e,r,t):l(e,t)},x._getBrowserPlugins=function(){if(!this._browserPlugins){var e,r,t=window.navigator.plugins||[],n=t.length,o=[];for(r=0;r<n;++r)e=t[r],o.push({name:e.name,description:e.description});this._browserPlugins=o}return this._browserPlugins},x._scrub=function(e){function r(e,r,t,n,o,i){return r+v.redact(i)}function t(e){var t;if(v.isType(e,\"string\"))for(t=0;t<s.length;++t)e=e.replace(s[t],r);return e}function n(e,r){var t;for(t=0;t<a.length;++t)if(a[t].test(e)){r=v.redact(r);break}return r}function o(e,r){var o=n(e,r);return o===r?t(o):o}var i=this.options.scrubFields,a=this._getScrubFieldRegexs(i),s=this._getScrubQueryParamRegexs(i);return v.traverse(e,o),e},x._getScrubFieldRegexs=function(e){for(var r,t=[],n=0;n<e.length;++n)r=\"\\\\[?(%5[bB])?\"+e[n]+\"\\\\[?(%5[bB])?\\\\]?(%5[dD])?\",t.push(new RegExp(r,\"i\"));return t},x._getScrubQueryParamRegexs=function(e){for(var r,t=[],n=0;n<e.length;++n)r=\"\\\\[?(%5[bB])?\"+e[n]+\"\\\\[?(%5[bB])?\\\\]?(%5[dD])?\",t.push(new RegExp(\"(\"+r+\"=)([^&\\\\n]+)\",\"igm\"));return t},x._urlIsWhitelisted=function(e){var r,t,n,o,i,a,s,u,c,l;try{if(r=this.options.hostWhiteList,t=e&&e.data&&e.data.body&&e.data.body.trace,!r||0===r.length)return!0;if(!t)return!0;for(s=r.length,i=t.frames.length,c=0;c<i;c++){if(n=t.frames[c],o=n.filename,!v.isType(o,\"string\"))return!0;for(l=0;l<s;l++)if(a=r[l],u=new RegExp(a),u.test(o))return!0}}catch(e){return this.configure({hostWhiteList:null}),v.consoleError(\"[Rollbar]: Error while reading your configuration's hostWhiteList option. Removing custom hostWhiteList.\",e),!0}return!1},x._messageIsIgnored=function(e){var r,t,n,o,i,a,s,u,c;try{if(i=!1,n=this.options.ignoredMessages,!n||0===n.length)return!1;if(s=e&&e.data&&e.data.body,u=s&&s.trace&&s.trace.exception&&s.trace.exception.message,c=s&&s.message&&s.message.body,r=u||c,!r)return!1;for(o=n.length,t=0;t<o&&(a=new RegExp(n[t],\"gi\"),!(i=a.test(r)));t++);}catch(e){this.configure({ignoredMessages:null}),v.consoleError(\"[Rollbar]: Error while reading your configuration's ignoredMessages option. Removing custom ignoredMessages.\")}return i},x._enqueuePayload=function(e,r,t,n){var o={callback:n,accessToken:this.options.accessToken,endpointUrl:this._route(\"item/\"),payload:e},i=function(){if(n){var e=\"This item was not sent to Rollbar because it was ignored. This can happen if a custom checkIgnore() function was used or if the item's level was less than the notifier' reportLevel. See https://rollbar.com/docs/notifier/rollbar.js/configuration for more details.\";n(null,{err:0,result:{id:null,uuid:null,message:e}})}};if(this._internalCheckIgnore(r,t,e))return void i();try{if(v.isType(this.options.checkIgnore,\"function\")&&this.options.checkIgnore(r,t,e))return void i()}catch(e){this.configure({checkIgnore:null}),v.consoleError(\"[Rollbar]: Error while calling custom checkIgnore() function. Removing custom checkIgnore().\",e)}if(this._urlIsWhitelisted(e)&&!this._messageIsIgnored(e)){if(this.options.verbose){if(e.data&&e.data.body&&e.data.body.trace){var a=e.data.body.trace,s=a.exception.message;v.consoleError(\"[Rollbar]: \",s)}v.consoleInfo(\"[Rollbar]: \",o)}v.isType(this.options.logFunction,\"function\")&&this.options.logFunction(o);try{v.isType(this.options.transform,\"function\")&&this.options.transform(e)}catch(e){this.configure({transform:null}),v.consoleError(\"[Rollbar]: Error while calling custom transform() function. Removing custom transform().\",e)}this.options.enabled&&u(o)}},x._internalCheckIgnore=function(e,r,t){var n=r[0],o=s.LEVELS[n]||0,i=s.LEVELS[this.options.reportLevel]||0;if(o<i)return!0;var a=this.options?this.options.plugins:{};if(a&&a.jquery&&a.jquery.ignoreAjaxErrors)try{return!!t.data.body.message.extra.isAjax}catch(e){return!1}return!1},x._log=function(e,r,t,n,o,i,a){var s=null;if(t)try{if(s=t._savedStackTrace?t._savedStackTrace:m.parse(t),t===this.lastError)return;this.lastError=t}catch(e){v.consoleError(\"[Rollbar]: Error while parsing the error object.\",e),r=t.message||t.description||r||String(t),t=null}var u=this._buildPayload(new Date,e,r,s,n);return a&&(u.ignoreRateLimit=!0),this._enqueuePayload(u,!!i,[e,r,t,n],o),{uuid:u.data.uuid}},x.log=c(),x.debug=c(\"debug\"),x.info=c(\"info\"),x.warn=c(\"warning\"),x.warning=c(\"warning\"),x.error=c(\"error\"),x.critical=c(\"critical\"),x.uncaughtError=o(function(e,r,t,n,o,i){if(i=i||null,o&&v.isType(o,\"error\"))return void this._log(this.options.uncaughtErrorLevel,e,o,i,null,!0);if(r&&v.isType(r,\"error\"))return void this._log(this.options.uncaughtErrorLevel,e,r,i,null,!0);var a={url:r||\"\",line:t};a.func=m.guessFunctionName(a.url,a.line),a.context=m.gatherContext(a.url,a.line);var s={mode:\"onerror\",message:o?String(o):e||\"uncaught exception\",url:document.location.href,stack:[a],useragent:navigator.userAgent},u=this._buildPayload(new Date,this.options.uncaughtErrorLevel,e,s,i);this._enqueuePayload(u,!0,[this.options.uncaughtErrorLevel,e,r,t,n,o])}),x.unhandledRejection=o(function(e,r){var t,n;if(e?(t=e.message||String(e),n=e._rollbarContext):t=\"unhandled rejection was null or undefined!\",n=n||r._rollbarContext||null,e&&v.isType(e,\"error\"))return void this._log(this.options.uncaughtErrorLevel,t,e,n,null,!0);var o={url:\"\",line:0};o.func=m.guessFunctionName(o.url,o.line),o.context=m.gatherContext(o.url,o.line);var i={mode:\"unhandledrejection\",message:t,url:document.location.href,stack:[o],useragent:navigator.userAgent},a=this._buildPayload(new Date,this.options.uncaughtErrorLevel,t,i,n);this._enqueuePayload(a,!0,[this.options.uncaughtErrorLevel,t,o.url,o.line,0,e,r])}),x.global=o(function(e){e=e||{};var r={startTime:e.startTime,maxItems:e.maxItems,itemsPerMinute:e.itemsPerMinute};g(!0,window._globalRollbarOptions,r),void 0!==e.maxItems&&(T=0),void 0!==e.itemsPerMinute&&(R=0)}),x.configure=o(function(e,r){var t=g(!0,{},e);g(!r,this.options,t),this.global(t)}),x.scope=o(function(e){var r=new s(this);return g(!0,r.options.payload,e),r}),x.wrap=function(e,r){try{var t;if(t=v.isType(r,\"function\")?r:function(){return r||{}},!v.isType(e,\"function\"))return e;if(e._isWrap)return e;if(!e._wrapped){e._wrapped=function(){try{return e.apply(this,arguments)}catch(r){throw\"string\"==typeof r&&(r=new String(r)),r.stack||(r._savedStackTrace=m.parse(r)),r._rollbarContext=t()||{},r._rollbarContext._wrappedSource=e.toString(),window._rollbarWrappedError=r,r}},e._wrapped._isWrap=!0;for(var n in e)e.hasOwnProperty(n)&&(e._wrapped[n]=e[n])}return e._wrapped}catch(r){return e}},x.loadFull=function(){v.consoleError(\"[Rollbar]: Unexpected Rollbar.loadFull() called on a Notifier instance\")},s.processPayloads=function(e){return e?void f():void i()};var L=(new Date).getTime(),T=0,R=0;e.exports={Notifier:s,setupJSON:n,topLevelNotifier:a}},function(e,r){\"use strict\";var t=Object.prototype.hasOwnProperty,n=Object.prototype.toString,o=function(e){return\"function\"==typeof Array.isArray?Array.isArray(e):\"[object Array]\"===n.call(e)},i=function(e){if(!e||\"[object Object]\"!==n.call(e))return!1;var r=t.call(e,\"constructor\"),o=e.constructor&&e.constructor.prototype&&t.call(e.constructor.prototype,\"isPrototypeOf\");if(e.constructor&&!r&&!o)return!1;var i;for(i in e);return\"undefined\"==typeof i||t.call(e,i)};e.exports=function e(){var r,t,n,a,s,u,c=arguments[0],l=1,p=arguments.length,f=!1;for(\"boolean\"==typeof c?(f=c,c=arguments[1]||{},l=2):(\"object\"!=typeof c&&\"function\"!=typeof c||null==c)&&(c={});l<p;++l)if(r=arguments[l],null!=r)for(t in r)n=c[t],a=r[t],c!==a&&(f&&a&&(i(a)||(s=o(a)))?(s?(s=!1,u=n&&o(n)?n:[]):u=n&&i(n)?n:{},c[t]=e(f,u,a)):\"undefined\"!=typeof a&&(c[t]=a));return c}},function(e,r,t){\"use strict\";function n(){return l}function o(){return null}function i(e){var r={};return r._stackFrame=e,r.url=e.fileName,r.line=e.lineNumber,r.func=e.functionName,r.column=e.columnNumber,r.args=e.args,r.context=o(r.url,r.line),r}function a(e){function r(){var r=[];try{r=c.parse(e)}catch(e){r=[]}for(var t=[],n=0;n<r.length;n++)t.push(new i(r[n]));return t}return{stack:r(),message:e.message,name:e.name}}function s(e){return new a(e)}function u(e){if(!e)return[\"Unknown error. There was no error message to display.\",\"\"];var r=e.match(p),t=\"(unknown)\";return r&&(t=r[r.length-1],e=e.replace((r[r.length-2]||\"\")+t+\":\",\"\"),e=e.replace(/(^[\\s]+|[\\s]+$)/g,\"\")),[t,e]}var c=t(6),l=\"?\",p=new RegExp(\"^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): \");e.exports={guessFunctionName:n,guessErrorClass:u,gatherContext:o,parse:s,Stack:a,Frame:i}},function(e,r,t){var n,o,i;!function(a,s){\"use strict\";o=[t(7)],n=s,i=\"function\"==typeof n?n.apply(r,o):n,!(void 0!==i&&(e.exports=i))}(this,function(e){\"use strict\";function r(e,r,t){if(\"function\"==typeof Array.prototype.map)return e.map(r,t);for(var n=new Array(e.length),o=0;o<e.length;o++)n[o]=r.call(t,e[o]);return n}function t(e,r,t){if(\"function\"==typeof Array.prototype.filter)return e.filter(r,t);for(var n=[],o=0;o<e.length;o++)r.call(t,e[o])&&n.push(e[o]);return n}var n=/(^|@)\\S+\\:\\d+/,o=/^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m,i=/^(eval@)?(\\[native code\\])?$/;return{parse:function(e){if(\"undefined\"!=typeof e.stacktrace||\"undefined\"!=typeof e[\"opera#sourceloc\"])return this.parseOpera(e);if(e.stack&&e.stack.match(o))return this.parseV8OrIE(e);if(e.stack)return this.parseFFOrSafari(e);throw new Error(\"Cannot parse given Error object\")},extractLocation:function(e){if(e.indexOf(\":\")===-1)return[e];var r=e.replace(/[\\(\\)\\s]/g,\"\").split(\":\"),t=r.pop(),n=r[r.length-1];if(!isNaN(parseFloat(n))&&isFinite(n)){var o=r.pop();return[r.join(\":\"),o,t]}return[r.join(\":\"),t,void 0]},parseV8OrIE:function(n){var i=t(n.stack.split(\"\\n\"),function(e){return!!e.match(o)},this);return r(i,function(r){r.indexOf(\"(eval \")>-1&&(r=r.replace(/eval code/g,\"eval\").replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g,\"\"));var t=r.replace(/^\\s+/,\"\").replace(/\\(eval code/g,\"(\").split(/\\s+/).slice(1),n=this.extractLocation(t.pop()),o=t.join(\" \")||void 0,i=\"eval\"===n[0]?void 0:n[0];return new e(o,void 0,i,n[1],n[2],r)},this)},parseFFOrSafari:function(n){var o=t(n.stack.split(\"\\n\"),function(e){return!e.match(i)},this);return r(o,function(r){if(r.indexOf(\" > eval\")>-1&&(r=r.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g,\":$1\")),r.indexOf(\"@\")===-1&&r.indexOf(\":\")===-1)return new e(r);var t=r.split(\"@\"),n=this.extractLocation(t.pop()),o=t.shift()||void 0;return new e(o,void 0,n[0],n[1],n[2],r)},this)},parseOpera:function(e){return!e.stacktrace||e.message.indexOf(\"\\n\")>-1&&e.message.split(\"\\n\").length>e.stacktrace.split(\"\\n\").length?this.parseOpera9(e):e.stack?this.parseOpera11(e):this.parseOpera10(e)},parseOpera9:function(r){for(var t=/Line (\\d+).*script (?:in )?(\\S+)/i,n=r.message.split(\"\\n\"),o=[],i=2,a=n.length;i<a;i+=2){var s=t.exec(n[i]);s&&o.push(new e(void 0,void 0,s[2],s[1],void 0,n[i]))}return o},parseOpera10:function(r){for(var t=/Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i,n=r.stacktrace.split(\"\\n\"),o=[],i=0,a=n.length;i<a;i+=2){var s=t.exec(n[i]);s&&o.push(new e(s[3]||void 0,void 0,s[2],s[1],void 0,n[i]))}return o},parseOpera11:function(o){var i=t(o.stack.split(\"\\n\"),function(e){return!!e.match(n)&&!e.match(/^Error created at/)},this);return r(i,function(r){var t,n=r.split(\"@\"),o=this.extractLocation(n.pop()),i=n.shift()||\"\",a=i.replace(/<anonymous function(: (\\w+))?>/,\"$2\").replace(/\\([^\\)]*\\)/g,\"\")||void 0;i.match(/\\(([^\\)]*)\\)/)&&(t=i.replace(/^[^\\(]+\\(([^\\)]*)\\)$/,\"$1\"));var s=void 0===t||\"[arguments not available]\"===t?void 0:t.split(\",\");return new e(a,s,o[0],o[1],o[2],r)},this)}}})},function(e,r,t){var n,o,i;!function(t,a){\"use strict\";o=[],n=a,i=\"function\"==typeof n?n.apply(r,o):n,!(void 0!==i&&(e.exports=i))}(this,function(){\"use strict\";function e(e){return!isNaN(parseFloat(e))&&isFinite(e)}function r(e,r,t,n,o,i){void 0!==e&&this.setFunctionName(e),void 0!==r&&this.setArgs(r),void 0!==t&&this.setFileName(t),void 0!==n&&this.setLineNumber(n),void 0!==o&&this.setColumnNumber(o),void 0!==i&&this.setSource(i)}return r.prototype={getFunctionName:function(){return this.functionName},setFunctionName:function(e){this.functionName=String(e)},getArgs:function(){return this.args},setArgs:function(e){if(\"[object Array]\"!==Object.prototype.toString.call(e))throw new TypeError(\"Args must be an Array\");this.args=e},getFileName:function(){return this.fileName},setFileName:function(e){this.fileName=String(e)},getLineNumber:function(){return this.lineNumber},setLineNumber:function(r){if(!e(r))throw new TypeError(\"Line Number must be a Number\");this.lineNumber=Number(r)},getColumnNumber:function(){return this.columnNumber},setColumnNumber:function(r){if(!e(r))throw new TypeError(\"Column Number must be a Number\");this.columnNumber=Number(r)},getSource:function(){return this.source},setSource:function(e){this.source=String(e)},toString:function(){var r=this.getFunctionName()||\"{anonymous}\",t=\"(\"+(this.getArgs()||[]).join(\",\")+\")\",n=this.getFileName()?\"@\"+this.getFileName():\"\",o=e(this.getLineNumber())?\":\"+this.getLineNumber():\"\",i=e(this.getColumnNumber())?\":\"+this.getColumnNumber():\"\";return r+t+n+o+i}},r})},function(e,r,t){\"use strict\";function n(e){v=e}function o(e){return{}.toString.call(e).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()}function i(e,r){return o(e)===r}function a(e){if(!i(e,\"string\"))throw new Error(\"received invalid input\");for(var r=w,t=r.parser[r.strictMode?\"strict\":\"loose\"].exec(e),n={},o=14;o--;)n[r.key[o]]=t[o]||\"\";return n[r.q.name]={},n[r.key[12]].replace(r.q.parser,function(e,t,o){t&&(n[r.q.name][t]=o)}),n}function s(e){var r=a(e);return\"\"===r.anchor&&(r.source=r.source.replace(\"#\",\"\")),e=r.source.replace(\"?\"+r.query,\"\")}function u(e,r){var t,n,o,a=i(e,\"object\"),s=i(e,\"array\"),c=[];if(a)for(t in e)e.hasOwnProperty(t)&&c.push(t);else if(s)for(o=0;o<e.length;++o)c.push(o);for(o=0;o<c.length;++o)t=c[o],n=e[t],a=i(n,\"object\"),s=i(n,\"array\"),a||s?e[t]=u(n,r):e[t]=r(t,n);return e}function c(e){return e=String(e),new Array(e.length+1).join(\"*\")}function l(){var e=(new Date).getTime(),r=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,function(r){var t=(e+16*Math.random())%16|0;return e=Math.floor(e/16),(\"x\"===r?t:7&t|8).toString(16)});return r}function p(e){return\"function\"!=typeof Object.create?function(e){var r=function(){};return function(e){if(null!==e&&e!==Object(e))throw TypeError(\"Argument must be an object, or null\");r.prototype=e||{};var t=new r;return r.prototype=null,null===e&&(t.__proto__=null),t}}()(e):Object.create(e)}function f(){for(var e=[],r=0;r<arguments.length;r++){var t=arguments[r];\"object\"==typeof t?(t=v.stringify(t),t.length>500&&(t=t.substr(0,500)+\"...\")):\"undefined\"==typeof t&&(t=\"undefined\"),e.push(t)}return e.join(\" \")}function d(){m.ieVersion()<=8?console.error(f.apply(null,arguments)):console.error.apply(null,arguments)}function h(){m.ieVersion()<=8?console.info(f.apply(null,arguments)):console.info.apply(null,arguments)}function g(){m.ieVersion()<=8?console.log(f.apply(null,arguments)):console.log.apply(null,arguments)}t(9);var m=t(10),v=null,w={strictMode:!1,key:[\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"],q:{name:\"queryKey\",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/}},y={setupJSON:n,isType:i,parseUri:a,parseUriOptions:w,redact:c,sanitizeUrl:s,traverse:u,typeName:o,uuid4:l,objectCreate:p,consoleError:d,consoleInfo:h,consoleLog:g};e.exports=y},function(e,r){!function(e){\"use strict\";e.console||(e.console={});for(var r,t,n=e.console,o=function(){},i=[\"memory\"],a=\"assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn\".split(\",\");r=i.pop();)n[r]||(n[r]={});for(;t=a.pop();)n[t]||(n[t]=o)}(\"undefined\"==typeof window?this:window)},function(e,r){\"use strict\";function t(){for(var e,r=3,t=document.createElement(\"div\"),n=t.getElementsByTagName(\"i\");t.innerHTML=\"<!--[if gt IE \"+ ++r+\"]><i></i><![endif]-->\",n[0];);return r>4?r:e}var n={ieVersion:t};e.exports=n},function(e,r,t){\"use strict\";function n(e){a=e}function o(e){this.name=\"Connection Error\",this.message=e,this.stack=(new Error).stack}var i=t(8),a=null;o.prototype=i.objectCreate(Error.prototype),o.prototype.constructor=o;var s={XMLHttpFactories:[function(){return new XMLHttpRequest},function(){return new ActiveXObject(\"Msxml2.XMLHTTP\")},function(){return new ActiveXObject(\"Msxml3.XMLHTTP\")},function(){return new ActiveXObject(\"Microsoft.XMLHTTP\")}],createXMLHTTPObject:function(){var e,r=!1,t=s.XMLHttpFactories,n=t.length;for(e=0;e<n;e++)try{r=t[e]();break}catch(e){}return r},post:function(e,r,t,n){if(!i.isType(t,\"object\"))throw new Error(\"Expected an object to POST\");t=a.stringify(t),n=n||function(){};var u=s.createXMLHTTPObject();if(u)try{try{var c=function(){try{if(c&&4===u.readyState){c=void 0;var e=a.parse(u.responseText);200===u.status?n(null,e):i.isType(u.status,\"number\")&&u.status>=400&&u.status<600?(403==u.status&&i.consoleError(\"[Rollbar]:\"+e.message),n(new Error(String(u.status)))):n(new o(\"XHR response had no status code (likely connection failure)\"))}}catch(e){var r;r=e&&e.stack?e:new Error(e),n(r)}};u.open(\"POST\",e,!0),u.setRequestHeader&&(u.setRequestHeader(\"Content-Type\",\"application/json\"),u.setRequestHeader(\"X-Rollbar-Access-Token\",r)),u.onreadystatechange=c,u.send(t)}catch(r){if(\"undefined\"!=typeof XDomainRequest){\"http:\"===window.location.href.substring(0,5)&&\"https\"===e.substring(0,5)&&(e=\"http\"+e.substring(5));var l=function(){n(new o(\"Request timed out\"))},p=function(){n(new Error(\"Error during request\"))},f=function(){n(null,a.parse(u.responseText))};u=new XDomainRequest,u.onprogress=function(){},u.ontimeout=l,u.onerror=p,u.onload=f,u.open(\"POST\",e,!0),u.send(t)}}}catch(e){n(e)}}};e.exports={XHR:s,setupJSON:n,ConnectionError:o}}])});",
    "'use strict';\nvar ko = require('./herocalc_knockout');\n    \nvar my = require(\"../herocalc/main\");\nvar AbilityModel = require(\"../herocalc/AbilityModel\");\nvar BasicInventoryViewModel = require(\"../herocalc/inventory/BasicInventoryViewModel\");\nvar union = require(\"../herocalc/util/union\");\n\nvar inventoryClipBoard = {\n    items: [],\n    activeItems: []\n};\n\nvar GraphPropertyOption = function (id, label) {\n    this.id = id;\n    this.label = label;\n};\n\nAbilityModel.prototype.isQWER = function (ability) {\n    return (ability.displayname != 'Empty' &&  (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_HIDDEN') == -1 || ability.name.indexOf('invoker_') != -1) && ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE') == -1)\n}\n\nvar BuildExplorerViewModel = function (h) {\nvar self = this;\n    self.parent = h;\n\n    self.itemBuild = ko.observableArray([]);\n    self.skillBuild = ko.observableArray([]);\n    self.graphDataItemRows = [];\n    for (var i = 0; i < 25; i++) {\n        self.itemBuild.push(new BasicInventoryViewModel());\n        self.itemBuild()[i].carryOver = ko.observable(true);\n        self.skillBuild.push(ko.observable(-1));\n        self.graphDataItemRows.push(ko.observable(false));\n    }\n    self.toggleItemBuildCarryOver = function (index) {\n        self.itemBuild()[index].carryOver(!self.itemBuild()[index].carryOver());\n    }\n    \n    self.abilityMapData = [0,1,2,3,4];\n    self.abilityMapHero = self.parent.selectedHero().heroName;\n    self.abilityMap = ko.computed(function () {\n        if (self.abilityMapHero == self.parent.selectedHero().heroName) return;\n        self.abilityMapHero = self.parent.selectedHero().heroName;\n        var newMap = self.parent.ability().abilities().map(function(ability, index) {\n            if (self.parent.ability().isQWER(ability)) {\n                return index;\n            }\n            else {\n                return -1;\n            }\n        }).filter(function(element) { return element != -1; });\n        for (var i = 0; i < 25; i++) {\n            var abilityValue = self.skillBuild()[i]();\n            if (abilityValue == -1) continue;\n            \n            var abilityIndex = self.abilityMapData.indexOf(abilityValue);\n            var newValue = newMap[abilityIndex];\n            if (newValue != abilityValue) {\n                self.skillBuild()[i](newValue);\n            }\n        }\n        self.abilityMapData = newMap;\n    });\n    \n    self.availableSkillBuildPoints = ko.computed(function () {\n        return self.skillBuild().reduce(function(memo, num){ return memo + (num() == -1); }, 0);\n    });\n    self.getSkillBuildAbilityLevel = function (index) {\n        return self.skillBuild().reduce(function(memo, num){ return memo + (num() == index); }, 0);\n    };\n    self.toggleAbilitySkillBuild = function (index, abilityIndex, data, event) {\n        if (self.skillBuild()[index]() != abilityIndex) {\n            var ability = self.parent.ability().abilities()[abilityIndex],\n                abilityType = ability.abilitytype,\n                skillBuildSlice = self.skillBuild().slice(0, index),\n                currentAbilityLevel = self.skillBuild().reduce(function(memo, num){ return memo + (num() == abilityIndex); }, 0),\n                n = skillBuildSlice.reduce(function(memo, num){ return memo + (num() == abilityIndex); }, 0);\n            \n            if (self.IsValidAbilityLevel(ability, self.parent.selectedHero().heroName, index + 1, n)) {\n                self.skillBuild()[index](abilityIndex);\n                for (var i = index + 1; i < 25; i++) {\n                    if (self.skillBuild()[i]() == abilityIndex) {\n                        n++;\n                        if (!self.IsValidAbilityLevel(ability, self.parent.selectedHero().heroName, i + 1, n)) {\n                            self.skillBuild()[i](-1);\n                            n--;\n                        }\n                    }\n                }\n            }\n            else if (n > 0 && self.IsValidAbilityLevel(ability, self.parent.selectedHero().heroName, index + 1, n - 1)) {\n                for (var i = skillBuildSlice.length - 1; i >= 0; i--) {\n                    if (skillBuildSlice[i]() == abilityIndex) {\n                        self.skillBuild()[i](-1);\n                        self.skillBuild()[index](abilityIndex);\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            self.skillBuild()[index](-1);\n        }\n    };\n    self.IsValidAbilityLevel = function (ability, heroName, heroLevel, abilityLevel) {\n        var a = 1, b = 2, m = 4;\n        if (ability.name == 'attribute_bonus') {\n            m = 10;\n        }\n        else {\n            if (ability.abilitytype == 'DOTA_ABILITY_TYPE_ULTIMATE') {\n                if (heroName == 'invoker') {\n                    a = 2;\n                    b = 5;\n                }\n                else if (heroName == 'meepo') {\n                    a = 3;\n                    b = 7;\n                    m = 3;\n                }\n                else {\n                    a = 6;\n                    b = 5;\n                    m = 3;\n                }\n            }\n            else {\n                if (heroName == 'invoker') {\n                    m = 7;\n                }\n            }                \n        }\n        \n        return heroLevel >= a + b * abilityLevel && abilityLevel < m;\n    }\n    \n    self.resetItemBuild = function (index) {\n        self.itemBuild()[index].removeAll();\n    };        \n    self.resetAllItemBuilds = function () {\n        for (var i = 0; i < 25; i++) {\n            self.itemBuild()[i].removeAll();\n            self.itemBuild()[i].carryOver(true);\n        }\n    };\n    self.resetSkillBuild = function () {\n        for (var i = 0; i < 25; i++) {\n            self.skillBuild()[i](-1);\n        }\n    };\n    self.graphData = ko.observableArray([]);\n    self.graphDataHeader = ko.observable(self.parent.selectedHero().heroDisplayName);\n    self.parent.selectedHero.subscribe(function (newValue) {\n        self.graphDataHeader(self.parent.selectedHero().heroDisplayName);\n    });\n    self.graphDataDescription = ko.observable('');\n    self.graphProperties = ko.observableArray([\n        new GraphPropertyOption('totalArmorPhysical', 'Armor'),\n        new GraphPropertyOption('totalArmorPhysicalReduction', 'Physical Damage Reduction'),\n        new GraphPropertyOption('totalMagicResistance', 'Magical Resistance'),\n        new GraphPropertyOption('health', 'Health'),\n        new GraphPropertyOption('healthregen', 'Health Regeneration'),\n        new GraphPropertyOption('mana', 'Mana'),\n        new GraphPropertyOption('manaregen', 'Mana Regeneration'),\n        new GraphPropertyOption('ehpPhysical', 'EHP Physical'),\n        new GraphPropertyOption('ehpMagical', 'EHP Magical'),\n        new GraphPropertyOption('damage', 'Damage per attack'),\n        new GraphPropertyOption('dps', 'Damage per second'),\n        new GraphPropertyOption('attacksPerSecond', 'Attacks per second'),\n        new GraphPropertyOption('attackTime', 'Time per attack')\n    ]);\n    self.graph = function() {\n        var savedAbilityLevels = [],\n            savedLevel = self.parent.selectedHeroLevel(),\n            savedItems = self.parent.inventory.items(),\n            savedActiveItems = self.parent.inventory.activeItems(),\n            s = ko.toJS(self.skillBuild),\n            carryOverItems = [],\n            carryOverActiveItems = [],\n            dataset = [];\n        for (var i = 0; i < self.parent.ability().abilities().length; i++) {\n            savedAbilityLevels.push(self.parent.ability().abilities()[i].level());\n        }\n        for (var i = 1; i < 26; i++) {\n            self.parent.selectedHeroLevel(i);\n            var skillBuildSubset = s.slice(0, i);\n            for (var j = 0; j < self.parent.ability().abilities().length; j++) {\n                var a = self.parent.ability().abilities()[j],\n                    count = skillBuildSubset.reduce(function(memo, num) {\n                        return memo + (num == j);\n                    }, 0);\n                a.level(count);\n            }\n\n            if (!self.itemBuild()[i - 1].carryOver()) {\n                carryOverItems = [];\n                carryOverActiveItems = [];\n            }\n            carryOverItems = carryOverItems.concat(self.itemBuild()[i - 1].items());\n            carryOverActiveItems = carryOverActiveItems.concat(self.itemBuild()[i - 1].activeItems());\n\n            self.parent.inventory.items(carryOverItems);\n            self.parent.inventory.activeItems(carryOverActiveItems);\n            var dataObj = {};\n            for (var j = 0; j < self.graphProperties().length; j++) {\n                var prop = self.graphProperties()[j];\n                switch (prop.id) {\n                    case 'dps':\n                        dataObj[prop.id] = self.parent['damageTotalInfo']().totalRow[2]().toFixed(2);\n                        break;\n                    case 'damage':\n                        dataObj[prop.id] = self.parent['damageTotalInfo']().totalRow[0]().toFixed(2);\n                        break;\n                    default:\n                        dataObj[prop.id] = self.parent[prop.id]();\n                        break;\n                }\n            }\n\n            dataObj.items = carryOverItems.map(function(item) {\n                return ko.toJS(item);\n            });\n            dataset.push(dataObj);\n            if (carryOverItems > 0) {\n                self.graphDataItemRows[i - 1](true);\n            }\n        }\n        var data = {\n            header: self.graphDataHeader(),\n            description: self.graphDataDescription(),\n            items: self.parent.inventory.items().map(function(item) {\n                return ko.toJS(item);\n            }),\n            skillBuild: ko.toJS(self.skillBuild),\n            data: dataset,\n            abilityMap: self.abilityMapData.slice(0),\n            cumulativeSkillBuild: [],\n            visible: ko.observable(true)\n        }\n        for (var i = 0; i < 25; i++) {\n            var skillBuildAtLevel = [],\n                skillBuildSlice = data.skillBuild.slice(0, i + 1);\n            for (var j = 0; j < data.abilityMap.length; j++) {\n                var abilityIndex = data.abilityMap[j];\n                skillBuildAtLevel.push(skillBuildSlice.reduce(function(memo, num) {\n                    return memo + (num == abilityIndex);\n                }, 0));\n            }\n            data.cumulativeSkillBuild.push(skillBuildAtLevel);\n        }\n\n        self.graphData.push(data);\n        self.parent.selectedHeroLevel(savedLevel);\n        for (var i = 0; i < self.parent.ability().abilities().length; i++) {\n            self.parent.ability().abilities()[i].level(savedAbilityLevels[i]);\n        }\n        self.parent.inventory.items(savedItems);\n        self.parent.inventory.activeItems(savedActiveItems);\n    };\n    self.removeGraphDataSet = function (data) {\n        self.graphData.remove(data);\n    }\n    self.selectedGraphProperty = ko.observable(self.graphProperties()[0].id);\n    \n    self.graphChartOptions = ko.computed(function () {\n        var color = 'rgb(151, 154, 162)';\n        return {\n            responsive: true,\n            datasetStroke: false,\n            datasetStrokeWidth: -1,\n            datasetFill: false,\n            pointHitDetectionRadius : 10,\n            scaleFontColor: color,\n            scaleLineColor: color.replace('rgb', 'rgba').replace(')', ', .1)'),\n            scaleGridLineColor: color.replace('rgb', 'rgba').replace(')', ', .1)')\n        }\n    });\n    self.graphChartData = ko.computed(function () {\n        var data = {\n            labels: [],\n            datasets: []\n        }\n        for (var i = 0; i < 25; i++) {\n            data.labels.push((i+1).toString());\n        }\n        for (var i = 0; i < self.graphData().length; i++) {\n            var dataObj = self.graphData()[i],\n                dataset = {\n                    label: dataObj.header,\n                    fillColor: self.graphDistinctColor(self.graphData().length, i, .1),\n                    strokeColor: self.graphDistinctColor(self.graphData().length, i, 1),\n                    pointColor: self.graphDistinctColor(self.graphData().length, i, 1),\n                    pointStrokeColor: self.graphDistinctColor(self.graphData().length, i, 1),\n                    pointHighlightFill: self.graphDistinctColor(self.graphData().length, i, .1),\n                    pointHighlightStroke: self.graphDistinctColor(self.graphData().length, i, .5),\n                    data: dataObj.data.map(function (o) {\n                        return o[self.selectedGraphProperty()]\n                    })\n                };\n            data.datasets.push(dataset);\n        }\n        return data;\n    });\n    self.graphDistinctColor = function (max, index, alpha) {\n        var alpha = alpha || 1,\n            rgba = self.hslToRgb((1 / max) * index % 1, 1, .5);\n        rgba.push(alpha);\n        return \"rgba(\" + rgba.join() + \")\";\n    }\n    self.getDistinctColor = function (max, index, alpha) {\n        var alpha = alpha || 1;\n        rgba = self.hslToRgb((1 / max) * index % 1, 1, .5);\n        rgba.push(alpha);\n        return rgba;\n    }\n    self.hslToRgb = function(h, s, l) {\n        var r, g, b;\n        if (s == 0) {\n            r = g = b = l; // achromatic\n        }\n        else {\n            var hue2rgb = function hue2rgb(p, q, t) {\n                if (t < 0) t += 1;\n                if (t > 1) t -= 1;\n                if (t < 1 / 6) return p + (q - p) * 6 * t;\n                if (t < 1 / 2) return q;\n                if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n                return p;\n            }\n\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            var p = 2 * l - q;\n            r = hue2rgb(p, q, h + 1 / 3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1 / 3);\n        }\n\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n    \n    self.showGraphItemBuildRows = ko.observable(false);\n    self.showGraphSkillBuildColumns = ko.observable(false);\n    self.graphRowHasItems = function (index) {\n        return self.graphData().some(function (dataset) {\n            return dataset.visible() && dataset.data[index].items.length > 0;\n        });\n    }\n\n    self.selectInventory = function (index) {\n        self.parent.selectedInventory(self.parent.selectedInventory() == index ? -1 : index);\n    }\n    self.getSelectedInventory = ko.pureComputed(function () {\n        if (self.parent.selectedInventory() == -1) {\n            return self.parent.inventory;\n        }\n        else {\n            return self.itemBuild()[self.parent.selectedInventory()];\n        }\n    });\n    self.copyInventory = function (index) {\n        if (self.parent.selectedInventory() != -1 && self.parent.selectedInventory() != index) {\n            self.itemBuild()[self.parent.selectedInventory()].items(self.itemBuild()[self.parent.selectedInventory()].items().concat(self.itemBuild()[index].items()));\n            self.itemBuild()[self.parent.selectedInventory()].activeItems(union(self.itemBuild()[self.parent.selectedInventory()].activeItems(), self.itemBuild()[index].activeItems()));\n        }\n    }\n    self.copyInventoryToClipBoard = function (index) {\n        if (index == -1) {\n            inventoryClipBoard.items = self.parent.inventory.items.slice(0);\n            inventoryClipBoard.activeItems = self.parent.inventory.activeItems.slice(0);            \n        }\n        else {\n            inventoryClipBoard.items = self.itemBuild()[index].items.slice(0);\n            inventoryClipBoard.activeItems = self.itemBuild()[index].activeItems.slice(0);\n        }\n    }\n    self.pasteInventoryFromClipBoard = function (index) {\n        if (inventoryClipBoard.items.length > 0) {\n            if (index == -1) {\n                self.parent.inventory.items(self.parent.inventory.items().concat(inventoryClipBoard.items));\n                self.parent.inventory.activeItems(union(self.parent.inventory.activeItems(), inventoryClipBoard.activeItems));    \n            }\n            else {\n                self.itemBuild()[index].items(self.itemBuild()[index].items().concat(inventoryClipBoard.items));\n                self.itemBuild()[index].activeItems(union(self.itemBuild()[index].activeItems(), inventoryClipBoard.activeItems));\n            }\n        }\n    }\n    self.loadGraphData = function (data) {\n        self.parent.sectionDisplay()['skillbuild'](true);\n        for (var i = 0; i < data.length; i++) {\n            data[i].visible = ko.observable(data[i].visible);\n        }\n        self.graphData(data);\n    }\n    self.graphChartContext = ko.observable();\n    self.exportImage = function () {\n        var w = window.open();\n        w.document.write('<img src=\"'+ self.graphChartContext().canvas.toDataURL() +'\"/>');\n    }\n    return self;\n}\n\nmodule.exports = BuildExplorerViewModel;",
    "\"use strict\";\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar HeroCalc = require(\"../herocalc/main\");\nvar DamageAmpViewModel = require(\"./DamageAmpViewModel\");\nvar HeroDamageAmpMixin = require(\"./HeroDamageAmpMixin\");\n\nvar CloneViewModel = function (heroData, itemData, unitData, h, p) {\n    var self = this;\n    HeroCalc.CloneModel.call(this, heroData, itemData, h, p);\n    self.bound = ko.observable(false);\n    self.inventory = p.inventory;\n    self.selectedHeroLevel = p.selectedHeroLevel;\n    self.sectionDisplay = ko.observable({\n        'inventory': ko.observable(true),\n        'ability': ko.observable(true),\n        'buff': ko.observable(true),\n        'debuff': ko.observable(true),\n        'damageamp': ko.observable(false),\n        'illusion': ko.observable(false),\n        'skillbuild': ko.observable(false),\n        'skillbuild-skills': ko.observable(true),\n        'skillbuild-items': ko.observable(true)\n    });\n    self.sectionDisplayToggle = function (section) {\n        self.sectionDisplay()[section](!self.sectionDisplay()[section]());\n    }\n    self.showUnitTab = ko.observable(false);\n    self.showDiff = ko.observable(false);\n    self.showCriticalStrikeDetails = ko.observable(false);\n    self.showDamageDetails = ko.observable(false);\n    self.showStatDetails = ko.observable(false);\n    self.showDamageAmpCalcDetails = ko.observable(false);\n    \n    self.damageAmplification = new DamageAmpViewModel(heroData, itemData, unitData);\n    self.damageReduction = new DamageAmpViewModel(heroData, itemData, unitData);\n    HeroDamageAmpMixin(self);\n}\nCloneViewModel.prototype = Object.create(HeroCalc.CloneModel.prototype);\nCloneViewModel.prototype.constructor = CloneViewModel;\n\nmodule.exports = CloneViewModel;",
    "'use strict';\nvar ko = require('./herocalc_knockout');\n\nvar BuffViewModel = require(\"../herocalc/BuffViewModel\");\nvar BuffModel = require(\"../herocalc/buffs/BuffModel\");\nvar findWhere = require(\"../herocalc/util/findWhere\");\n\nvar DamageAmpViewModel = function (heroData, itemData, unitData, a) {\n    var self = this;\n    BuffViewModel.call(this, itemData, ko.observableArray([]));\n    self.availableBuffs = ko.observableArray([\n        new BuffModel(heroData, unitData, 'slardar', 'slardar_sprint'),\n        new BuffModel(heroData, unitData, 'undying', 'undying_flesh_golem'),\n        new BuffModel(heroData, unitData, 'chen', 'chen_penitence'),\n        new BuffModel(heroData, unitData, 'medusa', 'medusa_stone_gaze'),\n        new BuffModel(heroData, unitData, 'shadow_demon', 'shadow_demon_soul_catcher')\n    ]);\n    self.availableDebuffs = ko.observableArray([\n        new BuffModel(heroData, unitData, 'medusa', 'medusa_mana_shield'),\n        //new BuffModel(heroData, unitData, 'templar_assassin', 'templar_assassin_refraction'),\n        //new BuffModel(heroData, unitData, 'faceless_void', 'faceless_void_backtrack'),\n        //new BuffModel(heroData, unitData, 'nyx_assassin', 'nyx_assassin_spiked_carapace'),\n        new BuffModel(heroData, unitData, 'spectre', 'spectre_dispersion'),\n        new BuffModel(heroData, unitData, 'wisp', 'wisp_overcharge'),\n        new BuffModel(heroData, unitData, 'bristleback', 'bristleback_bristleback'),\n        //new BuffModel(heroData, unitData, 'abaddon', 'abaddon_borrowed_time'),\n        //new BuffModel(heroData, unitData, 'abaddon', 'abaddon_aphotic_shield'),\n        //new BuffModel(heroData, unitData, 'dazzle', 'dazzle_shallow_grave'),\n        //new BuffModel(heroData, unitData, 'treant', 'treant_living_armor'),\n        new BuffModel(heroData, unitData, 'kunkka', 'kunkka_ghostship')\n    ]);\n    self.selectedBuff = ko.observable(self.availableBuffs()[0]);\n    \n    self.buffs = ko.observableArray([]);\n\n    self.getAbilityDamageAmpValue = function (abilityName, attributeName) {\n        var a = findWhere(self.buffs(), {name: abilityName});\n        if (a == undefined) {\n            return 0;\n        }\n        else {\n            var ability = a.data;\n            return self.getAbilityAttributeValue(ability.attributes, attributeName, ability.level());\n        }\n    }\n    \n    self.getDamageMultiplierSources = ko.computed(function () {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self.abilities()[i];\n                if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                    switch (ability.name) {\n                        case 'bristleback_bristleback':\n                            sources[ability.name] = {\n                                'multiplier': ability.damageReduction() / 100,\n                                'damageType': 'physical',\n                                'displayname': ability.displayname\n                            }\n                        break;\n                        case 'slardar_sprint':\n                            sources[ability.name] = {\n                                'multiplier': self.getAbilityAttributeValue(ability.attributes, 'bonus_damage', ability.level()) / 100,\n                                'damageType': 'physical',\n                                'displayname': ability.displayname\n                            }\n                        break;\n                        case 'undying_flesh_golem':\n                            sources[ability.name] = {\n                                'multiplier': ability.damageAmplification() / 100,\n                                'damageType': 'physical',\n                                'displayname': ability.displayname\n                            }\n                        break;\n                        case 'medusa_stone_gaze':\n                            sources[ability.name] = {\n                                'multiplier': self.getAbilityAttributeValue(ability.attributes, 'bonus_physical_damage', ability.level()) / 100,\n                                'damageType': 'physical',\n                                'displayname': ability.displayname\n                            }\n                        break;\n                        case 'chen_penitence':\n                            sources[ability.name] = {\n                                'multiplier': self.getAbilityAttributeValue(ability.attributes, 'bonus_damage_taken', ability.level()) / 100,\n                                'damageType': 'physical',\n                                'displayname': ability.displayname\n                            }\n                        break;\n                        case 'shadow_demon_soul_catcher':\n                            sources[ability.name] = {\n                                'multiplier': self.getAbilityAttributeValue(ability.attributes, 'bonus_damage_taken', ability.level()) / 100,\n                                'damageType': 'pure',\n                                'displayname': ability.displayname\n                            }\n                        break;\n                        case 'medusa_mana_shield':\n                            sources[ability.name] = {\n                                'multiplier': ability.damageReduction() / 100,\n                                'damageType': 'physical',\n                                'displayname': ability.displayname\n                            }                            \n                        break;\n                        case 'spectre_dispersion':\n                            sources[ability.name] = {\n                                'multiplier': -self.getAbilityAttributeValue(ability.attributes, 'damage_reflection_pct', ability.level()) / 100,\n                                'damageType': 'percentreduction',\n                                'displayname': ability.displayname\n                            }                                \n                        break;\n                        case 'abaddon_aphotic_shield':\n                            sources[ability.name] = {\n                                'multiplier': self.getAbilityAttributeValue(ability.attributes, 'damage_absorb', ability.level()),\n                                'damageType': 'flatreduction',\n                                'displayname': ability.displayname\n                            }                                \n                        break;\n                        case 'kunkka_ghostship':\n                            sources[ability.name] = {\n                                'multiplier': -50 / 100,\n                                'damageType': 'percentreduction',\n                                'displayname': ability.displayname\n                            }                                \n                        break;\n                        case 'wisp_overcharge':\n                            sources[ability.name] = {\n                                'multiplier': self.getAbilityAttributeValue(ability.attributes, 'bonus_damage_pct', ability.level()) / 100,\n                                'damageType': 'percentreduction',\n                                'displayname': ability.displayname\n                            }                                \n                        break;\n                        /*case 'faceless_void_backtrack':\n                            sources[ability.name] = {\n                                'multiplier': -self.getAbilityAttributeValue(ability.attributes, 'dodge_chance_pct', ability.level()) / 100,\n                                'damageType': 'percentreduction',\n                                'displayname': ability.displayname\n                            }                                \n                        break;*/\n                    }\n                }\n        }\n        return sources;\n    });\n    \n    return self;\n}\nDamageAmpViewModel.prototype = Object.create(BuffViewModel.prototype);\nDamageAmpViewModel.prototype.constructor = DamageAmpViewModel;\n\nmodule.exports = DamageAmpViewModel;",
    "'use strict';\nvar ko = require('./herocalc_knockout');\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nrequire('./jquery-ui.custom');\n\nko.components.register('hero-pane', { template: \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-3 col-sm-6\\\">\\n        <img class=\\\"img-rounded hero-image\\\" data-bind=\\\"attr:{src: '/media/images/heroes/' + selectedHero().heroName + '.png'}\\\"/>\\n    </div>\\n    <div class=\\\"col-md-9 col-sm-6\\\">\\n        <div class=\\\"row form-group\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <label for=\\\"heroselect\\\">Hero</label>\\n                <select id=\\\"heroselect\\\" class=\\\"form-control\\\" data-bind=\\\"options: availableHeroes , optionsText: 'heroDisplayName', value: selectedHero\\\"></select>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <label for=\\\"herolevel\\\">Level</label>\\n                <input id=\\\"herolevel\\\" data-bind=\\\"spinner: selectedHeroLevel, spinnerOptions: { min: 1, max: 25 }\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <label for=\\\"enemyselect\\\">Enemy</label>\\n                <select id=\\\"enemyselect\\\" class=\\\"form-control\\\" data-bind=\\\"css: enemy().playerColorCss, options: availableEnemies , optionsText: 'heroDisplayName', value: selectedEnemy, optionsAfterRender: setHeroOptionStyling\\\"></select>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <label for=\\\"enemyselect\\\">Compare to</label>\\n                <select id=\\\"enemyselect\\\" class=\\\"form-control\\\" data-bind=\\\"css: heroCompare().playerColorCss, options: availableCompare , optionsText: 'heroDisplayName', value: selectedCompare, optionsAfterRender: setHeroOptionStyling\\\"></select>\\n            </div>\\n            <div class=\\\"col-md-12 checkbox\\\" style=\\\"margin-bottom:0px;padding-left:34px;\\\" data-bind=\\\"visible: $root.layout() == 0\\\">\\n                <label><input type=\\\"checkbox\\\" style=\\\"float:none;margin-right:5px;\\\" data-bind=\\\"checked: showDiff\\\"><span style=\\\"font-size:12px\\\">Show <abbr title=\\\"The difference between two adjacent hero tabs shown next to each stat.\\\">delta values</abbr>. <span data-bind=\\\"visible: showDiff\\\">Comparing level <span data-bind=\\\"text: selectedHeroLevel\\\"></span> <span data-bind=\\\"text: heroData().displayname, css: playerColorCss\\\"></span> to level <span data-bind=\\\"text: heroCompare().selectedHeroLevel\\\"></span> <span data-bind=\\\"text: heroCompare().heroData().displayname, css: heroCompare().playerColorCss\\\"></span>.</span></span></label>\\n                <label style=\\\"margin-left:25px;font-size:12px;\\\"><input type=\\\"checkbox\\\" style=\\\"float:none;margin-right:5px;\\\" data-bind=\\\"checked: showUnitTab\\\">Show unit tab</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\" data-bind=\\\"css: {'col-md-4': $root.layout() == 0, 'col-md-12': $root.layout() == 1}\\\">\\n        <div class=\\\"row\\\">\\n            <h3 class=\\\"col-md-12\\\">Stats <a class=\\\"btn btn-default btn-xs\\\" data-bind=\\\"toggle: showStatDetails, text: !showStatDetails() ? 'Show more' : 'Show less', attr: {title: !showStatDetails() ? 'Click to show base stats' : 'Click to hide base stats'}\\\"></a>\\n                <div style=\\\"margin-left:15px;display:inline;\\\" data-bind=\\\"style: {'display': $root.layout() == 1 ? 'inline' : 'none'}\\\">\\n                    <label><input type=\\\"checkbox\\\" style=\\\"float:none;margin-right:5px;\\\" data-bind=\\\"checked: showDiff\\\"><span style=\\\"font-size:12px\\\">Show <abbr title=\\\"The difference between two adjacent hero tabs shown next to each stat.\\\">delta values</abbr>. <span data-bind=\\\"visible: showDiff\\\">Comparing level <span data-bind=\\\"text: selectedHeroLevel\\\"></span> <span data-bind=\\\"text: heroData().displayname, css: playerColorCss\\\"></span> to level <span data-bind=\\\"text: heroCompare().selectedHeroLevel\\\"></span> <span data-bind=\\\"text: heroCompare().heroData().displayname, css: heroCompare().playerColorCss\\\"></span>.</span></span></label>\\n                    <label style=\\\"margin-left:25px;font-size:12px;\\\"><input type=\\\"checkbox\\\" style=\\\"float:none;margin-right:5px;\\\" data-bind=\\\"checked: showUnitTab\\\">Show unit tab</label>\\n                </div>\\n            </h3>\\n\\n            <div class=\\\"col-md-12\\\" data-bind=\\\"visible: showStatDetails(), css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}, component: {name: 'stats-additional', params: $data}\\\"></div>\\n\\n            <div class=\\\"statscontainer\\\" data-bind=\\\"foreach: $root.allItems\\\">\\n                <div data-bind=\\\"component: { name: $data.value, params: $parentContext.$data}\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-8\\\" data-bind=\\\"css: {'col-md-8': $root.layout() == 0, 'col-md-12': $root.layout() == 1}\\\">\\n        <div data-bind=\\\"component: { name: 'damage-details', params: $data}\\\"></div>\\n    \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\" data-bind=\\\"itemBuildTable: $data.buildExplorer\\\">\\n                <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().inventory, css: { section_disabled: !sectionDisplay().inventory() }\\\">Inventory <small style=\\\"color:goldenrod\\\" data-bind=\\\"html: inventory.totalCost() ? '<img src=\\\\'http://cdn.dota2.com/apps/dota2/images/tooltips/gold.png\\\\'/> ' + inventory.totalCost() : '' \\\"></small></h3>\\n                <div id=\\\"inventory\\\" class=\\\"inventory hover-cursor\\\" data-bind=\\\"click: function (data, event) { buildExplorer.selectInventory(-1); }, css: {'row-highlight': selectedInventory() == -1}, template: { name: 'item-template', foreach: inventory.items }, visible: sectionDisplay().inventory()\\\"></div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().ability, css: { section_disabled: !sectionDisplay().ability() }\\\">Abilities <small style=\\\"color:inherit\\\" data-bind=\\\"text: availableSkillPoints() ? (availableSkillPoints() == 1 ? '1 unspent skillpoint' : availableSkillPoints() + ' unspent skillpoints') : ''\\\"></small></h3>\\n                <div class=\\\"row\\\" data-bind=\\\"visible: sectionDisplay().ability(), foreach: ability().abilities()\\\">\\n                    <div data-bind=\\\"component: { name: 'ability', params: $data }\\\"></div>\\n                </div>\\n                <div class=\\\"form-horizontal\\\" data-bind=\\\"if: selectedHero().heroName == 'silencer', visible: sectionDisplay().ability()\\\">\\n                    <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-2 control-label\\\">\\n                                <label for=\\\"intelligencestolen\\\">Intelligence Stolen</label>\\n                            </div>\\n                            <div class=\\\"col-md-2\\\">\\n                                <input class=\\\"form-control\\\" id=\\\"intelligencestolen\\\" data-bind=\\\"value: intStolen\\\" />\\n                            </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div data-bind=\\\"component: { name: 'talent-section', params: $data}\\\"></div>\\n        \\n        <div data-bind=\\\"component: { name: 'buff-section', params: $data}\\\"></div>\\n        \\n        <div class=\\\"row\\\" data-bind=\\\"component: { name: 'damage-amp', params: $data}\\\"></div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().illusion, css: { section_disabled: !sectionDisplay().illusion() }\\\">Illusions</h3>\\n                <div data-bind=\\\"visible: sectionDisplay().illusion(), lazyBinding: sectionDisplay().illusion\\\">\\n                    <h4 style=\\\"color:red\\\">Under Construction</h4>\\n                    <div class=\\\"form-horizontal\\\">\\n                        <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-md-2 control-label\\\">\\n                                    <label for=\\\"illusionSelect\\\">Type</label>\\n                                </div>\\n                                <div class=\\\"col-md-10\\\">\\n                                    <select id=\\\"illusionSelect\\\" class=\\\"form-control\\\" data-bind=\\\"options: availableIllusions , optionsText: 'illusionDisplayName', value: selectedIllusion\\\"></select>\\n                                </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-md-2 control-label\\\">\\n                                    <label for=\\\"illusionabilitylevel\\\">Ability Level</label>\\n                                </div>\\n                                <div class=\\\"col-md-10\\\">\\n                                    <select id=\\\"illusionabilitylevel\\\" class=\\\"form-control\\\" data-bind=\\\"value: illusionAbilityLevel, foreach: new Array(illusionAbilityMaxLevel())\\\">\\n                                        <option data-bind=\\\"text: $index()+1\\\"></option>\\n                                    </select>\\n                                </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-md-offset-2 col-md-10\\\">\\n                                <button class=\\\"btn btn-default\\\" data-bind=\\\"click: addIllusion\\\">Add Illusion</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"col-md-12\\\">\\n        <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().skillbuild, css: { section_disabled: !sectionDisplay().skillbuild() }\\\">Build Explorer</h3>\\n        <div data-bind=\\\"visible: sectionDisplay().skillbuild(), attr: {id: 'section-build-explorer-' + index() }, lazyBinding: sectionDisplay().skillbuild\\\">\\n            <div class=\\\"section-content\\\">    \\n                <div class=\\\"col-md-12\\\">\\n                    <h4 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay()['skillbuild-skills'], css: { section_disabled: !sectionDisplay()['skillbuild-skills']() }\\\">Skill Build <small style=\\\"color:inherit\\\" data-bind=\\\"text: buildExplorer.availableSkillBuildPoints() ? (buildExplorer.availableSkillBuildPoints() == 1 ? '1 unspent skillpoint' : buildExplorer.availableSkillBuildPoints() + ' unspent skillpoints') : ''\\\"></small></h4>\\n                        <div data-bind=\\\"visible: sectionDisplay()['skillbuild-skills']\\\">\\n                        <table>\\n                            <tbody data-bind=\\\"template: { name: 'ability-3-template', foreach: ability().abilities() }\\\"></tbody>\\n                        </table>\\n                        <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-default\\\" data-bind=\\\"click: buildExplorer.resetSkillBuild\\\">Clear</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-12\\\">\\n                    <h4 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay()['skillbuild-items'], css: { section_disabled: !sectionDisplay()['skillbuild-items']() }\\\">Item Build</h4>\\n                    <div data-bind=\\\"visible: sectionDisplay()['skillbuild-items']\\\">\\n                        <table class=\\\"table\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Level</th>\\n                                    <th class=\\\"text-center\\\">Inventory</th>\\n                                    <th></th>\\n                                    <th></th>\\n                                    <th></th>\\n                                </tr>\\n                            </thead>\\n                            <tbody data-bind=\\\"foreach: new Array(25), itemBuildTable: buildExplorer\\\">\\n                                <tr class=\\\"hover-cursor\\\" data-bind=\\\"css: {'row-highlight': $parent.selectedInventory() == $index()}\\\">\\n                                    <td class=\\\"carry-over\\\" data-bind=\\\"click: function (data, event) { $parent.buildExplorer.selectInventory($index()); }\\\">\\n                                        <strong data-bind=\\\"text: ($index() + 1)\\\"></strong>\\n                                        <a class=\\\"btn btn-default btn-xs glyphicon\\\" data-bind=\\\"visible: $index() > 0, toggle: $parent.buildExplorer.itemBuild()[$index()].carryOver, preventBubble: 'click', css: { 'glyphicon-arrow-down': $parent.buildExplorer.itemBuild()[$index()].carryOver(), 'glyphicon-stop': !$parent.buildExplorer.itemBuild()[$index()].carryOver() }\\\" title=\\\"Carry over items to next level's inventory\\\"></a>\\n                                    </td>\\n                                    <td class=\\\"col-md-10\\\" data-bind=\\\"click: function (data, event) { $parent.buildExplorer.selectInventory($index()); }\\\">\\n                                        <div class=\\\"itemBuild-inventory\\\" data-bind=\\\"template: { name: 'itemBuild-item-template', foreach: $parent.buildExplorer.itemBuild()[$index()].items }\\\"></div>\\n                                    </td>\\n                                    <td>\\n                                        <a class=\\\"btn btn-default btn-xs\\\" data-bind=\\\"click: function (data, event) { $parent.buildExplorer.copyInventoryToClipBoard($index()); }\\\" title=\\\"Copy items\\\">Copy</a>\\n                                    </td>\\n                                    <td>\\n                                        <a class=\\\"btn btn-default btn-xs\\\" data-bind=\\\"click: function (data, event) { $parent.buildExplorer.pasteInventoryFromClipBoard($index()); }\\\" title=\\\"Paste items\\\">Paste</a>\\n                                    </td>\\n                                    <td>\\n                                        <a class=\\\"btn btn-default btn-xs\\\" data-bind=\\\"click: function (data, event) { $parent.buildExplorer.resetItemBuild($index()); }\\\" title=\\\"Clear inventory\\\">Clear</a>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-default\\\" data-bind=\\\"click: buildExplorer.resetAllItemBuilds\\\">Clear</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Data set header label</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" data-bind=\\\"value: buildExplorer.graphDataHeader\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Data set description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" data-bind=\\\"value: buildExplorer.graphDataDescription\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-default\\\" data-bind=\\\"click: buildExplorer.graph\\\">Add data set</button>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Hero Property</label>\\n                    <select class=\\\"form-control\\\" data-bind=\\\"options: buildExplorer.graphProperties, optionsText: 'label', optionsValue: 'id', value: buildExplorer.selectedGraphProperty\\\"></select>\\n                </div>\\n                <!-- ko if: buildExplorer.graphData().length > 0 -->\\n                <div class=\\\"form-group\\\" data-bind=\\\"chart: buildExplorer.graphChartData, chartType: 'Scatter', chartOptions: buildExplorer.graphChartOptions(), chartContext: buildExplorer.graphChartContext\\\"></div>\\n                <div class=\\\"form-group\\\">\\n                  <button class=\\\"btn btn-default\\\" data-bind=\\\"click: buildExplorer.exportImage\\\"><span class=\\\"glyphicon glyphicon-export\\\"></span> Export Image</button>\\n                </div>\\n                <button class=\\\"btn btn-default btn-xs\\\" data-bind=\\\"toggle: buildExplorer.showGraphItemBuildRows, css: {'toggled': buildExplorer.showGraphItemBuildRows}\\\">Show item build rows</button>\\n                <button class=\\\"btn btn-default btn-xs\\\" data-bind=\\\"toggle: buildExplorer.showGraphSkillBuildColumns, css: {'toggled': buildExplorer.showGraphSkillBuildColumns}\\\">Show skill build columns</button>\\n                <table class=\\\"table build-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th class=\\\"right-border\\\">Level</th>\\n                            <!-- ko foreach: buildExplorer.graphData -->\\n                            <th class=\\\"text-center\\\" data-bind=\\\"css: { 'right-border': !$parent.buildExplorer.showGraphSkillBuildColumns() || !$data.visible() }\\\">\\n                                <span data-bind=\\\"css: { 'tooltip-underline': $data.description }, tooltip: {title: $data.description, placement: 'bottom'}, visible: $data.visible(), text: $data.header, style: { color: $parent.buildExplorer.graphDistinctColor($parent.buildExplorer.graphData().length, $index(), 1) }\\\"></span>\\n                                <span class=\\\"btn btn-xs glyphicon glyphicon-info-sign\\\" data-bind=\\\"visible: $data.visible(), popover: {template: 'popover-graphData-template', data: $data, options: {} }\\\"></span>\\n                                <button class=\\\"btn btn-default btn-xs shop-button glyphicon glyphicon-remove pull-right\\\" class=\\\"close\\\" data-bind=\\\"visible: !$parent.buildExplorer.showGraphSkillBuildColumns() || !$data.visible(), click: function(data, event) { $parent.buildExplorer.removeGraphDataSet($data); }\\\"></button>\\n                                <button class=\\\"btn btn-default btn-xs shop-button glyphicon pull-right\\\" data-bind=\\\"visible: !$parent.buildExplorer.showGraphSkillBuildColumns() || !$data.visible(), toggle: $data.visible, css: { 'glyphicon-minus': $data.visible(), 'glyphicon-plus': !$data.visible()}\\\"></button>\\n                            </th>\\n                            <th class=\\\"text-left right-border\\\" data-bind=\\\"visible: $data.visible() && $parent.buildExplorer.showGraphSkillBuildColumns()\\\"><abbr title=\\\"Q-W-E-R-Stats\\\">Skill Build</abbr>\\n                                <button class=\\\"btn btn-default btn-xs shop-button glyphicon glyphicon-remove pull-right\\\" class=\\\"close\\\" data-bind=\\\"visible: $parent.buildExplorer.showGraphSkillBuildColumns(), click: function(data, event) { $parent.buildExplorer.removeGraphDataSet($data); }\\\"></button>\\n                                <button class=\\\"btn btn-default btn-xs shop-button glyphicon pull-right\\\" data-bind=\\\"visible: $parent.buildExplorer.showGraphSkillBuildColumns(), toggle: $data.visible, css: { 'glyphicon-minus': $data.visible(), 'glyphicon-plus': !$data.visible()}\\\"></button>\\n                            </th>\\n                            <!-- /ko -->\\n                        </tr>\\n                    </thead>\\n                    <tbody data-bind=\\\"foreach: new Array(buildExplorer.graphData()[0].data.length)\\\">\\n                        <tr>\\n                            <td class=\\\"right-border\\\">\\n                                <strong data-bind=\\\"text: ($index() + 1)\\\"></strong>\\n                            </td>\\n                            <!-- ko foreach: new Array($parent.buildExplorer.graphData().length) -->\\n                            <td class=\\\"text-right\\\" data-bind=\\\"css: { 'right-border': !$parents[1].buildExplorer.showGraphSkillBuildColumns() || !$parents[1].buildExplorer.graphData()[$index()].visible() }\\\">\\n                                <span data-bind=\\\"visible: $parents[1].buildExplorer.graphData()[$index()].visible(), text: $parents[1].buildExplorer.graphData()[$index()].data[$parentContext.$index()][$parents[1].buildExplorer.selectedGraphProperty()]\\\"></span>\\n                            </td>\\n                            <td class=\\\"text-left right-border\\\" data-bind=\\\"visible: $parents[1].buildExplorer.graphData()[$index()].visible() && $parents[1].buildExplorer.showGraphSkillBuildColumns(), text: $parents[1].buildExplorer.graphData()[$index()].cumulativeSkillBuild[$parentContext.$index()].join('-')\\\"></td>\\n                            <!-- /ko -->\\n                        </tr>\\n                        <tr class=\\\"itemBuild-inventory\\\" data-bind=\\\"visible: $parent.buildExplorer.showGraphItemBuildRows() && $parent.buildExplorer.graphRowHasItems($index())\\\">\\n                            <td class=\\\"right-border-itemrow no-top-border\\\"></td>\\n                            <!-- ko foreach: new Array($parent.buildExplorer.graphData().length) -->\\n                            <td class=\\\"right-border-itemrow no-top-border\\\" data-bind=\\\"attr: { colspan: $parents[1].buildExplorer.graphData()[$index()].visible() && $parents[1].buildExplorer.showGraphSkillBuildColumns() ? 2 : 1 }\\\">\\n                                <div data-bind=\\\"visible: $parents[1].buildExplorer.graphData()[$index()].visible(), foreach: $parents[1].buildExplorer.graphData()[$index()].data[$parentContext.$index()].items\\\">\\n                                    <img class=\\\"itemBuild-img-sm img-rounded\\\" data-bind=\\\"css: { item_disabled: !enabled, item_active: $parents[2].inventory.getActiveBorder($data) == 1, item_inactive: $parents[2].inventory.getActiveBorder($data) == 0 }, attr:{ src: $parents[2].inventory.getItemImage($data) }\\\"/>\\n                                    <div style=\\\"float:left\\\" data-bind=\\\"visible: $parents[2].inventory.getItemSizeLabel($data) != ''\\\">\\n                                        <div data-bind=\\\"html: $parents[2].inventory.getItemSizeLabel($data)\\\" style=\\\"position:absolute;left:0;bottom:0;color:white;opacity:.5;background-color:black;padding:0px 2px\\\"></div>\\n                                        <div data-bind=\\\"html: $parents[2].inventory.getItemSizeLabel($data)\\\" style=\\\"position:absolute;left:0;bottom:0;color:white;padding:0px 2px\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </td>\\n                            <!-- /ko -->\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                <!-- /ko -->\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\" });\nko.components.register('unit-pane', { template: \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n        <img class=\\\"img-rounded\\\" data-bind=\\\"attr:{src: selectedUnit().image}\\\"/>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n        <label for=\\\"unitselect\\\">Unit</label>\\n        <select id=\\\"unitselect\\\" class=\\\"form-control\\\" data-bind=\\\"options: availableUnits , optionsText: 'heroDisplayName', value: selectedUnit\\\"></select>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n        <label for=\\\"unitlevel\\\">Level</label>\\n        <p class=\\\"form-control-static\\\" data-bind=\\\"visible: selectedUnit().levels == 0, text: heroData().level\\\"></p>\\n        <select id=\\\"herolevel\\\" class=\\\"form-control\\\" data-bind=\\\"visible: selectedUnit().levels > 0, value: selectedUnitLevel, foreach: new Array(selectedUnit().levels)\\\">\\n            <option data-bind=\\\"text: $index()+1\\\"></option>\\n        </select>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\" data-bind=\\\"css: {'col-md-4': $root.layout() == 0, 'col-md-12': $root.layout() == 1}\\\">\\n        <div class=\\\"row\\\">\\n            <h3 class=\\\"col-md-12\\\">Stats <a class=\\\"btn btn-default btn-xs\\\" data-bind=\\\"toggle: showStatDetails, text: !showStatDetails() ? 'Show more' : 'Show less', attr: {title: !showStatDetails() ? 'Click to show base stats' : 'Click to hide base stats'}\\\"></a></h3>\\n\\n            <div class=\\\"col-md-3\\\" data-bind=\\\"visible: showStatDetails(), component: {name: 'stats-additional', params: $data}\\\"></div>\\n            \\n            <div class=\\\"col-md-12\\\" data-bind=\\\"css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}\\\">\\n                <table class=\\\"table table-condensed\\\">\\n                <tbody>\\n                <tr><td>Gold:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().bountygoldmin == heroData().bountygoldmax ? heroData().bountygoldmax : heroData().bountygoldmin + '-' + heroData().bountygoldmax\\\"></span></td></tr>\\n                <tr><td>Experience:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().bountyxp\\\"></span></td></tr>\\n                <tr><td>Level:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().level\\\"></span></td></tr>\\n                <tr><td><abbr title=\\\"Movement Speed\\\">MS</abbr>:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: totalMovementSpeed\\\"></span></td></tr>\\n                <tr><td>Turn Rate:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: totalTurnRate\\\"></span></td></tr>\\n                <tr><td>Sight Range:</td><td class=\\\"text-right\\\"><span data-bind=\\\"html: '<abbr title=\\\\'Day\\\\'>' + visionrangeday() + '</abbr>/<abbr title=\\\\'Night\\\\'>' + visionrangenight() + '</abbr>'\\\"></span></td></tr>\\n                </tbody>\\n                </table>\\n            </div>\\n\\n\\n            <div class=\\\"col-md-12\\\" data-bind=\\\"css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}\\\">\\n                <table class=\\\"table table-condensed\\\">\\n                <tbody>\\n                <tr><td>Health:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: health\\\"></span></td></tr>\\n                <tr><td>Health Regen:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: healthregen\\\"></span></td></tr>\\n                <tr><td>Mana:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: mana\\\"></span></td></tr>\\n                <tr><td>Mana Regen:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: manaregen\\\"></span></td></tr>\\n                <tr><td>Physical <abbr title=\\\"Effective Hit Points\\\">EHP</abbr>:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: ehpPhysical\\\"></span></td></tr>\\n                <tr><td>Magical <abbr title=\\\"Effective Hit Points\\\">EHP</abbr>:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: ehpMagical\\\"></span></td></tr>\\n                </tbody>\\n                </table>\\n            </div>\\n\\n            <div class=\\\"col-md-12\\\" data-bind=\\\"css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}\\\">\\n                <table class=\\\"table table-condensed\\\">\\n                <tbody>\\n                <tr><td>Armor:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: totalArmorPhysical\\\"></span></td></tr>\\n                <tr><td>Magic Res:</td><td class=\\\"text-right\\\"><span data-bind=\\\"html: totalMagicResistance().toFixed(2) + '%'\\\"></span></td></tr>\\n                <tr><td>Lifesteal:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: lifesteal\\\"></span></td></tr>\\n                <tr><td>Evasion:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: evasion\\\"></span></td></tr>\\n                <tr><td>Bash:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: bash\\\"></span></td></tr>\\n                <tr><td>Miss Chance:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: missChance\\\"></span></td></tr>\\n                </tbody>\\n                <tbody class=\\\"tabledropdown\\\" style=\\\"border-top:0\\\" data-bind=\\\"visible: showCriticalStrikeDetails(),foreach: critInfo().sources\\\">\\n                <tr><td colspan=2><strong data-bind=\\\"text: $data.name\\\"></strong></td></tr>\\n                <tr><td>Crit Chance:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: ($data.totalchance * 100).toFixed(2) + '%'\\\"></span></td></tr>\\n                <tr><td>Crit Multiplier:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: ($data.multiplier * 100).toFixed(2) + '%'\\\"></span></td></tr>\\n                </tbody>\\n                </table>\\n            </div>\\n\\n            <div class=\\\"col-md-12\\\" data-bind=\\\"css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}\\\">\\n                <table class=\\\"table table-condensed\\\">\\n                <tbody>\\n                <tr>\\n                    <td>Damage:</td>\\n                    <td class=\\\"text-right\\\">\\n                        <span data-bind=\\\"html: baseDamage()[0] + '-' + baseDamage()[1]\\\"></span>\\n                        <span style=\\\"color:green\\\" data-bind=\\\"visible: bonusDamage() > 0, text: ' + ' + bonusDamage()\\\"></span>\\n                        <span style=\\\"color:red\\\" data-bind=\\\"visible: bonusDamageReduction() != 0, text: ' - ' + bonusDamageReduction()\\\"></span>\\n                    </td>\\n                </tr>\\n                <tr><td><abbr title=\\\"Increased Attack Speed\\\">IAS</abbr>:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: ias\\\"></span></td></tr>\\n                <tr><td><abbr title=\\\"Base Attack Time\\\">BAT</abbr>:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: bat\\\"></span></td></tr>\\n                <tr><td>Attack Time:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: attackTime\\\"></span></td></tr>\\n                <tr><td>Attack / Sec:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: attacksPerSecond().toFixed(2)\\\"></span></td></tr>\\n                <tr><td>Attack Range:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: totalattackrange\\\"></span></td></tr>\\n                </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-8\\\" data-bind=\\\"css: {'col-md-8': $root.layout() == 0, 'col-md-12': $root.layout() == 1}\\\">\\n        <div data-bind=\\\"component: { name: 'damage-details', params: $data}\\\"></div>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().inventory, css: { section_disabled: !sectionDisplay().inventory() }\\\">Inventory <small style=\\\"color:goldenrod\\\" data-bind=\\\"html: inventory.totalCost() ? '<img src=\\\\'http://cdn.dota2.com/apps/dota2/images/tooltips/gold.png\\\\'/> ' + inventory.totalCost() : '' \\\"></small></h3>\\n                <div id=\\\"inventory\\\" class=\\\"inventory hover-cursor row-highlight\\\" data-bind=\\\"template: { name: 'item-template', foreach: inventory.items }, visible: sectionDisplay().inventory()\\\"></div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().ability, css: { section_disabled: !sectionDisplay().ability() }\\\">Abilities</h3>\\n                <div class=\\\"row\\\" data-bind=\\\"visible: sectionDisplay().ability(), foreach: ability().abilities()\\\">\\n                    <div data-bind=\\\"component: { name: 'ability', params: $data }\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div data-bind=\\\"component: { name: 'buff-section', params: $data}\\\"></div>\\n    </div>\\n</div>\" });\nko.components.register('clone-pane', { template: \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n        <img class=\\\"img-rounded\\\" data-bind=\\\"attr:{src: '/media/images/heroes/meepo.png'}\\\"/>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\" data-bind=\\\"css: {'col-md-4': $root.layout() == 0, 'col-md-12': $root.layout() == 1}\\\">\\n        <div class=\\\"row\\\">\\n            <h3 class=\\\"col-md-12\\\">Stats <a class=\\\"btn btn-default btn-xs\\\" data-bind=\\\"toggle: showStatDetails, text: !showStatDetails() ? 'Show more' : 'Show less', attr: {title: !showStatDetails() ? 'Click to show base stats' : 'Click to hide base stats'}\\\"></a></h3>\\n\\n            <div class=\\\"col-md-12\\\" data-bind=\\\"visible: showStatDetails(), css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}, component: {name: 'stats-additional', params: $data}\\\"></div>\\n\\n            <div class=\\\"statscontainer\\\" data-bind=\\\"foreach: $root.allItems\\\">\\n                <div data-bind=\\\"component: { name: $data.value, params: $root.heroes[$parentContext.$index()].clone()}\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-8\\\" data-bind=\\\"css: {'col-md-8': $root.layout() == 0, 'col-md-12': $root.layout() == 1}\\\">\\n        <div data-bind=\\\"component: { name: 'damage-details', params: $data}\\\"></div>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().inventory, css: { section_disabled: !sectionDisplay().inventory() }\\\">Inventory <small style=\\\"color:goldenrod\\\" data-bind=\\\"html: inventory.totalCost() ? '<img src=\\\\'http://cdn.dota2.com/apps/dota2/images/tooltips/gold.png\\\\'/> ' + inventory.totalCost() : '' \\\"></small></h3>\\n                <div id=\\\"inventory\\\" class=\\\"inventory hover-cursor row-highlight\\\" data-bind=\\\"template: { name: 'item-template', foreach: inventory.items }, visible: sectionDisplay().inventory()\\\"></div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" data-bind=\\\"component: { name: 'damage-amp', params: $data}\\\"></div>\\n    </div>\\n</div>\" });\nko.components.register('illusion-pane', { template: \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n        <div class=\\\"img-rounded\\\" style=\\\"background-color:#428bca;display:inline-block\\\">\\n            <img class=\\\"img-rounded\\\" style=\\\"opacity:.5\\\" data-bind=\\\"attr:{src: '/media/images/heroes/' + selectedHero().heroName + '.png'}\\\"/>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n        <label for=\\\"illusionlevel\\\" data-bind=\\\"text: illusionDisplayName\\\"></label>\\n        <table class=\\\"table\\\">\\n            <tbody>\\n            <tr>\\n                <td>Damage Dealt</td>\\n                <td class=\\\"text-right\\\" data-bind=\\\"text: (getOutgoingDamageMultiplier(illusionType(), false, heroData().attacktype)*100).toFixed(0)+'%'\\\"></td>\\n            </tr>\\n            <tr>\\n                <td>Damage Taken</td>\\n                <td class=\\\"text-right\\\" data-bind=\\\"text: (getIncomingDamageMultiplier(illusionType(), false, heroData().attacktype)*100).toFixed(0)+'%'\\\"></td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n        <div data-bind=\\\"visible: illusionType() != 'item_manta'\\\">\\n            <label for=\\\"illusionlevel\\\">Ability Level</label>\\n            <select id=\\\"illusionlevel\\\" class=\\\"form-control\\\" data-bind=\\\"value: illusionAbilityLevel, foreach: new Array(illusionAbilityMaxLevel())\\\">\\n                <option data-bind=\\\"text: $index()+1\\\"></option>\\n            </select>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\" data-bind=\\\"css: {'col-md-4': $root.layout() == 0, 'col-md-12': $root.layout() == 1}\\\">\\n        <div class=\\\"row\\\">\\n            <h3 class=\\\"col-md-12\\\">Stats <a class=\\\"btn btn-default btn-xs\\\" data-bind=\\\"toggle: showStatDetails, text: !showStatDetails() ? 'Show more' : 'Show less', attr: {title: !showStatDetails() ? 'Click to show base stats' : 'Click to hide base stats'}\\\"></a></h3>\\n\\n            <div class=\\\"col-md-12\\\" data-bind=\\\"visible: showStatDetails(), css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}, component: {name: 'stats-additional', params: $data}\\\">\\n            </div>\\n            <div class=\\\"statscontainer\\\" data-bind=\\\"foreach: $root.allItems\\\">\\n                <div data-bind=\\\"component: { name: $data.value, params: $parentContext.$data}\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-8\\\" data-bind=\\\"css: {'col-md-4': $root.layout() == 0, 'col-md-12': $root.layout() == 1}\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().inventory, css: { section_disabled: !sectionDisplay().inventory() }\\\">Inventory <small style=\\\"color:goldenrod\\\" data-bind=\\\"html: inventory.totalCost() ? '<img src=\\\\'http://cdn.dota2.com/apps/dota2/images/tooltips/gold.png\\\\'/> ' + inventory.totalCost() : '' \\\"></small></h3>\\n                <div id=\\\"inventory\\\" class=\\\"inventory hover-cursor\\\" data-bind=\\\"click: function (data, event) { buildExplorer.selectInventory(-1); }, css: {'row-highlight': selectedInventory() == -1}, foreach: inventory.items, visible: sectionDisplay().inventory()\\\">\\n                    <div class=\\\"btn-group\\\">\\n                        <img style=\\\"width:75px;\\\" class=\\\"img-rounded\\\" data-bind=\\\"css: { item_disabled: !enabled(), item_active: $parent.inventory.getActiveBorder($data) == 1, item_inactive: $parent.inventory.getActiveBorder($data) == 0 }, attr:{ src: $parent.inventory.getItemImage($data) }, click: function(data, event) { $parent.inventory.toggleItem($index, data, event); }, event: { dblclick: $parent.inventory.removeItem }\\\"/>\\n                        <div style=\\\"float:left\\\" data-bind=\\\"visible: $parent.inventory.getItemSizeLabel($data) != ''\\\">\\n                            <div data-bind=\\\"html: $parent.inventory.getItemSizeLabel($data)\\\" style=\\\"position:absolute;left:0;bottom:0;color:white;opacity:.5;background-color:black;padding:0px 2px\\\"></div>\\n                            <div data-bind=\\\"html: $parent.inventory.getItemSizeLabel($data)\\\" style=\\\"position:absolute;left:0;bottom:0;color:white;padding:0px 2px\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\" });\nko.components.register('buff-settings', { template: \"<div class=\\\"form-horizontal\\\">\\n    <div data-bind=\\\"foreach: data\\\">\\n        <div class=\\\"form-group\\\" data-bind=\\\"visible: (display == undefined || display == 'buff')\\\">\\n            <label class=\\\"col-md-6 control-label\\\" data-bind=\\\"css: {'checkbox-label': controlType == 'checkbox'}, attr: {'for': labelName}, html: labelName\\\"></label>\\n            <div data-bind=\\\"if: controlType == 'input' && (display == undefined || display == 'buff' || display == 'hidden')\\\">\\n                <div class=\\\"col-md-6\\\"><input class=\\\"form-control\\\" data-bind=\\\"attr: {'id': labelName}, value: controlVal\\\"></div>\\n            </div>\\n            <div data-bind=\\\"if: controlType == 'checkbox' && (display == undefined || display == 'buff' || display == 'hidden')\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"checkbox\\\">\\n                        <input type=\\\"checkbox\\\" data-bind=\\\"attr: {'id': labelName}, checked: controlVal\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-bind=\\\"if: (controlType == 'text' || controlType == 'method') && (display == undefined || display == 'buff' || display == 'hidden')\\\">\\n                <div class=\\\"col-md-6\\\"><p class=\\\"form-control-static\\\" data-bind=\\\"html: controlVal\\\"></p></div>\\n            </div>\\n            <div data-bind=\\\"if: controlType == 'radio' && (display == undefined || display == 'buff' || display == 'hidden')\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <!-- ko foreach: controlOptions -->\\n                    <div class=\\\"radio\\\">\\n                        <label>\\n                            <input type=\\\"radio\\\" data-bind=\\\"attr: {'id': $parent.labelName + value, value: value}, checked: $parent.controlVal\\\">\\n                            <span data-bind=\\\"text: text\\\"></span>\\n                        </label>\\n                    </div>\\n                    <!-- /ko -->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\" });\nko.components.register('talent-section', { template: \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().talent, css: { section_disabled: !sectionDisplay().talent() }\\\">Talents</h3>\\n        <div class=\\\"row\\\" data-bind=\\\"foreach: heroData().talents, visible: sectionDisplay().talent()\\\">\\n            <div class=\\\"talent col-xs-12\\\">\\n                <label class=\\\"talent-level\\\" data-bind=\\\"text: 'Level ' + ($index() * 5 + 10) + ':'\\\"></label><div class=\\\"talent-1 btn btn-default btn-sm\\\" data-bind=\\\"text: $data[0].displayname, click: function () { $parent.toggleTalent($index(), 0) }, css: {'toggled': $parent.talents[$index()]() == 0}\\\"></div><div class=\\\"talent-2 btn btn-default btn-sm\\\" data-bind=\\\"text: $data[1].displayname, click: function () { $parent.toggleTalent($index(), 1) }, css: {'toggled': $parent.talents[$index()]() == 1}\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\" });\nko.components.register('item-buff', { template: \"<div class=\\\"btn-group\\\">\\n    <img style=\\\"width:75px;\\\" class=\\\"img-rounded\\\" data-bind=\\\"css: { item_disabled: !enabled(), item_active: $parents[1].buffs.itemBuffs.getActiveBorder($data) == 1, item_inactive: $parents[1].buffs.itemBuffs.getActiveBorder($data) == 0 }, attr:{ src: $parents[1].buffs.itemBuffs.getItemImage($data) }, click: function(data, event) { $parents[1].buffs.itemBuffs.toggleItem($index, data, event); }, event: { dblclick: $parents[1].buffs.itemBuffs.removeItem }\\\"/>\\n    <div class=\\\"btn-group-vertical\\\">\\n        <button style=\\\"padding:3px 10px;\\\" class=\\\"btn btn-default btn-xs\\\" title=\\\"Remove Item\\\" data-bind=\\\"click: $parents[1].buffs.itemBuffs.removeItem\\\">&times;</button>\\n        <button style=\\\"padding:3px 10px;\\\" class=\\\"btn btn-default btn-xs\\\" title=\\\"Disable/Enable Item\\\" data-bind=\\\"click: $parents[1].buffs.itemBuffs.toggleMuteItem, html: enabled() ? 'o' : '-', attr: {title: enabled() ? 'Disable Item' : 'Enable Item'}\\\">o</button>\\n    </div>\\n</div>\" });\nko.components.register('item-debuff', { template: \"<div class=\\\"btn-group\\\">\\n    <img style=\\\"width:75px;\\\" class=\\\"img-rounded\\\" data-bind=\\\"css: { item_disabled: !enabled(), item_active: $parents[1].debuffs.itemBuffs.getActiveBorder($data) == 1, item_inactive: $parents[1].debuffs.itemBuffs.getActiveBorder($data) == 0 }, attr:{ src: $parents[1].debuffs.itemBuffs.getItemImage($data) }, click: function(data, event) { $parents[1].debuffs.itemBuffs.toggleItem($index, data, event); }, event: { dblclick: $parents[1].debuffs.itemBuffs.removeItem }\\\"/>\\n    <div class=\\\"btn-group-vertical\\\">\\n        <button style=\\\"padding:3px 10px;\\\" class=\\\"btn btn-default btn-xs\\\" title=\\\"Remove Item\\\" data-bind=\\\"click: $parents[1].debuffs.itemBuffs.removeItem\\\">&times;</button>\\n        <button style=\\\"padding:3px 10px;\\\" class=\\\"btn btn-default btn-xs\\\" title=\\\"Disable/Enable Item\\\" data-bind=\\\"click: $parents[1].debuffs.itemBuffs.toggleMuteItem, html: enabled() ? 'o' : '-', attr: {title: enabled() ? 'Disable Item' : 'Enable Item'}\\\">o</button>\\n    </div>\\n</div>\" });\nko.components.register('buff-section', { template: \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().buff, css: { section_disabled: !sectionDisplay().buff() }\\\">Buffs</h3>\\n        <div class=\\\"form-horizontal\\\" data-bind=\\\"visible: sectionDisplay().buff()\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <select id=\\\"buffselect\\\" class=\\\"form-control\\\" data-bind=\\\"options: buffs.availableBuffs , optionsText: 'buffDisplayName', value: buffs.selectedBuff\\\"></select>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <button class=\\\"btn btn-default\\\" data-bind=\\\"click: buffs.addBuff\\\">Add</button>\\n                    <button class=\\\"btn btn-default\\\" data-bind=\\\"click: function(data,event) { buffs.removeBuff(data, event, buffs.selectedBuff().buffName) }\\\">Remove</button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" data-bind=\\\"foreach: buffs.buffs, visible: sectionDisplay().buff()\\\">\\n            <div data-bind=\\\"css: {row: $data.data.isDetail() || ($index() < $parent.buffs.buffs().length-1 && $parent.buffs.buffs()[$index()+1].data.isDetail()), row2: $data.data.isDetail() || ($index() < $parent.buffs.buffs().length-1 && $parent.buffs.buffs()[$index()+1].data.isDetail()) }\\\">\\n                <div class=\\\"col-md-3 text-center bottom-buffer2\\\" data-bind=\\\"css: {'col-md-3': $root.layout() == 0, 'col-md-2': $root.layout() == 1}\\\">\\n                    <img style=\\\"padding:0px;margin-bottom:1px;\\\" class=\\\"img-rounded ability\\\" data-bind=\\\"css: { ability_active: $data.data.isActive() || $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1, ability_inactive: !$data.data.isActive() && $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1, btn: $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1, 'btn-default': $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1}, attr:{src: '/media/images/spellicons/' + $data.data.name + '.png'}, click: function(data, event) { $parent.buffs.toggleBuff($index, data.data, event); }, event: { dblclick: function(data,event) { $parent.buffs.removeBuff(data, event, $data.data.name) } }\\\"/>\\n                    <div class=\\\"progress\\\" style=\\\"position:relative\\\">\\n                        <div style=\\\"position:absolute;width:100%;color:white;\\\" class=\\\"text-center\\\" data-bind=\\\"visible: $parent.getAbilityLevelMax($data.data) > 0, text: $data.data.level() + '/' + $parent.getAbilityLevelMax($data.data)\\\"></div>\\n                        <div class=\\\"progress-bar progress-bar-danger\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 60%;\\\" data-bind=\\\"attr: { 'aria-valuenow': ($parent.getAbilityLevelMax($data.data) > 0 ? $data.data.level()/$parent.getAbilityLevelMax($data.data)*100 : 0) }, style: { width: ($parent.getAbilityLevelMax($data.data) > 0 ? $data.data.level()/$parent.getAbilityLevelMax($data.data)*100 : 0) + '%' }\\\"></div>\\n                    </div>\\n                    <div class=\\\"btn-group btn-group-justified\\\" data-bind=\\\"if: $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE') == -1\\\">\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.buffs.levelDownAbility($index, data.data, event, $parent); }\\\">-</a>\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.buffs.levelUpAbility($index, data.data, event, $parent); }\\\">+</a>\\n                    </div>\\n                    <div class=\\\"btn-group btn-group-justified\\\">\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.buffs.toggleBuffDetail($index, data, event); }, css: {'toggled': $data.data.isDetail}\\\">Details</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-9 bottom-buffer\\\" data-bind=\\\"visible: $data.data.isDetail()\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-bind=\\\"click: function(data, event) { $parent.buffs.toggleBuffDetail($index, data.data, event); }\\\">&times;</button>\\n                    <div data-bind=\\\"component: { name: 'ability-detail', params: { hero: $parent, ability: $data.data } }\\\"></div>\\n                    <div data-bind=\\\"if: $data.data.name in $parent.buffs.abilityData && $parent.buffs.buffs()[$index()].data.level() > 0\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                            <div data-bind=\\\"component: { name: 'buff-settings', params: $parent.buffs.abilitySettingsData($data.data.name, $parent, $index()) }\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"form-horizontal\\\" data-bind=\\\"visible: sectionDisplay().buff()\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <input class=\\\"form-control\\\" id=\\\"auto2\\\" data-bind=\\\"attr: {id: id() + '-auto2' }, jqAuto: { autoFocus: true, html: true }, jqAutoSource: buffs.itemBuffs.itemBuffOptions, jqAutoValue: buffs.itemBuffs.selectedItemBuff, jqAutoSourceLabel: 'displayname', jqAutoSourceInputValue: 'name', jqAutoSourceValue: 'value'\\\" />\\n                        <span class=\\\"input-group-btn\\\">\\n                            <button class=\\\"btn btn-default\\\" data-bind=\\\"jqAutoCombo: id() + '-auto2'\\\"><span class=\\\"glyphicon glyphicon-search\\\"></span></button>\\n                        </span>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <button class=\\\"btn btn-default\\\" data-bind=\\\"click: buffs.itemBuffs.addItemBuff\\\">Add</button>\\n                </div>\\n            </div>\\n        </div>\\n        <div data-bind=\\\"foreach: buffs.itemBuffs.items, visible: sectionDisplay().buff()\\\">\\n            <div class=\\\"pull-left\\\" style=\\\"margin-right:10px\\\" data-bind=\\\"component: { name: 'item-buff', params: $data}\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().debuff, css: { section_disabled: !sectionDisplay().debuff() }\\\">Debuffs</h3>\\n        <div class=\\\"form-horizontal\\\" data-bind=\\\"visible: sectionDisplay().debuff()\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <select id=\\\"buffselect\\\" class=\\\"form-control\\\" data-bind=\\\"options: debuffs.availableDebuffs , optionsText: 'buffDisplayName', value: debuffs.selectedBuff\\\"></select>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <button class=\\\"btn btn-default\\\" data-bind=\\\"click: debuffs.addBuff\\\">Add</button>\\n                    <button class=\\\"btn btn-default\\\" data-bind=\\\"click: function(data,event) { debuffs.removeBuff(data, event, debuffs.selectedBuff().buffName) }\\\">Remove</button>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" data-bind=\\\"foreach: debuffs.buffs, visible: sectionDisplay().debuff()\\\">\\n            <div data-bind=\\\"css: {row: $data.data.isDetail() || ($index() < $parent.debuffs.buffs().length-1 && $parent.debuffs.buffs()[$index()+1].data.isDetail()), row2: $data.data.isDetail() || ($index() < $parent.debuffs.buffs().length-1 && $parent.debuffs.buffs()[$index()+1].data.isDetail()) }\\\">\\n                <div class=\\\"col-md-3 text-center bottom-buffer2\\\" data-bind=\\\"css: {'col-md-3': $root.layout() == 0, 'col-md-2': $root.layout() == 1}\\\">\\n                    <img style=\\\"padding:0px;margin-bottom:1px;\\\" class=\\\"img-rounded ability\\\" data-bind=\\\"css: { ability_active: $data.data.isActive() || $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1, ability_inactive: !$data.data.isActive() && $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1, btn: $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1, 'btn-default': $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1}, attr:{src: '/media/images/spellicons/' + $data.data.name + '.png'}, click: function(data, event) { $parent.debuffs.toggleBuff($index, data.data, event); }, event: { dblclick: function(data,event) { $parent.debuffs.removeBuff(data, event, $data.data.name) } }\\\"/>\\n                    <div class=\\\"progress\\\" style=\\\"position:relative\\\">\\n                        <div style=\\\"position:absolute;width:100%;color:white;\\\" class=\\\"text-center\\\" data-bind=\\\"visible: $parent.getAbilityLevelMax($data.data) > 0, text: $data.data.level() + '/' + $parent.getAbilityLevelMax($data.data)\\\"></div>\\n                        <div class=\\\"progress-bar progress-bar-danger\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 60%;\\\" data-bind=\\\"attr: { 'aria-valuenow': ($parent.getAbilityLevelMax($data.data) > 0 ? $data.data.level()/$parent.getAbilityLevelMax($data.data)*100 : 0) }, style: { width: ($parent.getAbilityLevelMax($data.data) > 0 ? $data.data.level()/$parent.getAbilityLevelMax($data.data)*100 : 0) + '%' }\\\"></div>\\n                    </div>\\n                    <div class=\\\"btn-group btn-group-justified\\\" data-bind=\\\"if: $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE') == -1\\\">\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.debuffs.levelDownAbility($index, data.data, event, $parent); }\\\">-</a>\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.debuffs.levelUpAbility($index, data.data, event, $parent); }\\\">+</a>\\n                    </div>\\n                    <div class=\\\"btn-group btn-group-justified\\\">\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.debuffs.toggleBuffDetail($index, data, event); }, css: {'toggled': $data.data.isDetail}\\\">Details</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-9 bottom-buffer\\\" data-bind=\\\"visible: $data.data.isDetail()\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-bind=\\\"click: function(data, event) { $parent.debuffs.toggleBuffDetail($index, data.data, event); }\\\">&times;</button>\\n                    <div data-bind=\\\"component: { name: 'ability-detail', params: { hero: $parent, ability: $data.data } }\\\"></div>\\n                    <div data-bind=\\\"if: $data.data.name in $parent.debuffs.abilityData && $parent.debuffs.buffs()[$index()].data.level() > 0\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                            <div data-bind=\\\"component: { name: 'buff-settings', params: $parent.debuffs.abilitySettingsData($data.data.name, $parent, $index()) }\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"form-horizontal\\\" data-bind=\\\"visible: sectionDisplay().debuff()\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <input class=\\\"form-control\\\" id=\\\"auto3\\\" data-bind=\\\"attr: {id: id() + '-auto3' }, jqAuto: { autoFocus: true, html: true }, jqAutoSource: debuffs.itemBuffs.itemDebuffOptions, jqAutoValue: debuffs.itemBuffs.selectedItemDebuff, jqAutoSourceLabel: 'displayname', jqAutoSourceInputValue: 'name', jqAutoSourceValue: 'value'\\\" />\\n                        <span class=\\\"input-group-btn\\\">\\n                            <button class=\\\"btn btn-default\\\" data-bind=\\\"jqAutoCombo: id() + '-auto3'\\\"><span class=\\\"glyphicon glyphicon-search\\\"></span></button>\\n                        </span>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <button class=\\\"btn btn-default\\\" data-bind=\\\"click: debuffs.itemBuffs.addItemDebuff\\\">Add</button>\\n                </div>\\n            </div>\\n        </div>\\n        <div data-bind=\\\"foreach: debuffs.itemBuffs.items, visible: sectionDisplay().debuff()\\\">\\n            <div class=\\\"pull-left\\\" style=\\\"margin-right:10px\\\" data-bind=\\\"component: { name: 'item-debuff', params: $data}\\\"></div>\\n        </div>\\n    </div>\\n</div>\" });\nko.components.register('damage-details', { template: \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <h3 style=\\\"display:block;\\\" class=\\\"section_header\\\" data-bind=\\\"toggle: showDamageDetails, css: { section_disabled: !showDamageDetails() }\\\">Damage Details\\n            <span class=\\\"pull-right\\\" data-bind=\\\"visible: showDamageDetails()\\\">\\n                <small style=\\\"text-align:center\\\" data-bind=\\\"style: {color: getDamageTypeColor('physical')}\\\">Physical</small>\\n                <small style=\\\"text-align:center\\\" data-bind=\\\"style: {color: getDamageTypeColor('magic')}\\\">Magical</small>\\n                <small style=\\\"text-align:center\\\" data-bind=\\\"style: {color: getDamageTypeColor('pure')}\\\">Pure</small>\\n            </span>\\n        </h3>\\n        <table class=\\\"table damage-details\\\" data-bind=\\\"visible: showDamageDetails()\\\">\\n            <thead>\\n                <tr class=\\\"damage-details-header-row\\\">\\n                    <td></td>\\n                    <td class=\\\"text-center\\\" colspan=\\\"2\\\"><strong>Attack Damage</strong><img src=\\\"img/reduc_icon.png\\\" class=\\\"pull-right\\\" data-bind=\\\"attr: {title: 'After reductions from ' + enemy().heroData().displayname}\\\"></td>\\n                    <td class=\\\"text-center\\\" colspan=\\\"2\\\"><strong>DPS</strong><img src=\\\"img/reduc_icon.png\\\" class=\\\"pull-right\\\" data-bind=\\\"attr: {title: 'After reductions from ' + enemy().heroData().displayname}\\\"></td>\\n                </tr>\\n                <tr class=\\\"damage-details-header-row-2 total-row\\\">\\n                    <td><strong>Total</strong></td>\\n                    <td class=\\\"text-right\\\" data-bind=\\\"text: damageTotalInfo().totalRow[0]().toFixed(2)\\\"></td>\\n                    <td class=\\\"text-right\\\" data-bind=\\\"text: damageTotalInfo().totalRow[1]().toFixed(2)\\\"></td>\\n                    <td class=\\\"text-right\\\" data-bind=\\\"text: damageTotalInfo().totalRow[2]().toFixed(2)\\\"></td>\\n                    <td class=\\\"text-right\\\" data-bind=\\\"text: damageTotalInfo().totalRow[3]().toFixed(2)\\\"></td>\\n                </tr>\\n            </thead>\\n            <!-- ko foreach: damageTotalInfo().attacks -->\\n            <tbody>\\n                <tr class=\\\"indent subtotal-row\\\" data-bind=\\\"toggle: $data.enabled, css: { 'inactive': !$data.enabled() }\\\">\\n                    <td>\\n                        <button class=\\\"btn btn-default btn-xs glyphicon pull-left\\\" data-bind=\\\"toggle: $data.enabled, css: {'glyphicon-eye-open': $data.enabled(), 'glyphicon-eye-close': !$data.enabled()}, preventBubble: 'click'\\\"></button>\\n                        <button class=\\\"btn btn-default btn-xs glyphicon pull-right\\\" data-bind=\\\"toggle: $data.visible, css: {'glyphicon-minus': $data.visible(), 'glyphicon-plus': !$data.visible()}, preventBubble: 'click'\\\"></button>\\n                        <strong><span data-bind=\\\"text: $data.name\\\"></span></strong>\\n                    </td>\\n                    <td class=\\\"text-right\\\" data-bind=\\\"text: $data.totalRow[0]().toFixed(2)\\\"></td>\\n                    <td class=\\\"text-right\\\" data-bind=\\\"text: $data.totalRow[1]().toFixed(2)\\\"></td>\\n                    <td class=\\\"text-right\\\" data-bind=\\\"text: $data.totalRow[2]().toFixed(2)\\\"></td>\\n                    <td class=\\\"text-right\\\" data-bind=\\\"text: $data.totalRow[3]().toFixed(2)\\\"></td>\\n                </tr>\\n            </tbody>\\n            <tbody class=\\\"indent\\\" data-bind=\\\"foreach: $data.sources, visible: $data.visible\\\">\\n                <tr data-bind=\\\"toggle: $data.enabled, css: { 'inactive': !$data.enabled() }\\\">\\n                    <td class=\\\"indent\\\">\\n                        <span data-bind=\\\"text: $data.name\\\"></span>\\n                        <button class=\\\"btn btn-default btn-xs glyphicon pull-left\\\" data-bind=\\\"toggle: $data.enabled, css: {'glyphicon-eye-open': $data.enabled(), 'glyphicon-eye-close': !$data.enabled()}, preventBubble: 'click'\\\"></button>\\n                    </td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: $data.damage.toFixed(2), style: {color: $parents[1].getDamageTypeColor($data.damageType)}\\\"></span></td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: $data.damageReduced.toFixed(2), style: {color: $parents[1].getDamageTypeColor($data.damageType)}\\\"></span></td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: $data.dps.toFixed(2), style: {color: $parents[1].getDamageTypeColor($data.damageType)}\\\"></span></td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: $data.dpsReduced.toFixed(2), style: {color: $parents[1].getDamageTypeColor($data.damageType)}\\\"></span></td>\\n                </tr>\\n            </tbody>\\n            <tr class=\\\"indent crit\\\" data-bind=\\\"visible: $data.visible() && $data.sourcesCrit.length > 0\\\">\\n                <td class=\\\"indent\\\">Critical Strike Proc, <span data-bind=\\\"text: ($data.totalCritChance * 100).toFixed(1) + '%'\\\"></span></td>\\n                <td class=\\\"text-right\\\" data-bind=\\\"text: $data.totalCritRow[0]().toFixed(2)\\\"></td>\\n                <td class=\\\"text-right\\\" data-bind=\\\"text: $data.totalCritRow[1]().toFixed(2)\\\"></td>\\n                <td class=\\\"text-right\\\" data-bind=\\\"text: $data.totalCritRow[2]().toFixed(2)\\\"></td>\\n                <td class=\\\"text-right\\\" data-bind=\\\"text: $data.totalCritRow[3]().toFixed(2)\\\"></td>\\n            </tr>\\n            <tbody class=\\\"indent\\\" data-bind=\\\"visible: $data.visible, foreach: $data.sourcesCrit\\\">\\n                <tr class=\\\"indent crit\\\" data-bind=\\\"toggle: $data.enabled, css: { 'inactive': !$data.enabled() }\\\">\\n                    <td class=\\\"indent\\\">\\n                        <span data-bind=\\\"text: $data.name\\\"></span>\\n                        <button class=\\\"btn btn-default btn-xs glyphicon pull-left\\\" data-bind=\\\"toggle: $data.enabled, css: {'glyphicon-eye-open': $data.enabled(), 'glyphicon-eye-close': !$data.enabled()}, preventBubble: 'click'\\\"></button>\\n                    </td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: $data.damage.toFixed(2)\\\"></span></td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: $data.damageReduced.toFixed(2)\\\"></span></td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: $data.dps.toFixed(2)\\\"></span></td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: $data.dpsReduced.toFixed(2)\\\"></span></td>\\n                </tr>\\n            </tbody>\\n            <!-- /ko -->\\n            <tbody>\\n                <tr data-bind=\\\"visible: cleaveInfo().length > 0\\\">\\n                    <td colspan=3><strong>Cleave</strong></td>\\n                </tr>\\n            </tbody>    \\n            <tbody data-bind=\\\"foreach: cleaveInfo()\\\">\\n                <tr><td>Radius:</td><td class=\\\"text-right\\\"><span data-bind=\\\"html: $data.radius\\\"></span></td></tr>\\n                <tr><td>Magnitude:</td><td class=\\\"text-right\\\"><span data-bind=\\\"html: ($data.magnitude * 100).toFixed(2) + '%'\\\"></span></td></tr>\\n                <tr>\\n                    <td>Cleave Damage:</td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: ($data.magnitude * $parent.damageTotalInfo().total).toFixed(2)\\\"></span></td>\\n                </tr>\\n            </tbody>\\n        \\n        </table>\\n    </div>\\n</div>\" });\nko.components.register('damage-amp', { template: \"<div class=\\\"col-md-12\\\">\\n    <h3 class=\\\"section_header\\\" data-bind=\\\"toggle: sectionDisplay().damageamp, css: { section_disabled: !sectionDisplay().damageamp() }\\\">Damage Amplification & Reduction</h3>\\n    <div data-bind=\\\"visible: sectionDisplay().damageamp(), lazyBinding: sectionDisplay().damageamp\\\">\\n        <div class=\\\"form-horizontal\\\">\\n            <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-md-3 control-label\\\">\\n                        <label for=\\\"damageinput\\\">Damage</label>\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <input class=\\\"form-control\\\" id=\\\"damageinput\\\" data-bind=\\\"value: damageInputValue\\\" />\\n                    </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-horizontal\\\">\\n            <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-md-3 control-label\\\">\\n                        <label for=\\\"buffampselect\\\">Amplification</label>\\n                    </div>\\n                    <div class=\\\"col-md-5\\\">\\n                        <select id=\\\"buffampselect\\\" class=\\\"form-control\\\" data-bind=\\\"options: damageAmplification.availableBuffs , optionsText: 'buffDisplayName', value: damageAmplification.selectedBuff\\\"></select>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <button class=\\\"btn btn-default\\\" data-bind=\\\"click: damageAmplification.addBuff\\\">Add</button>\\n                        <button class=\\\"btn btn-default\\\" data-bind=\\\"click: function(data,event) { damageAmplification.removeBuff(data, event, damageAmplification.selectedBuff().buffName) }\\\">Remove</button>\\n                    </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" data-bind=\\\"foreach: damageAmplification.buffs\\\">\\n            <div data-bind=\\\"css: {row: $data.data.isDetail() || ($index() < $parent.damageAmplification.buffs().length-1 && $parent.damageAmplification.buffs()[$index()+1].data.isDetail()), row2: $data.data.isDetail() || ($index() < $parent.damageAmplification.buffs().length-1 && $parent.damageAmplification.buffs()[$index()+1].data.isDetail()) }\\\">\\n                <div class=\\\"col-md-3 text-center bottom-buffer row2\\\" data-bind=\\\"css: {'col-md-3': $root.layout() == 0, 'col-md-2': $root.layout() == 1}\\\">\\n                    <img style=\\\"padding:0px;margin-bottom:1px;\\\" class=\\\"img-rounded ability\\\" data-bind=\\\"css: { ability_active: $data.data.isActive() || $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1, ability_inactive: !$data.data.isActive() && $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1, btn: $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1, 'btn-default': $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1}, attr:{src: '/media/images/spellicons/' + $data.data.name + '.png'}, click: function(data, event) { $parent.damageAmplification.toggleBuff($index, data.data, event); }, event: { dblclick: function(data,event) { $parent.damageAmplification.removeBuff(data, event, $data.data.name) } }\\\"/>\\n                    <div class=\\\"progress\\\" style=\\\"position:relative\\\">\\n                        <div style=\\\"position:absolute;width:100%;color:white;\\\" class=\\\"text-center\\\" data-bind=\\\"visible: $parent.getAbilityLevelMax($data.data) > 0, text: $data.data.level() + '/' + $parent.getAbilityLevelMax($data.data)\\\"></div>\\n                        <div class=\\\"progress-bar progress-bar-danger\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 60%;\\\" data-bind=\\\"attr: { 'aria-valuenow': ($parent.getAbilityLevelMax($data.data) > 0 ? $data.data.level()/$parent.getAbilityLevelMax($data.data)*100 : 0) }, style: { width: ($parent.getAbilityLevelMax($data.data) > 0 ? $data.data.level()/$parent.getAbilityLevelMax($data.data)*100 : 0) + '%' }\\\"></div>\\n                    </div>\\n                    <div class=\\\"btn-group btn-group-justified\\\" data-bind=\\\"if: $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE') == -1\\\">\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.damageAmplification.levelDownAbility($index, data.data, event, $parent); }\\\">-</a>\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.damageAmplification.levelUpAbility($index, data.data, event, $parent); }\\\">+</a>\\n                    </div>\\n                    <div class=\\\"btn-group btn-group-justified\\\">\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.damageAmplification.toggleBuffDetail($index, data, event); }, css: {'toggled': $data.data.isDetail}\\\">Details</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-9 bottom-buffer\\\" data-bind=\\\"visible: $data.data.isDetail()\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-bind=\\\"click: function(data, event) { $parent.damageAmplification.toggleBuffDetail($index, data.data, event); }\\\">&times;</button>\\n                    <div data-bind=\\\"component: { name: 'ability-detail', params: { hero: $parent, ability: $data.data } }\\\"></div>\\n                    <div data-bind=\\\"if: $data.data.name in $parent.damageAmplification.abilityData && $parent.damageAmplification.buffs()[$index()].data.level() > 0\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                            <div data-bind=\\\"component: { name: 'buff-settings', params: $parent.damageAmplification.abilitySettingsData($data.data.name, $parent, $index()) }\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-horizontal\\\">\\n            <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-md-3 control-label\\\">\\n                        <label for=\\\"buffreductionselect\\\">Reduction</label>\\n                    </div>\\n                    <div class=\\\"col-md-5\\\">\\n                        <select id=\\\"buffreductionselect\\\" class=\\\"form-control\\\" data-bind=\\\"options: damageReduction.availableDebuffs , optionsText: 'buffDisplayName', value: damageReduction.selectedBuff\\\"></select>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <button class=\\\"btn btn-default\\\" data-bind=\\\"click: damageReduction.addBuff\\\">Add</button>\\n                        <button class=\\\"btn btn-default\\\" data-bind=\\\"click: function(data,event) { damageReduction.removeBuff(data, event, damageReduction.selectedBuff().buffName) }\\\">Remove</button>\\n                    </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" data-bind=\\\"foreach: damageReduction.buffs\\\">\\n            <div data-bind=\\\"css: {row: $data.data.isDetail() || ($index() < $parent.damageReduction.buffs().length-1 && $parent.damageReduction.buffs()[$index()+1].data.isDetail()), row2: $data.data.isDetail() || ($index() < $parent.damageReduction.buffs().length-1 && $parent.damageReduction.buffs()[$index()+1].data.isDetail()) }\\\">\\n                <div class=\\\"col-md-3 text-center bottom-buffer row2\\\" data-bind=\\\"css: {'col-md-3': $root.layout() == 0, 'col-md-2': $root.layout() == 1}\\\">\\n                    <img style=\\\"padding:0px;margin-bottom:1px;\\\" class=\\\"img-rounded ability\\\" data-bind=\\\"css: { ability_active: $data.data.isActive() || $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1, ability_inactive: !$data.data.isActive() && $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1, btn: $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1, 'btn-default': $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1}, attr:{src: '/media/images/spellicons/' + $data.data.name + '.png'}, click: function(data, event) { $parent.damageReduction.toggleBuff($index, data.data, event); }, event: { dblclick: function(data,event) { $parent.damageReduction.removeBuff(data, event, $data.data.name) } }\\\"/>\\n                    <div class=\\\"progress\\\" style=\\\"position:relative\\\">\\n                        <div style=\\\"position:absolute;width:100%;color:white;\\\" class=\\\"text-center\\\" data-bind=\\\"visible: $parent.getAbilityLevelMax($data.data) > 0, text: $data.data.level() + '/' + $parent.getAbilityLevelMax($data.data)\\\"></div>\\n                        <div class=\\\"progress-bar progress-bar-danger\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 60%;\\\" data-bind=\\\"attr: { 'aria-valuenow': ($parent.getAbilityLevelMax($data.data) > 0 ? $data.data.level()/$parent.getAbilityLevelMax($data.data)*100 : 0) }, style: { width: ($parent.getAbilityLevelMax($data.data) > 0 ? $data.data.level()/$parent.getAbilityLevelMax($data.data)*100 : 0) + '%' }\\\"></div>\\n                    </div>\\n                    <div class=\\\"btn-group btn-group-justified\\\" data-bind=\\\"if: $data.data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE') == -1\\\">\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.damageReduction.levelDownAbility($index, data.data, event, $parent); }\\\">-</a>\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.damageReduction.levelUpAbility($index, data.data, event, $parent); }\\\">+</a>\\n                    </div>\\n                    <div class=\\\"btn-group btn-group-justified\\\">\\n                        <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parent.damageReduction.toggleBuffDetail($index, data, event); }, css: {'toggled': $data.data.isDetail}\\\">Details</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-9 bottom-buffer\\\" data-bind=\\\"visible: $data.data.isDetail()\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-bind=\\\"click: function(data, event) { $parent.damageReduction.toggleBuffDetail($index, data.data, event); }\\\">&times;</button>\\n                    <div data-bind=\\\"component: { name: 'ability-detail', params: { hero: $parent, ability: $data.data } }\\\"></div>\\n                    <div data-bind=\\\"if: $data.data.name in $parent.damageReduction.abilityData && $parent.damageReduction.buffs()[$index()].data.level() > 0\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                            <div data-bind=\\\"component: { name: 'buff-settings', params: $parent.damageReduction.abilitySettingsData($data.data.name, $parent, $index()) }\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <h4>Calculations <a class=\\\"btn btn-default btn-xs\\\" data-bind=\\\"toggle: showDamageAmpCalcDetails, text: !showDamageAmpCalcDetails() ? 'Show details' : 'Hide details'\\\"></a></h4>\\n        <table class=\\\"table\\\">\\n            <tbody>\\n                <!-- ko foreach: damageInputModified().data -->\\n                <tr data-bind=\\\"visible: $parent.showDamageAmpCalcDetails()\\\">\\n                    <td><span style=\\\"text-decoration: underline;\\\" data-bind=\\\"text: $data.label + ' damage'\\\"></span></td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: Math.round($data.value * 100) / 100, style: {color: $parent.getDamageTypeColor($data.damageType)}\\\"></span></td>\\n                </tr>\\n                    <!-- ko foreach: $data.data -->\\n                    <tr data-bind=\\\"visible: $parents[1].showDamageAmpCalcDetails()\\\">\\n                        <td><span data-bind=\\\"text: $data.label\\\"></span></td>\\n                        <td class=\\\"text-right\\\"><span data-bind=\\\"html: Math.round($data.value * 100) / 100, diffStyle: $data.value\\\"></span></td>\\n                    </tr>\\n                    <!-- /ko -->\\n                <tr data-bind=\\\"css: {subtotal: $parent.showDamageAmpCalcDetails()}\\\">\\n                    <td data-bind=\\\"visible: $parent.showDamageAmpCalcDetails()\\\"><span data-bind=\\\"text: $data.label + ' damage subtotal'\\\"></span></td>\\n                    <td data-bind=\\\"visible: !$parent.showDamageAmpCalcDetails()\\\"><span data-bind=\\\"text: $data.label + ' damage'\\\"></span></td>\\n                    <td class=\\\"text-right\\\"><span data-bind=\\\"html: Math.round($data.total * 100) / 100, style: {color: $parent.getDamageTypeColor($data.damageType)}\\\"></span></td>\\n                </tr>\\n                <!-- /ko -->\\n                <tr>\\n                    <td><strong data-bind=\\\"text: damageInputModified().label + ' damage'\\\"></strong></td>\\n                    <td class=\\\"text-right\\\"><strong data-bind=\\\"html: Math.round(damageInputModified().total * 100) / 100, style: {color: getDamageTypeColor(damageInputModified().damageType)}\\\"></strong></td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\" });\nko.components.register('ability', { template: \"<div data-bind=\\\"if: $data.displayname != 'Empty' &&  ($data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_HIDDEN') == -1 || $data.name.indexOf('invoker_') != -1),\\nstyle: {clear: $data.name == 'invoker_cold_snap' || $data.name == 'invoker_chaos_meteor' ? 'both' : ''},\\ncss: {row: $data.isDetail() || ($index() < $parents[1].ability().abilities().length-1 && $parents[1].ability().abilities()[$index()+1].isDetail()), row3: $data.isDetail() || ($index() < $parents[1].ability().abilities().length-1 && $parents[1].ability().abilities()[$index()+1].isDetail()) }\\\">\\n    <div class=\\\"col-md-3 text-center bottom-buffer row2\\\" data-bind=\\\"css: {'col-md-3': $root.layout() == 0, 'col-md-2': $root.layout() == 1}\\\">\\n        <img style=\\\"padding:0px;margin-bottom:1px;\\\" class=\\\"img-rounded ability\\\" data-bind=\\\"css: { ability_active: $data.isActive() || $data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1, ability_inactive: !$data.isActive() && $data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1, btn: $data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1, 'btn-default': $data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') == -1}, attr:{src: '/media/images/spellicons/' + $data.name + '.png'}, click: function(data, event) { $parents[1].ability().toggleAbility($index, data, event); }\\\"/>\\n        <div class=\\\"progress\\\" style=\\\"position:relative\\\">\\n            <div style=\\\"position:absolute;width:100%;color:white;\\\" class=\\\"text-center\\\" data-bind=\\\"visible: $parents[1].getAbilityLevelMax($data) > 0, text: $data.level() + '/' + $parents[1].getAbilityLevelMax($data)\\\"></div>\\n            <div class=\\\"progress-bar progress-bar-danger\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 60%;\\\" data-bind=\\\"attr: { 'aria-valuenow': ($parents[1].getAbilityLevelMax($data) > 0 ? $data.level()/$parents[1].getAbilityLevelMax($data)*100 : 0) }, style: { width: ($parents[1].getAbilityLevelMax($data) > 0 ? $data.level()/$parents[1].getAbilityLevelMax($data)*100 : 0) + '%' }\\\"></div>\\n        </div>\\n        <div class=\\\"btn-group btn-group-justified\\\" data-bind=\\\"if: $data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE') == -1\\\">\\n            <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parents[1].ability().levelDownAbility($index, data, event, $parents[1]); }\\\">-</a>\\n            <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parents[1].ability().levelUpAbility($index, data, event, $parents[1]); }\\\">+</a>\\n        </div>\\n        <div class=\\\"btn-group btn-group-justified\\\">\\n            <a class=\\\"btn btn-default btn-sm\\\" data-bind=\\\"click: function(data, event) { $parents[1].ability().toggleAbilityDetail($index, data, event); }, css: {'toggled': $data.isDetail}\\\">Details</a>\\n        </div>\\n        <div class=\\\"btn-group btn-group-justified\\\" data-bind=\\\"if: $data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE') != -1\\\">\\n            <a class=\\\"btn btn-default btn-sm btn-block\\\" style=\\\"visibility:hidden;\\\">&mdash;</a>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-9 bottom-buffer2\\\" data-bind=\\\"visible: $data.isDetail()\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-bind=\\\"click: function(data, event) { $parents[1].ability().toggleAbilityDetail($index, data, event); }\\\">&times;</button>\\n        <div data-bind=\\\"component: { name: 'ability-detail', params: { hero: $parents[1], ability: $data } }\\\"></div>\\n        <div data-bind=\\\"if: $data.name in $parents[1].ability().abilityData && $parents[1].ability().abilities()[$index()].level() > 0\\\">\\n            <div class=\\\"col-md-12\\\" style=\\\"margin-top: 10px\\\" >\\n                <div data-bind=\\\"template: { name: 'ability-settings-template', data: $parents[1].ability().abilitySettingsData($data.name, $parents[1], $index()) }\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\" });\nvar abilityDetail = require('../components/ability-detail');\n//console.log(abilityDetail);\nko.components.register('ability-detail', abilityDetail);\nko.components.register('shop', require('../components/shop'));\nko.components.register('stat', { template: \"<span data-bind=\\\"text: parseFloat(hero[stat]()).toString()\\\"></span><span data-bind=\\\"html: $root.getDiffText(hero.diff[stat]()), diffCss: hero.diff[stat], diffCssStat: stat, visible: hero.showDiff\\\"></span>\" });\nko.components.register('stats0', { template: \"<div class=\\\"col-md-12 stats0\\\" data-bind=\\\"css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}\\\">\\n    <table class=\\\"table table-condensed\\\">\\n    <tbody>\\n    <tr><td>Strength:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'totalStr' } }\\\"></td></tr>\\n    <tr><td>Agility:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'totalAgi' } }\\\"></td></tr>\\n    <tr><td>Intelligence:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'totalInt' } }\\\"></td></tr>\\n    <tr><td><abbr title=\\\"Movement Speed\\\">MS</abbr>:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'totalMovementSpeed' } }\\\"></td></tr>\\n    <tr><td>Turn Rate:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'totalTurnRate' } }\\\"></td></tr>\\n    <tr><td>Sight Range:</td><td class=\\\"text-right\\\"><span data-bind=\\\"html: '<abbr title=\\\\'Day\\\\'>' + visionrangeday() + '</abbr>/<abbr title=\\\\'Night\\\\'>' + visionrangenight() + '</abbr>'\\\"></span></td></tr>\\n    <tr><td>%Spell Amp:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'spellAmp' } }\\\"></td></tr>\\n    </tbody>\\n    </table>\\n</div>\" });\nko.components.register('stats1', { template: \"<div class=\\\"col-md-12 stats1\\\" data-bind=\\\"css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}\\\">\\n    <table class=\\\"table table-condensed\\\">\\n    <tbody>\\n    <tr><td>Armor:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'totalArmorPhysical' } }\\\"></td></tr>\\n    <tr><td>Health:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'health' } }\\\"></td></tr>\\n    <tr><td>Health Regen:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'healthregen' } }\\\"></td></tr>\\n    <tr><td>Mana:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'mana' } }\\\"></td></tr>\\n    <tr><td>Mana Regen:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'manaregen' } }\\\"></td></tr>\\n    <tr><td>Physical <abbr title=\\\"Effective Hit Points\\\">EHP</abbr>:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'ehpPhysical' } }\\\"></td></tr>\\n    <tr><td>Magical <abbr title=\\\"Effective Hit Points\\\">EHP</abbr>:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'ehpMagical' } }\\\"></td></tr>\\n    </tbody>\\n    </table>\\n</div>\" });\nko.components.register('stats2', { template: \"<div class=\\\"col-md-12 stats2\\\" data-bind=\\\"css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}\\\">\\n    <table class=\\\"table table-condensed\\\">\\n    <tbody>\\n    <tr><td>%Phys Res:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'totalArmorPhysicalReduction' } }\\\"></td></tr>\\n    <tr><td>%Magic Res:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'totalMagicResistance' } }\\\"></td></tr>\\n    <tr><td>%Lifesteal:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'lifesteal' } }\\\"></td></tr>\\n    <tr><td>%Evasion:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'evasion' } }\\\"></td></tr>\\n    <tr><td>%Bash:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'bash' } }\\\"></td></tr>\\n    <tr><td>%Miss Chance:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'missChance' } }\\\"></td></tr>\\n    <tr><td><abbr title=\\\"% Cooldown Reduction\\\">%CDR</abbr>:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'cooldownReductionPercent' } }\\\"></td></tr>\\n    <tr style=\\\"display: none\\\"><td colspan=2><a class=\\\"btn btn-default btn-block btn-xs\\\" data-bind=\\\"css: {disabled: critInfo().sources.length == 0 ? 'disabled' : '', 'toggled': showCriticalStrikeDetails}, toggle: showCriticalStrikeDetails\\\">Critical Strike Details</a></td></tr>\\n    </tbody>\\n    <tbody class=\\\"tabledropdown\\\" style=\\\"border-top:0\\\" data-bind=\\\"visible: showCriticalStrikeDetails(),foreach: critInfo().sources\\\">\\n    <tr><td colspan=2><strong data-bind=\\\"text: $data.name\\\"></strong></td></tr>\\n    <tr><td>Crit Chance:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: ($data.totalchance * 100).toFixed(2) + '%'\\\"></span></td></tr>\\n    <tr><td>Crit Multiplier:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: ($data.multiplier * 100).toFixed(2) + '%'\\\"></span></td></tr>\\n    </tbody>\\n    </table>\\n</div>\" });\nko.components.register('stats3', { template: \"<div class=\\\"col-md-12 stats3\\\" data-bind=\\\"css: {'col-md-12': $root.layout() == 0, 'col-md-3': $root.layout() == 1}\\\">\\n    <table class=\\\"table table-condensed\\\">\\n    <tbody>\\n    <tr>\\n        <td>Damage:</td>\\n        <td class=\\\"text-right\\\">\\n            <span data-bind=\\\"html: baseDamage()[0].toFixed(0)\\\"></span>\\n            <span data-bind=\\\"html: $root.getDiffText(diff['baseDamage']()[0]), css: {'diffPos': diff['baseDamage']()[0] > 0, 'diffNeg': diff['baseDamage']()[0] < 0}, visible: showDiff\\\"></span>\\n            <span>&ndash;</span>\\n            <span data-bind=\\\"html: baseDamage()[1].toFixed(0)\\\"></span>\\n            <span data-bind=\\\"html: $root.getDiffText(diff['baseDamage']()[1]), css: {'diffPos': diff['baseDamage']()[1] > 0, 'diffNeg': diff['baseDamage']()[1] < 0}, visible: showDiff\\\"></span>\\n            <span style=\\\"color:green\\\" data-bind=\\\"visible: bonusDamage() > 0, html: ' + ' + bonusDamage().toFixed(0)\\\"></span>\\n            <span data-bind=\\\"html: $root.getDiffText(diff['bonusDamage']()), css: {'diffPos': diff['bonusDamage']() > 0, 'diffNeg': diff['bonusDamage']() < 0}, visible: showDiff\\\"></span>\\n            <span style=\\\"color:red\\\" data-bind=\\\"visible: bonusDamageReduction() != 0, html: ' - ' + bonusDamageReduction().toFixed(0)\\\"></span>\\n            <span data-bind=\\\"html: $root.getDiffText(diff['bonusDamageReduction']()), css: {'diffPos': diff['bonusDamageReduction']() > 0, 'diffNeg': diff['bonusDamageReduction']() < 0}, visible: showDiff\\\"></span>\\n        </td>\\n    </tr>\\n    <tr><td><abbr title=\\\"Increased Attack Speed\\\">IAS</abbr>:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'ias' } }\\\"></td></tr>\\n    <tr><td><abbr title=\\\"Base Attack Time\\\">BAT</abbr>:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'bat' } }\\\"></td></tr>\\n    <tr><td>Attack Time:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'attackTime' } }\\\"></td></tr>\\n    <tr><td>Attack &frasl; Sec:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'attacksPerSecond' } }\\\"></td></tr>\\n    <tr><td>Attack Range:</td><td class=\\\"text-right\\\" data-bind=\\\"component: { name: 'stat', params: {'hero': $data, 'stat': 'totalattackrange' } }\\\"></td></tr>\\n    </tbody>\\n    </table>\\n</div>\" });\nko.components.register('stats-additional', { template: \"<table class=\\\"table table-condensed\\\">\\n    <tbody>\\n        <tr><td>Base Strength:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().attributebasestrength\\\"></span></td></tr>\\n        <tr><td>Strength Gain:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().attributestrengthgain\\\"></span></td></tr>\\n        <tr><td>Base Agility:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().attributebaseagility\\\"></span></td></tr>\\n        <tr><td>Agility Gain:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().attributeagilitygain\\\"></span></td></tr>\\n        <tr><td>Base Intelligence:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().attributebaseintelligence\\\"></span></td></tr>\\n        <tr><td>Intelligence Gain:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().attributeintelligencegain\\\"></span></td></tr>\\n        <tr><td>Base Armor:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().armorphysical\\\"></span></td></tr>\\n        <tr><td><abbr title=\\\"Base Armor + armor from base agility\\\">Starting Armor:</abbr></td><td class=\\\"text-right\\\"><span data-bind=\\\"text: parseFloat($data.startingArmor()).toString()\\\"></span></td></tr>\\n        <tr><td>Base Magic Res:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().magicalresistance + '%'\\\"></span></td></tr>\\n        <tr><td>Base Attack Point:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: heroData().attackpoint\\\"></span></td></tr>\\n        <tr><td><abbr data-bind=\\\"attr: { title: 'Total experience required to reach level ' + $data.selectedHeroLevel() }\\\">Total Exp:</abbr></td><td class=\\\"text-right\\\"><span data-bind=\\\"text: $data.totalExp()\\\"></span></span></td></tr>\\n        <tr><td><abbr title=\\\"Experience required for next level\\\">Next level exp:</abbr></td><td class=\\\"text-right\\\"><span data-bind=\\\"html: $data.nextLevelExp()\\\"></span></span></td></tr>\\n        <tr><td>Respawn Time:</td><td class=\\\"text-right\\\"><span data-bind=\\\"text: $data.respawnTime()\\\"></span></td></tr>\\n    </tbody>\\n</table>\" });\n\n// The app extends the herocalc library, provides a frontend\nvar my = require(\"../herocalc/main\");\nvar findWhere = require(\"../herocalc/util/findWhere\");\nvar uniqueId = require(\"../herocalc/util/uniqueId\");\nvar itemData = require(\"../herocalc/data/main\").itemData;\nvar unitData = require(\"../herocalc/data/main\").unitData;\nvar heroData = require(\"../herocalc/data/main\").heroData;\nvar stackableItems = require(\"../herocalc/inventory/stackableItems\");\nvar levelItems = require(\"../herocalc/inventory/levelItems\");\nvar getItemTooltipData = require(\"./herocalc_tooltips_item\");\n//var getAbilityTooltipData = require(\"./herocalc_tooltips_ability\");\nvar HeroViewModel = require(\"./HeroViewModel\");\nvar CloneViewModel = require(\"./CloneViewModel\");\nvar UnitViewModel = require(\"./UnitViewModel\");\nvar AbilityModel = require(\"../herocalc/AbilityModel\");\n/*AbilityModel.prototype.getAbilityTooltipData = function (hero, el) {\n    return getAbilityTooltipData(heroData, unitData, hero, el);\n}*/\n\nvar PlayerColors = [\n    \"#2E6AE6\", //Blue\n    \"#5DE6AD\", //Teal\n    \"#AD00AD\", //Purple\n    \"#DCD90A\", //Yellow\n    \"#E66200\", //Orange\n    \"#E67AB0\", //Pink\n    \"#92A440\", //Pus Yellow\n    \"#5CC5E0\", //Light Blue\n    \"#00771F\", //Green\n    \"#956000\" //Brown\n];\n\nvar Tab = function (id, href, data, text, color, template) {\n    var self = this;\n    self.id = id;\n    self.href = href;\n    self.color = color;\n    self.data = data;\n    self.data.id = ko.observable(self.href);\n    self.text = text;\n    self.template = template;\n    return self;\n}\nTab.prototype.toJS = function () {\n    return {\n        id: this.id,\n        href: this.href,\n        color: this.color,\n        text: this.text,\n        template: this.template\n    }\n}\n\nvar TabGroup = function (hero, unit, clone) {\n    var self = this;\n    self.hero = hero;\n    self.unit = unit;\n    self.clone = clone;\n    self.illusions = ko.observableArray([]);\n    return self;\n}\nTabGroup.prototype.toJS = function () {\n    return {\n        hero: this.hero.toJS(),\n        unit: this.unit.toJS(),\n        clone: this.clone.toJS(),\n        illusions: this.illusions().map(function (illusion) { return illusion.toJS(); })\n    }\n}\n\nvar HeroCalculatorViewModel = function (tooltipURL) {\n    var self = this;\n    self.heroes = [];\n    \n    $.getJSON(tooltipURL, function (data) {\n        abilityDetail.abilityTooltipData(data);\n    });\n    \n    //getAbilityTooltipData.init(tooltipURL);\n\n    for (var i = 0; i < 10; i++) {\n        self.heroes.push(new HeroViewModel(heroData, itemData, unitData, i));\n    }\n    \n    for (var i = 0; i < 5; i++) {\n        var arr = [];\n        for (var j = 5; j < 10; j++) {\n            arr.push(self.heroes[j]);\n        }\n        self.heroes[i].enemies.push.apply(self.heroes[i].enemies, arr);\n    }\n    for (var i = 5; i < 10; i++) {\n        var arr = [];\n        for (var j = 0; j < 5; j++) {\n            arr.push(self.heroes[j]);\n        }\n        self.heroes[i].enemies.push.apply(self.heroes[i].enemies, arr);\n    }\n    for (var i = 0; i < 10; i++) {\n        var arr = [];\n        for (var j = 0; j < 10; j++) {\n            if (i !== j) arr.push(self.heroes[j]);\n        }\n        self.heroes[i].otherHeroes.push.apply(self.heroes[i].otherHeroes, arr);\n    }\n    \n    for (var i = 0; i < 10; i++) {\n        self.heroes[i].clone = ko.observable(new CloneViewModel(heroData, itemData, unitData, 'meepo', self.heroes[i]));\n        self.heroes[i].unit = ko.observable(new UnitViewModel(heroData, itemData, unitData, 'abaddon', self.heroes[i]));\n        \n        self.heroes[i].selectedCompare(self.heroes[i].availableCompare()[i < 5 ? 4 + i : i - 5]);\n        self.heroes[i].selectedEnemy(self.heroes[i].availableEnemies()[i % 5]);\n        //self.heroes[i].enemy = ko.observable(self.heroes[i < 2 ? 2 : 0]);\n        self.heroes[i].unit().enemy(self.heroes[i].enemy());\n        //self.heroes[i].unit().enemy = ko.observable(self.heroes[i < 2 ? 2 : 0]);\n        //self.heroes[i].heroCompare = ko.observable(self.heroes[1 - (i % 2) + (i < 2 ? 0 : 2)]);\n        \n        self.heroes[i].unit().selectedUnit(self.heroes[i].unit().availableUnits()[0]);\n        //self.heroes[i].selectedHero(self.heroes[i].availableHeroes()[i < 2 ? 0 : 2]);\n        self.heroes[i].illusions.subscribe(function (changes) {\n            for (var i = 0; i < changes.length; i++) {\n                if (changes[i].status == 'added') {\n                    var color = this.index < 2 ? '#5cb85c' : '#d9534f',\n                        j = uniqueId();\n                    self.tabs()[this.index].illusions.push(\n                        new Tab(\n                            'illusionTab' + this.index + '-' + j,\n                            'illusionPane' + this.index + '-' + j,\n                            self.heroes[this.index].illusions()[self.tabs()[this.index].illusions().length](),\n                            'Illusion ' + j,\n                            color,\n                            'illusion-pane')\n                    );\n                }\n            }\n        }, {vm: this, index: i}, \"arrayChange\");\n    }\n    //self.heroes[0].showUnitTab(true);\n    self.heroes[0].bound(true);\n    self.tabs = ko.observableArray([]);\n    var tabsArr = [];\n    for (var i = 0; i < 10; i++) {\n        //var color = i < 5 ? '#5cb85c' : '#d9534f';\n        var color = PlayerColors[i];\n        var tabGroup = new TabGroup(\n            new Tab('heroTab' + i, 'heroPane' + i, self.heroes[i], 'Hero ' + i, color, 'hero-pane'),\n            new Tab('unitTab' + i, 'unitPane' + i, self.heroes[i].unit(), 'Unit ' + i, color, 'unit-pane'),\n            new Tab('cloneTab' + i, 'clonePane' + i, self.heroes[i].clone(), 'Meepo Clone ' + i, color, 'clone-pane')\n        );\n        //self.tabs.push(tabGroup);\n        tabsArr.push(tabGroup);\n    }\n    self.tabs.push.apply(self.tabs, tabsArr);//.slice(0, 1));\n\n    self.selectedItem = ko.observable();\n    self.layout = ko.observable(\"1\");\n    self.displayShop = ko.observable(true);\n    self.displayShopItemTooltip = ko.observable(true);\n    self.allItems = ko.observableArray([\n        {name: 'Str, Agi, Int, MS, Turn, Sight', value: 'stats0'},\n        {name: 'Armor, Health, Mana, Regen, EHP', value: 'stats1'},\n        {name: 'Phys Res, Magic Res, Lifesteal, Evasion, Bash, Miss', value: 'stats2'},\n        {name: 'Damage, IAS, BAT, Attack', value: 'stats3'}\n    ]); // Initial items\n    self.selectedItems = ko.observableArray([]); \n    self.moveUp = function () {\n        var start = self.allItems.indexOf(self.selectedItems()[0]),\n            end = self.allItems.indexOf(self.selectedItems()[self.selectedItems().length - 1]);\n        if (start > 0) {\n            var e = self.allItems.splice(start - 1, 1);\n            self.allItems.splice(end, 0, e[0]);            \n        }\n    };\n    self.moveDown = function () {\n        var start = self.allItems.indexOf(self.selectedItems()[0]),\n            end = self.allItems.indexOf(self.selectedItems()[self.selectedItems().length - 1]);        \n        if (end < self.allItems().length - 1) {\n            var e = self.allItems.splice(end + 1, 1);\n            self.allItems.splice(start, 0, e[0]);\n        }\n    };\n    self.selectedTabId = ko.observable('heroTab0');\n    self.getSelectedTab = function (tabId) {\n        var indices = tabId.replace('heroTab', '').replace('cloneTab', '').replace('unitTab', '').replace('illusionTab', '').split('-'),\n            index = indices[0],\n            tab = self.tabs()[index];\n        return tab;\n    }\n    self.selectedTab = ko.computed(function () {\n        /*var indices = self.selectedTabId().replace('heroTab', '').replace('cloneTab', '').replace('unitTab', '').replace('illusionTab', '').split('-'),\n            index = indices[0],\n            tab = self.tabs()[index];*/\n        var tab = self.getSelectedTab(self.selectedTabId());\n        if (self.selectedTabId().indexOf('hero') != -1) {\n            return tab.hero;\n        }\n        else if (self.selectedTabId().indexOf('unit') != -1) {\n            return tab.unit;\n        }\n        else if (self.selectedTabId().indexOf('clone') != -1) {\n            return tab.clone;\n        }\n        else if (self.selectedTabId().indexOf('illusion') != -1) {\n            return tab.illusions().find(function (tab) {\n                return tab.id == self.selectedTabId();\n            });\n        }\n        else {\n            return self.tabs()[0].hero;\n        }\n    });\n    self.selectedTabs = ko.observableArray(['heroTab0', 'heroTab1']);\n    //self.selectedTabs.push('heroTab0');\n    //self.selectedTabs.push('heroTab1');\n    self.boundSettings = ko.observable(false);\n    self.clickTab = function (data, event, index) {\n        /*if (event.target.id != 'settingsTab') {\n            self.selectedTabId(event.target.id);\n        }*/\n        self.selectedTabId(event.target.id);\n        if (self.selectedTabs()[1] != event.target.id) {\n            self.selectedTabs.shift();\n            self.selectedTabs.push(event.target.id);\n        }\n        if (self.selectedTab().data.hasOwnProperty('bound')) {\n            self.selectedTab().data.bound(true);\n\n            // make sure build explorer graph renders\n            if (self.selectedTab().data.hasOwnProperty('buildExplorer')) {\n                var buildExplorer = self.selectedTab().data.buildExplorer;\n                setTimeout(function () {\n                    buildExplorer.graphData.valueHasMutated();\n                }, 0);\n            }\n        }\n        if (event.target.id === 'settingsTab') self.boundSettings(true);\n    };\n    self.isSecondTab = function (id) {\n        return self.selectedTabs().indexOf(id) > -1 && self.selectedTabId() != id;\n    }\n    \n    self.showSideTabId = function (id) {\n        return self.selectedTabs().indexOf(id) > -1 && self.sideView();\n    };\n    \n    self.removeTab = function (index, data, event, tab) {\n        if (data.id == self.selectedTabId()) {\n            //self.selectedTabId('heroTab0');\n            self.clickTab(null, {target: {id: 'heroTab0'}});\n            $('#heroTab0').tab('show');\n        }\n        self.tabs()[tab].illusions.remove(function (illusion) {\n            return illusion == data;\n        });\n        self.heroes[tab].illusions.remove(function (illusion) {\n            return illusion() == data.data;\n        });\n    };\n    \n    self.sideView = ko.observable(false);\n    self.sideView.subscribe(function (newValue) {\n        if (newValue) {\n            if (!self.shopPopout()) {\n                self.displayShop(false);\n            }\n            for (var i = 0; i < self.selectedTabs().length; i++) {\n                var tab = self.getSelectedTab(self.selectedTabs()[i]);\n                if (tab && tab.hero.data.hasOwnProperty('bound')) {\n                    tab.hero.data.bound(true);\n                }\n            }\n            self.layout(\"0\");\n        }\n    });\n    var $window = $(window);\n    self.windowWidth = ko.observable($window.width());\n    self.windowHeight = ko.observable($window.height());\n    $window.resize(function () { \n        self.windowWidth($window.width());\n        self.windowHeight($window.height());\n    });\n    self.shopDock = ko.observable(false);\n    self.shopDock.subscribe(function (newValue) {\n        if (newValue) {\n            self.shopPopout(false);\n        }\n        else {\n        }\n    });\n\n    self.shopDockTrigger = ko.computed(function () {\n        self.windowWidth();\n        self.shopDock();\n    });\n    self.shopPopout = ko.observable(false);\n    self.shopPopout.subscribe(function (newValue) {\n        if (newValue) {\n            self.displayShop(true);\n            $( \"#shop-dialog\" ).dialog({\n                minWidth: 380,\n                minHeight: 0,\n                closeText: \"\",\n                open: function ( event, ui ) {\n                    $(event.target.offsetParent).find('.ui-dialog-titlebar').find('button')\n                        .addClass('close glyphicon glyphicon-remove shop-button btn btn-default btn-xs pull-right')\n                        .removeClass('ui-button ui-widget ui-state-default ui-corner-all ui-button-icon-only ui-dialog-titlebar-close close')\n                        .css('margin-right','0px')\n                        .parent()\n                            .append($('#shop-minimize'))\n                            .append($('#shop-maximize'));\n                    $(event.target.offsetParent).find('.ui-dialog-titlebar').dblclick(function () {\n                        self.displayShop(!self.displayShop());\n                    });\n                },\n                close: function ( event, ui ) {\n                    self.shopPopout(false);\n                }\n            });\n        }\n        else {\n            $('#shop-container').prepend($('#shop-minimize')).prepend($('#shop-maximize'));\n            $( \"#shop-dialog\" ).dialog(\"destroy\");\n        }\n    });\n\n    self.addItem = function (data, event) {\n        if (self.selectedTab().data.buildExplorer) {\n            self.selectedTab().data.buildExplorer.getSelectedInventory().addItem(data, event);\n        }\n        else {\n            self.selectedTab().data.inventory.addItem(data, event);\n        }\n    }\n    self.itemOptions = ko.computed(function () {\n        return self.selectedTab().data.inventory.itemOptions();\n    });\n    \n    self.changeSelectedItem = function (data, event) {\n        self.itemInputValue(1);\n        self.selectedItem(event.target.id);\n    }\n    \n    self.getItemTooltipData = ko.computed(function () {\n        return getItemTooltipData(itemData, self.selectedItem());\n    }, this);\n    self.getItemInputLabel = ko.computed(function () {\n        if (stackableItems.indexOf(self.selectedItem()) != -1) {\n            return 'Stack Size'\n        }\n        else if (levelItems.indexOf(self.selectedItem()) != -1) {\n            return 'Upgrade Level'\n        }\n        else if (self.selectedItem() == 'bloodstone') {\n            return 'Charges'\n        }\n        else {\n            return ''\n        }\n    }, this);\n    self.itemInputValue = ko.observable(1);\n    self.saveLink = ko.observable();\n    self.getAppState = function () {\n        var data = {\n            selectedItem: self.selectedItem,\n            layout: self.layout,\n            displayShop: self.displayShop,\n            displayShopItemTooltip: self.displayShopItemTooltip,\n            allItems: self.allItems,\n            selectedItems: self.selectedItems,\n            selectedTabId: self.selectedTabId,\n            selectedTabs: self.selectedTabs,\n            boundSettings: self.boundSettings,\n            sideView: self.sideView,\n            windowWidth: self.windowWidth,\n            windowHeight: self.windowHeight,\n            shopDock: self.shopDock,\n            shopPopout: self.shopPopout,\n            itemInputValue: self.itemInputValue,\n            saveLink: self.saveLink\n        }\n        data.tabs = self.tabs().map(function (tab) { return tab.toJS() });\n        return ko.toJS(data);\n    }\n    self.getSaveData = function () {\n        var data = {\n            version: \"1.3.0\",\n            heroes: []\n        }\n        for (var i = 0; i < 10; i++) {\n            var hero = self.heroes[i];\n            var d = {\n                hero: hero.selectedHero().heroName,\n                level: hero.selectedHeroLevel(),\n                items: [],\n                abilities: [],\n                skillPointHistory: hero.skillPointHistory(),\n                buffs: [],\n                itemBuffs: [],\n                debuffs: [],\n                itemDebuffs: [],\n                graphData: [],\n                enemyIndex: hero.enemy().index(),\n                heroCompareIndex: hero.heroCompare().index()\n            }\n            // items\n            for (var j = 0; j < hero.inventory.items().length; j++) {\n                d.items.push(ko.toJS(hero.inventory.items()[j]));\n            }\n            // abilities\n            for (var j = 0; j < hero.ability().abilities().length; j++) {\n                d.abilities.push({\n                    level: hero.ability().abilities()[j].level(),\n                    isActive: hero.ability().abilities()[j].isActive()\n                });\n            }\n            // buffs\n            for (var j = 0; j < hero.buffs.buffs().length; j++) {\n                d.buffs.push({\n                    name: hero.buffs.buffs()[j].name,\n                    level: hero.buffs.buffs()[j].data.level(),\n                    isActive: hero.buffs.buffs()[j].data.isActive()\n                });\n            }\n            \n            // debuffs\n            for (var j = 0; j < hero.debuffs.buffs().length; j++) {\n                d.debuffs.push({\n                    name: hero.debuffs.buffs()[j].name,\n                    level: hero.debuffs.buffs()[j].data.level(),\n                    isActive: hero.debuffs.buffs()[j].data.isActive()\n                });\n            }\n\n            // item buffs\n            for (var j = 0; j < hero.buffs.itemBuffs.items().length; j++) {\n                d.itemBuffs.push(ko.toJS(hero.buffs.itemBuffs.items()[j]));\n            }\n            \n            // item debuffs\n            for (var j = 0; j < hero.debuffs.itemBuffs.items().length; j++) {\n                d.itemDebuffs.push(ko.toJS(hero.debuffs.itemBuffs.items()[j]));\n            }\n            \n            // graph data\n            d.graphData = ko.toJS(hero.buildExplorer.graphData);\n            \n            data.heroes.push(d);\n        }\n        return data;\n    }\n    self.save = function () {\n        var data = self.getSaveData();\n        var serialized = JSON.stringify(data);\n        $.ajax({\n            type: \"POST\",\n            url: \"save.php\",\n            data: {'data': serialized},\n            dataType: \"json\",\n            success: function (data){\n                self.saveLink([location.protocol, '//', location.host, location.pathname].join('') + '?id=' + data.file);\n            },\n            failure: function (errMsg) {\n                alert(\"Save request failed.\");\n            }\n        });\n    }\n    self.load = function (data) {\n        for (var i = 0; i < data.heroes.length; i++) {\n            var hero = self.heroes[i];\n            hero.selectedHero(findWhere(hero.availableHeroes(), {'heroName': data.heroes[i].hero}));\n            hero.selectedHeroLevel(data.heroes[i].level);\n            hero.inventory.items.removeAll();\n            hero.inventory.activeItems.removeAll();\n            \n            // load hero compare\n            if (data.heroes[i].hasOwnProperty('heroCompareIndex')) {\n                var o = hero.availableCompare().filter(function (option) {\n                    return option.hero.index() == data.heroes[i].heroCompareIndex;\n                });\n                if (o.length) {\n                    hero.selectedCompare(o[0]);\n                    hero.heroCompare(o[0].hero);\n                }\n            }\n            \n            // load enemy\n            if (data.heroes[i].hasOwnProperty('enemyIndex')) {\n                var o = hero.availableEnemies().filter(function (option) {\n                    return option.hero.index() == data.heroes[i].enemyIndex;\n                });\n                if (o.length) {\n                    hero.selectedEnemy(o[0]);\n                    hero.enemy(o[0].hero);\n                }\n            }\n            \n            // load items\n            for (var j = 0; j < data.heroes[i].items.length; j++) {\n                var item = data.heroes[i].items[j];\n                var new_item = {\n                    item: item.item,\n                    state: ko.observable(item.state),\n                    size: item.size,\n                    enabled: ko.observable(item.enabled)\n                }\n                hero.inventory.items.push(new_item);\n            }\n\n            // load abilities\n            for (var j = 0; j < data.heroes[i].abilities.length; j++) {\n                hero.ability().abilities()[j].level(data.heroes[i].abilities[j].level);\n                hero.ability().abilities()[j].isActive(data.heroes[i].abilities[j].isActive);\n            }\n            hero.skillPointHistory(data.heroes[i].skillPointHistory);\n\n            // load buffs\n            for (var j = 0; j < data.heroes[i].buffs.length; j++) {\n                hero.buffs.selectedBuff(findWhere(hero.buffs.availableBuffs(), {buffName: data.heroes[i].buffs[j].name}));\n                hero.buffs.addBuff(hero, {});\n                var b = findWhere(hero.buffs.buffs(), { name: data.heroes[i].buffs[j].name });\n                b.data.level(data.heroes[i].buffs[j].level);\n                b.data.isActive(data.heroes[i].buffs[j].isActive);\n            }\n\n            // load debuffs\n            for (var j = 0; j < data.heroes[i].debuffs.length; j++) {\n                hero.debuffs.selectedBuff(findWhere(hero.debuffs.availableDebuffs(), {buffName: data.heroes[i].debuffs[j].name}));\n                hero.debuffs.addBuff(hero, {});\n                var b = findWhere(hero.debuffs.buffs(), { name: data.heroes[i].debuffs[j].name });\n                b.data.level(data.heroes[i].debuffs[j].level);\n                b.data.isActive(data.heroes[i].debuffs[j].isActive);\n            }\n\n            // load item buffs\n            if (data.heroes[i].itemBuffs) {\n                for (var j = 0; j < data.heroes[i].itemBuffs.length; j++) {\n                    var item = data.heroes[i].itemBuffs[j];\n                    var new_item = {\n                        item: item.item,\n                        state: ko.observable(item.state),\n                        size: item.size,\n                        enabled: ko.observable(item.enabled)\n                    }\n                    hero.buffs.itemBuffs.items.push(new_item);\n                }\n            }\n\n            // load item debuffs\n            if (data.heroes[i].itemDebuffs) {\n                for (var j = 0; j < data.heroes[i].itemDebuffs.length; j++) {\n                    var item = data.heroes[i].itemDebuffs[j];\n                    var new_item = {\n                        item: item.item,\n                        state: ko.observable(item.state),\n                        size: item.size,\n                        enabled: ko.observable(item.enabled)\n                    }\n                    hero.debuffs.itemBuffs.items.push(new_item);\n                }\n            }\n            \n            // load graph data\n            if (data.heroes[i].graphData) {\n                hero.buildExplorer.loadGraphData(data.heroes[i].graphData);\n            }\n        }\n    }\n    \n    self.sendReport = function () {\n        if ($('#BugReportFormText').val()) {\n            $.post( \"report.php\", { name: $('#BugReportFormName').val(), email: $('#BugReportFormEmail').val(), body: $('#BugReportFormText').val() })\n            .done(function (data) {\n                if (data == 'Success') {\n                    alert('Report successfully sent. Thanks!');\n                    $('#BugReportFormText').val('');\n                }\n                else {\n                    alert('Failed to send report. Try again later or email admin@devilesk.com');\n                }\n            });\n            $('#myModal').modal('hide');\n        }\n        else {\n            alert('Message is required.');\n        }\n    }\n    \n    self.getProperty = function (obj, properties) {\n        var result = obj;\n        for (var i = 0; i < properties.length; i++) {\n            result = result[properties[i]];\n        }\n        return result;\n    };\n    \n    self.getDiffTextWrapper = function (hero, property) {\n        return self.getDiffText(self.getDiffMagnitude(hero, property));\n    }\n    \n    self.getDiffMagnitude = function (hero, property) {\n        var properties = property.split('.');\n        return self.getProperty(hero.damageTotalInfo(), properties).toFixed(2) - self.getProperty(hero.heroCompare().damageTotalInfo(), properties).toFixed(2);\n    }\n    \n    self.getDiffText = function (value) {\n        if (value > 0) {\n            return '+' + parseFloat(value.toFixed(2));\n        }\n        else if (value < 0) {\n            return '&minus;' + parseFloat(value.toFixed(2)*-1).toString();\n        }\n        else {\n            return '';\n        }\n    }\n    self.highlightedTabInternal = ko.observable('');\n    self.highlightedTab = ko.computed(function () {\n        return self.highlightedTabInternal();\n    }).extend({ throttle: 100 });\n    self.highlightTab = function (data) {\n        self.highlightedTabInternal(data);\n    }\n    self.unhighlightTab = function (data) {\n        self.highlightedTabInternal('');\n    }\n}\n\nmodule.exports = HeroCalculatorViewModel;",
    "'use strict';\nvar ko = require('./herocalc_knockout');\nvar extend = require(\"../herocalc/util/extend\");\nvar findWhere = require(\"../herocalc/util/findWhere\");\n\nvar DamageInstance = function (label, damageType, value, data, total) {\n    this.label = label || '';\n    this.damageType = damageType || '';\n    this.value = parseFloat(value) || 0;\n    this.data = data || [];\n    this.total = parseFloat(total) || 0;\n}\n\nvar HeroDamageAmpMixin = function (self) {\n    self.damageBrackets = [\n        ['medusa_mana_shield', 'templar_assassin_refraction', 'faceless_void_backtrack', 'nyx_assassin_spiked_carapace'],\n        ['spectre_dispersion', 'wisp_overcharge', 'slardar_sprint','bristleback_bristleback', 'undying_flesh_golem'],\n        ['abaddon_borrowed_time', 'abaddon_aphotic_shield', 'kunkka_ghostship', 'treant_living_armor'],\n        ['chen_penitence', 'medusa_stone_gaze', 'shadow_demon_soul_catcher'],\n        ['dazzle_shallow_grave']\n    ];\n    \n    self.getDamageAfterBracket = function (initialDamage,index) {\n        var bracket = self.damageBrackets[index];\n        var multiplier = 1;\n        for (var i = 0; i < bracket.length; i++) {\n            if (findWhere(self.damageAmplification.buffs, {name: bracket[i].name}) != undefined || findWhere(self.damageReduction.buffs, {name: bracket[i].name}) != undefined) {\n                multiplier += bracket[i].value;\n            }\n        };\n        return initialDamage * multiplier;\n    };\n    \n    self.processDamageAmpReducBracket = function (index, sources, damage) {\n        var multiplier = 1,\n            data = [],\n            damage = parseFloat(damage),\n            total = parseFloat(damage);\n            \n        for (var i = 0; i < self.damageBrackets[index].length; i++) {\n            if (sources[self.damageBrackets[index][i]] != undefined) {\n                multiplier = 1 + parseFloat(sources[self.damageBrackets[index][i]].multiplier);\n                total += (damage * multiplier) - damage;\n                data.push(new DamageInstance(\n                    sources[self.damageBrackets[index][i]].displayname,\n                    sources[self.damageBrackets[index][i]].damageType,\n                    (damage * multiplier) - damage,\n                    [],\n                    total\n                ));\n            }\n        }\n        return data;\n    }\n    \n    self.getDamageAmpReducInstance = function(sources, initialDamage, ability, damageType) {\n        var data = [],\n            damage = parseFloat(initialDamage),\n            prevDamage = damage,\n            label = ability == 'initial' ? 'Initial' : sources[ability].displayname;\n\n        // Bracket 0\n        data = data.concat(self.processDamageAmpReducBracket(0, sources, damage));\n        damage = data[data.length - 1] ? data[data.length - 1].total : damage;\n\n        // Bracket 1\n        data = data.concat(self.processDamageAmpReducBracket(1, sources, damage));\n        damage = data[data.length - 1] ? data[data.length - 1].total : damage;\n        \n        // Bracket 2\n        data = data.concat(self.processDamageAmpReducBracket(2, sources, damage));\n        damage = data[data.length - 1] ? data[data.length - 1].total : damage;\n\n        return new DamageInstance(label, damageType, initialDamage, data, data[data.length - 1] ? data[data.length - 1].total : damage);\n    }\n    \n    self.getDamageAmpReduc = function (initialDamage) {\n        var instances = [],\n            sources = {},\n            sourcesAmp = self.damageReduction.getDamageMultiplierSources(),\n            sourcesReduc = self.damageAmplification.getDamageMultiplierSources();\n        extend(sources, sourcesAmp);\n        extend(sources, sourcesReduc);\n        // Initial damage instance\n        instances.push(self.getDamageAmpReducInstance(sources, initialDamage, 'initial', 'physical'));\n        \n        // Bracket 4 damage instances\n        var b4 = ['shadow_demon_soul_catcher', 'medusa_stone_gaze', 'chen_penitence'];\n        for (var i = 0; i < b4.length; i++) {\n            if (sources[b4[i]] != undefined) {\n                instances.push(self.getDamageAmpReducInstance(sources, initialDamage * sources[b4[i]].multiplier, b4[i], sources[b4[i]].damageType));\n            }\n        }\n    \n        return new DamageInstance('Total', 'physical', initialDamage, instances, instances.reduce(function(memo, i) {return parseFloat(memo) + parseFloat(i.total);}, 0));\n    };\n    \n    self.damageInputValue = ko.observable(0);\n    self.damageInputModified = ko.computed(function () {\n        return self.getDamageAmpReduc(self.damageInputValue());\n    });\n}\n\nmodule.exports = HeroDamageAmpMixin;",
    "\"use strict\";\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar HeroCalc = require(\"../herocalc/main\");\nvar DamageAmpViewModel = require(\"./DamageAmpViewModel\");\nvar BuildExplorerViewModel = require(\"./BuildExplorerViewModel\");\nvar HeroDamageAmpMixin = require(\"./HeroDamageAmpMixin\");\nvar illusionOptionsArray = require(\"../herocalc/illusion/illusionOptionsArray\");\nvar illusionData = require(\"../herocalc/illusion/illusionData\");\nvar IllusionViewModel = require(\"./IllusionViewModel\");\n\nvar HeroOption2 = function (hero) {\n    this.heroName = ko.computed(function () {\n        return hero.selectedHero().heroName;\n    });\n    this.heroDisplayName = ko.computed(function () {\n        return hero.selectedHero().heroDisplayName;\n    });\n    this.hero = hero;\n};\n\nvar HeroViewModel = function (heroData, itemData, unitData, h) {\n    var self = this;\n    self.index = ko.observable(h);\n    self.availableHeroes = ko.observableArray(HeroCalc.HeroOptions);\n    self.availableHeroes.sort(function (left, right) {\n        return left.heroDisplayName == right.heroDisplayName ? 0 : (left.heroDisplayName < right.heroDisplayName ? -1 : 1);\n    });\n    self.selectedHero = ko.observable(self.availableHeroes()[h]);\n    \n    HeroCalc.HeroModel.call(this, heroData, itemData, self.selectedHero().heroName);\n    \n    self.selectedHero.subscribe(function (newValue) {\n        self.heroId(newValue.heroName);\n    });\n    \n    self.illusions = ko.observableArray([]);\n    self.availableIllusions = ko.observableArray(illusionOptionsArray);\n    self.selectedIllusion = ko.observable(self.availableIllusions()[0]);\n    self.illusionAbilityLevel = ko.observable(1);\n    self.illusionAbilityMaxLevel = ko.computed(function () {\n        return illusionData[self.selectedIllusion().illusionName].max_level;\n    });\n    self.addIllusion = function (data, event) {\n        self.illusions.push(ko.observable(new IllusionViewModel(heroData, itemData, 0, self, self.illusionAbilityLevel())));\n    };\n    \n    self.bound = ko.observable(false);\n    self.playerColorCss = ko.computed(function () {\n        return 'player-color-' + self.index();\n    });\n    self.heroOption = new HeroOption2(self);\n    self.otherHeroes = ko.observableArray([]);\n    self.availableCompare = ko.computed(function () {\n        return self.otherHeroes().map(function (o) {\n            return o.heroOption;\n        });\n    });\n    self.selectedCompare = ko.observable();\n    self.selectedCompare.subscribe(function (newValue) {\n        self.heroCompare(newValue.hero);\n    });\n    self.enemies = ko.observableArray([]);\n    self.availableEnemies = ko.computed(function () {\n        return self.enemies().map(function (o) {\n            return o.heroOption;\n        });\n    });\n    self.selectedEnemy = ko.observable();\n    self.selectedEnemy.subscribe(function (newValue) {\n        self.enemy(newValue.hero);\n    });\n    self.setHeroOptionStyling = function(option, item) {\n        ko.applyBindingsToNode(option, {css: item.hero.playerColorCss() }, item);\n    }\n    self.sectionDisplay = ko.observable({\n        'inventory': ko.observable(true),\n        'ability': ko.observable(true),\n        'talent': ko.observable(true),\n        'buff': ko.observable(true),\n        'debuff': ko.observable(true),\n        'damageamp': ko.observable(false),\n        'illusion': ko.observable(false),\n        'skillbuild': ko.observable(false),\n        'skillbuild-skills': ko.observable(true),\n        'skillbuild-items': ko.observable(true)\n    });\n    self.sectionDisplayToggle = function (section) {\n        self.sectionDisplay()[section](!self.sectionDisplay()[section]());\n    }\n    self.showUnitTab = ko.observable(false);\n    self.showDiff = ko.observable(false);\n    self.showCriticalStrikeDetails = ko.observable(false);\n    self.showDamageDetails = ko.observable(false);\n    self.showStatDetails = ko.observable(false);\n    self.showDamageAmpCalcDetails = ko.observable(false);\n    \n    self.damageAmplification = new DamageAmpViewModel(heroData, itemData, unitData);\n    self.damageReduction = new DamageAmpViewModel(heroData, itemData, unitData);\n    self.buildExplorer = new BuildExplorerViewModel(self);\n    HeroDamageAmpMixin(self);\n}\nHeroViewModel.prototype = Object.create(HeroCalc.HeroModel.prototype);\nHeroViewModel.prototype.constructor = HeroViewModel;\n\nmodule.exports = HeroViewModel;",
    "'use strict';\nvar ko = require('./herocalc_knockout');\n    \nvar HeroCalc = require(\"../herocalc/main\");\nvar illusionData = require(\"../herocalc/illusion/illusionData\");\nvar heroData = require(\"../herocalc/data/main\").heroData;\nvar itemData = require(\"../herocalc/data/main\").itemData;\nvar findWhere = require(\"../herocalc/util/findWhere\");\n\nvar IllusionViewModel = function (heroData, itemData, h, p, abilityLevel) {\n    var self = this;\n    self.parent = p;\n    self.illusionType = ko.observable(self.parent.selectedIllusion().illusionName);\n    if (!illusionData[self.illusionType()].use_selected_hero) {\n        HeroCalc.IllusionModel.call(this, heroData, itemData, self.parent.selectedIllusion().baseHero, p, abilityLevel);\n        self.selectedHero = ko.observable(findWhere(self.parent.availableHeroes(), {heroName: self.parent.selectedIllusion().baseHero}));\n    }\n    else {\n        HeroCalc.IllusionModel.call(this, heroData, itemData, self.parent.selectedHero().heroName, p, abilityLevel);\n        self.selectedHero = ko.observable(self.parent.selectedHero());\n    }\n    \n    self.inventory = self.parent.inventory;\n    self.illusionDisplayName = ko.observable(self.parent.selectedIllusion().illusionDisplayName);\n    self.illusionAbilityMaxLevel = ko.observable(illusionData[self.parent.selectedIllusion().illusionName].max_level);\n    /*if (!illusionData[self.illusionType()].use_selected_hero) {\n        self.selectedHero(findWhere(self.parent.availableHeroes(), {heroName: self.parent.selectedIllusion().baseHero}));\n    }\n    else {\n        self.selectedHero(self.parent.selectedHero());\n    }*/\n    self.selectedHeroLevel(self.parent.selectedHeroLevel());\n    /*self.hero = ko.computed(function() {\n        return ko.wrap.fromJS(heroData['npc_dota_hero_' + self.selectedHero().heroName]);\n    });*/\n    \n    self.ability().getAttributeBonusLevel = self.parent.ability().getAttributeBonusLevel;\n    \n    self.sectionDisplay = ko.observable({\n        'inventory': ko.observable(true),\n        'ability': ko.observable(true),\n        'buff': ko.observable(true),\n        'debuff': ko.observable(true),\n        'damageamp': ko.observable(false),\n        'illusion': ko.observable(false),\n        'skillbuild': ko.observable(false),\n        'skillbuild-skills': ko.observable(true),\n        'skillbuild-items': ko.observable(true)\n    });\n    self.sectionDisplayToggle = function (section) {\n        self.sectionDisplay()[section](!self.sectionDisplay()[section]());\n    }\n    self.showUnitTab = ko.observable(false);\n    self.showDiff = ko.observable(false);\n    self.showCriticalStrikeDetails = ko.observable(false);\n    self.showDamageDetails = ko.observable(false);\n    self.showStatDetails = ko.observable(false);\n    return self;\n}\nIllusionViewModel.prototype = Object.create(HeroCalc.IllusionModel.prototype);\nIllusionViewModel.prototype.constructor = IllusionViewModel;\n\nmodule.exports = IllusionViewModel;",
    "\"use strict\";\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar HeroCalc = require(\"../herocalc/main\");\nvar UnitOption = require(\"../herocalc/hero/UnitOption\");\n\nvar UnitViewModel = function (heroData, itemData, unitData, h, p) {\n    var self = this;\n    self.index = ko.observable(h);\n    self.selectedUnitLevel = ko.observable(1);\n    self.availableUnits = ko.observableArray([\n        new UnitOption('npc_dota_lone_druid_bear', 'Lone Druid Spirit Bear',4,'/media/images/units/spirit_bear.png', self.selectedUnitLevel),\n        new UnitOption('npc_dota_brewmaster_earth_','Brewmaster Earth Warrior',3,'/media/images/units/npc_dota_brewmaster_earth.png', self.selectedUnitLevel),\n        new UnitOption('npc_dota_brewmaster_fire_','Brewmaster Fire Warrior',3,'/media/images/units/npc_dota_brewmaster_fire.png', self.selectedUnitLevel),\n        new UnitOption('npc_dota_brewmaster_storm_','Brewmaster Storm Warrior',3,'/media/images/units/npc_dota_brewmaster_storm.png', self.selectedUnitLevel),\n        new UnitOption('npc_dota_necronomicon_archer_','Necronomicon Archer',3,'/media/images/units/npc_dota_necronomicon_archer.png', self.selectedUnitLevel),\n        new UnitOption('npc_dota_necronomicon_warrior_','Necronomicon Warrior',3,'/media/images/units/npc_dota_necronomicon_warrior.png', self.selectedUnitLevel),\n        new UnitOption('npc_dota_lycan_wolf','Lycan Wolf',4,'/media/images/units/npc_dota_lycan_wolf.png', self.selectedUnitLevel),\n        new UnitOption('npc_dota_visage_familiar','Visage Familiar',3,'/media/images/units/npc_dota_visage_familiar.png', self.selectedUnitLevel)\n    ]);\n    self.selectedUnit = ko.observable(self.availableUnits()[0]);\n    HeroCalc.UnitModel.call(this, heroData, itemData, unitData, self.selectedUnit().heroName());\n    \n    self.selectedUnitLevel.subscribe(function(newValue) {\n        self.unitLevel(newValue);\n        self.unitId(self.selectedUnit().heroName());\n    });\n    self.selectedUnit.subscribe(function(newValue) {\n        if (newValue.heroName().indexOf('npc_dota_lone_druid_bear') != -1) {\n            self.inventory.hasInventory(true);\n            self.inventory.items.removeAll();\n            self.inventory.activeItems.removeAll();\n        }\n        else {\n            self.inventory.hasInventory(false);\n            self.inventory.items.removeAll();\n            self.inventory.activeItems.removeAll();\n        }\n        self.unitId(newValue.heroName());\n    });\n    \n    \n    self.bound = ko.observable(false);\n    self.playerColorCss = ko.computed(function () {\n        return 'player-color-' + self.index();\n    });\n    self.setHeroOptionStyling = function(option, item) {\n        ko.applyBindingsToNode(option, {css: item.hero.playerColorCss() }, item);\n    }\n    self.sectionDisplay = ko.observable({\n        'inventory': ko.observable(true),\n        'ability': ko.observable(true),\n        'buff': ko.observable(true),\n        'debuff': ko.observable(true),\n        'damageamp': ko.observable(false),\n        'illusion': ko.observable(false),\n        'skillbuild': ko.observable(false),\n        'skillbuild-skills': ko.observable(true),\n        'skillbuild-items': ko.observable(true)\n    });\n    self.sectionDisplayToggle = function (section) {\n        self.sectionDisplay()[section](!self.sectionDisplay()[section]());\n    }\n    self.showUnitTab = ko.observable(false);\n    self.showDiff = ko.observable(false);\n    self.showCriticalStrikeDetails = ko.observable(false);\n    self.showDamageDetails = ko.observable(false);\n    self.showStatDetails = ko.observable(false);\n\n}\nUnitViewModel.prototype = Object.create(HeroCalc.UnitModel.prototype);\nUnitViewModel.prototype.constructor = UnitViewModel;\n\nmodule.exports = UnitViewModel;",
    "\"use strict\";\n\nvar getParameterByName = function (name) {\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n        results = regex.exec(location.search);\n    return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n\nmodule.exports = getParameterByName;",
    "'use strict';\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar Chart = require('chart.js');\nrequire('../lib/Chart.scatter');\n\nko.bindingHandlers.stopBinding = {\n    init: function() {\n        return { controlsDescendantBindings: true };\n    }\n};\n\nko.virtualElements.allowedBindings.stopBinding = true;\n\nko.bindingHandlers.lazyBinding = {\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        ko.utils.domData.set(element, 'isBound', false)\n        \n        // Also tell KO *not* to bind the descendants itself, otherwise they will be bound twice\n        return { controlsDescendantBindings: true };\n    },\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var val = ko.unwrap(valueAccessor()),\n            isBound = ko.utils.domData.get(element, 'isBound');\n        if (val && !isBound) {\n            ko.utils.domData.set(element, 'isBound', true);\n            ko.applyBindingsToDescendants(bindingContext, element);\n        }\n    }\n};\n\nko.virtualElements.allowedBindings.lazyBinding = true;\n\nko.bindingHandlers.itemBuildTable = {\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var buildExplorer = ko.unwrap(valueAccessor()),\n            $el = $(element);\n\n        var pressedKeys = {};\n        ko.utils.domData.set(element, 'pressedKeys', pressedKeys);\n        \n        var keyDownHandler = function(e) {\n            var pressedKeys = ko.utils.domData.get(element, 'pressedKeys');\n            pressedKeys[e.which] = true;\n            ko.utils.domData.set(element, 'pressedKeys', pressedKeys);\n        }\n        ko.utils.domData.set(element, 'keyDownHandler', keyDownHandler);\n        \n        var keyUpHandler = function(e) {\n            var pressedKeys = ko.utils.domData.get(element, 'pressedKeys');\n            if ((pressedKeys[17] && pressedKeys[67]) || (pressedKeys[17] && pressedKeys[86])) { // ctrl + c\n                var $hoveredRows = $(element).find('.hover-cursor:hover');\n                if ($hoveredRows.length == 1) {\n                    if (pressedKeys[67]) {\n                        buildExplorer.copyInventoryToClipBoard($(\"tr\", $(element)).index($hoveredRows[0]));\n                    }\n                    else {\n                        buildExplorer.pasteInventoryFromClipBoard($(\"tr\", $(element)).index($hoveredRows[0]));\n                    }\n                    $hoveredRows.fadeOut(50).fadeIn(50);\n                }\n            }\n            delete pressedKeys[e.which];\n            ko.utils.domData.set(element, 'pressedKeys', pressedKeys);\n        }\n        ko.utils.domData.set(element, 'keyUpHandler', keyUpHandler);\n        \n        $(document).bind( \"keydown\", keyDownHandler );\n        $(document).bind( \"keyup\", keyUpHandler );\n\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n            var keyDownHandler = ko.utils.domData.get(element, 'keyDownHandler');\n            var keyUpHandler = ko.utils.domData.get(element, 'keyUpHandler');\n            $(document).unbind( \"keydown\", keyDownHandler );\n            $(document).unbind( \"keyup\", keyUpHandler );\n        });\n    }\n};\n\nko.bindingHandlers.preventBubble = {\n    init: function(element, valueAccessor) {\n        var eventName = ko.utils.unwrapObservable(valueAccessor());\n        ko.utils.registerEventHandler(element, eventName, function(event) {\n           event.cancelBubble = true;\n           if (event.stopPropagation) {\n                event.stopPropagation();\n           }                \n        });\n    }        \n};\n\nko.bindingHandlers.toggle = {\n    init: function (element, valueAccessor) {\n        var value = valueAccessor();\n        ko.applyBindingsToNode(element, {\n            click: function () {\n                value(!value());\n            }\n        });\n    }\n};\n\nko.bindingHandlers.shopDockStyle = {\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (bindingContext.$data.shopDock() && !bindingContext.$data.shopPopout()) {\n            ko.applyBindingsToNode(element, { style: { height: (bindingContext.$data.windowHeight() - 52) + 'px', position: 'fixed', right: 0, top: '52px', 'overflow-y': 'auto' } });\n        }\n        else {\n            ko.applyBindingsToNode(element, { style: { height: 'auto', position: 'relative', right: 'initial', top: 'initial', 'overflow-y': 'initial' } });\n        }\n    },\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (bindingContext.$data.shopDock() && !bindingContext.$data.shopPopout()) {\n            ko.applyBindingsToNode(element, { style: { height: (bindingContext.$data.windowHeight() - 52) + 'px', position: 'fixed', right: 0, top: '52px', 'overflow-y': 'auto' } });\n        }\n        else {\n            ko.applyBindingsToNode(element, { style: { height: 'auto', position: 'relative', right: 'initial', top: 'initial', 'overflow-y': 'initial' } });\n        }\n    }\n};\n\nko.bindingHandlers.logger = {\n    update: function(element, valueAccessor, allBindings) {\n        //store a counter with this element\n        var count = ko.utils.domData.get(element, \"_ko_logger\") || 0,\n            data = ko.toJS(valueAccessor() || allBindings());\n\n        ko.utils.domData.set(element, \"_ko_logger\", ++count);\n\n        if (window.console && console.log) {\n            console.log(count, element, data);\n        }\n    }\n};\n\nko.bindingHandlers.tooltip = {\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var $element, options, tooltip;\n        options = ko.utils.unwrapObservable(valueAccessor());\n        $element = $(element);\n\n        // If the title is an observable, make it auto-updating.\n        if (ko.isObservable(options.title)) {\n            var isToolTipVisible = false;\n\n            $element.on('show.bs.tooltip', function () {\n                isToolTipVisible = true;\n            });\n            $element.on('hide.bs.tooltip', function () {\n                isToolTipVisible = false;\n            });\n\n            // \"true\" is the bootstrap default.\n            var origAnimation = options.animation || true;\n            options.title.subscribe(function () {\n                if (isToolTipVisible) {\n                    $element.data('bs.tooltip').options.animation = false; // temporarily disable animation to avoid flickering of the tooltip\n                    $element.tooltip('fixTitle') // call this method to update the title\n                        .tooltip('show');\n                    $element.data('bs.tooltip').options.animation = origAnimation;\n                }\n            });\n        }\n\n        tooltip = $element.data('bs.tooltip');\n        if (tooltip) {\n            $.extend(tooltip.options, options);\n        } else {\n            $element.tooltip(options);\n        }\n    }\n};\n\nko.bindingHandlers.popover = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var $element = $(element);\n        var popoverBindingValues = ko.utils.unwrapObservable(valueAccessor());\n        var template = popoverBindingValues.template || false;\n        var options = popoverBindingValues.options || {title: 'popover'};\n        var data = popoverBindingValues.data || false;\n        if (template !== false) {\n            if (data) {\n                options.content = \"<!-- ko template: { name: template, if: data, data: data } --><!-- /ko -->\";\n            }\n            else {\n                options.content = $('#' + template).html();\n            }\n            options.html = true;\n        }\n        $element.on('shown.bs.popover', function(event) {\n\n            var popoverData = $(event.target).data();\n            var popoverEl = popoverData['bs.popover'].$tip;\n            var options = popoverData['bs.popover'].options || {};\n            var button = $(event.target);\n            var buttonPosition = button.position();\n            var buttonDimensions = {\n                x: button.outerWidth(),\n                y: button.outerHeight()\n            };\n\n            if (data) {\n                ko.applyBindingsToNode(popoverEl[0], { template: { name: template, data: data } }, bindingContext);\n                //ko.applyBindings({template: template, data: data}, popoverEl[0]);\n                //ko.renderTemplate(template, data, {}, popoverEl[0], 'replaceChildren');\n            }\n            else {\n                //ko.renderTemplate(template, data, {}, popoverEl[0], 'replaceChildren');\n                //ko.applyBindings(viewModel, popoverEl[0]);\n            }\n\n            var popoverDimensions = {\n                x: popoverEl.outerWidth(),\n                y: popoverEl.outerHeight()\n            };\n\n            popoverEl.find('button[data-dismiss=\"popover\"]').click(function() {\n                button.popover('hide');\n            });\n\n            switch (options.placement) {\n                case 'right':\n                    popoverEl.css({\n                        left: buttonDimensions.x + buttonPosition.left,\n                        top: (buttonDimensions.y / 2 + buttonPosition.top) - popoverDimensions.y / 2\n                    });\n                    break;\n                case 'left':\n                    popoverEl.css({\n                        left: buttonPosition.left - popoverDimensions.x,\n                        top: (buttonDimensions.y / 2 + buttonPosition.top) - popoverDimensions.y / 2\n                    });\n                    break;\n                case 'top':\n                    popoverEl.css({\n                        left: buttonPosition.left + (buttonDimensions.x / 2 - popoverDimensions.x / 2),\n                        top: buttonPosition.top - popoverDimensions.y\n                    });\n                    break;\n                case 'bottom':\n                    popoverEl.css({\n                        left: buttonPosition.left + (buttonDimensions.x / 2 - popoverDimensions.x / 2),\n                        top: buttonPosition.top + buttonDimensions.y\n                    });\n                    break;\n            }\n        });\n\n        $element.popover(options);\n\n        return { controlsDescendantBindings: true };\n\n    }\n};\n\nko.bindingHandlers.chart = {\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var newCanvas = $('<canvas/>'),\n      data = ko.utils.unwrapObservable(valueAccessor()),\n      ctx = newCanvas[0].getContext(\"2d\"),\n      chartType = allBindingsAccessor().chartType,\n      options = allBindingsAccessor().chartOptions || {},\n      chartContext = allBindingsAccessor().chartContext;\n            \n        $(element).append(newCanvas);\n        var myChart = new Chart(ctx)[chartType](data, options);\n        ko.utils.domData.set(element, 'myChart', myChart);\n        \n  //handle disposal (if KO removes by the template binding)\n  ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n    var myChart = ko.utils.domData.get(element, 'myChart');\n    myChart.clear();\n    myChart.destroy();\n  });\n        \n  if (chartContext) {\n    chartContext(ctx);\n  }\n    },\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var newCanvas = $('<canvas/>').width(730).height(365),\n      data = ko.utils.unwrapObservable(valueAccessor()),\n      ctx = newCanvas[0].getContext(\"2d\"),\n      chartType = allBindingsAccessor().chartType,\n      options = allBindingsAccessor().chartOptions || {},\n      chartContext = allBindingsAccessor().chartContext,\n      myChart = ko.utils.domData.get(element, 'myChart');\n        \n  if (myChart) {\n    myChart.clear();\n    myChart.destroy();\n  }\n        bindingContext.$root.displayShop();\n        bindingContext.$root.sideView();\n        bindingContext.$root.shopDock();\n        $(element).empty();\n        $(element).append(newCanvas);\n  if (data.datasets.length > 0) {\n            myChart = new Chart(ctx)[chartType](data, options);\n            ko.utils.domData.set(element, 'myChart', myChart);\n  }\n  \n  if (chartContext) {\n    chartContext(ctx);\n  }\n    }\n};\n\nko.bindingHandlers.spinner = {\n    init: function(element, valueAccessor, allBindingsAccessor) {\n        //initialize datepicker with some optional options\n        var options = allBindingsAccessor().spinnerOptions || {};\n        options.icons = options.icons || { down: \"glyphicon glyphicon-triangle-bottom\", up: \"glyphicon glyphicon-triangle-top\" };\n        $(element).spinner(options);\n\n        //handle the field changing\n        ko.utils.registerEventHandler(element, \"spinchange\", function () {\n            var observable = valueAccessor();\n            observable($(element).spinner(\"value\"));\n        });\n\n        //handle disposal (if KO removes by the template binding)\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n            $(element).spinner(\"destroy\");\n        });\n\n    },\n    update: function(element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor()),\n            current = $(element).spinner(\"value\");\n\n        if (value !== current) {\n            $(element).spinner(\"value\", value);\n        }\n    }\n};\n\nko.bindingHandlers.secondTab = {\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var $root = bindingContext.$root,\n            value = ko.utils.unwrapObservable(valueAccessor());\n        ko.applyBindingsToNode(element, { css: {'second-tab': $root.isSecondTab(value) && $root.sideView()} });\n    }\n};\n\nko.bindingHandlers.hoverTab = {\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var $root = bindingContext.$root,\n            value = ko.utils.unwrapObservable(valueAccessor());\n            \n        ko.utils.registerEventHandler(element, \"mouseover\", function() {\n            $root.highlightTab(value);\n        });  \n\n        ko.utils.registerEventHandler(element, \"mouseout\", function() {\n            $root.unhighlightTab(value);\n        });      \n    }\n};\n\nko.bindingHandlers.hoverPaneStyle = {\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var $root = bindingContext.$root,\n            value = ko.utils.unwrapObservable(valueAccessor());\n        ko.applyBindingsToNode(element, { style: { opacity: !($root.sideView()) || $root.highlightedTab() == value || $root.highlightedTab() == '' ? 1 : .5 } });\n    },\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        var $root = bindingContext.$root,\n            value = ko.utils.unwrapObservable(valueAccessor());\n        ko.applyBindingsToNode(element, { style: { opacity: !($root.sideView()) || $root.highlightedTab() == value || $root.highlightedTab() == '' ? 1 : .5 } });\n    }\n};\n\nko.bindingHandlers.diffStyle = {\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        ko.applyBindingsToNode(element, { css: {'diffPos': value > 0, 'diffNeg': value < 0} });\n    },\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        ko.applyBindingsToNode(element, { css: {'diffPos': value > 0, 'diffNeg': value < 0} });\n    }\n};\n\nko.bindingHandlers.diffCss = {\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel) {\n        var value = ko.utils.unwrapObservable(valueAccessor()),\n            stat = allBindingsAccessor().diffCssStat;\n        if (stat == 'attackTime' || stat == 'bat') {\n            value = -value;\n        }\n        ko.applyBindingsToNode(element, { css: {'diffPos': value > 0, 'diffNeg': value < 0} });\n    },\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel) {\n        var value = ko.utils.unwrapObservable(valueAccessor()),\n            stat = allBindingsAccessor().diffCssStat;\n        if (stat == 'attackTime' || stat == 'bat') {\n            value = -value;\n        }\n        ko.applyBindingsToNode(element, { css: {'diffPos': value > 0, 'diffNeg': value < 0} });\n    }\n};\n\nko.bindingHandlers.jqAuto = {\n    init: function(element, valueAccessor, allBindingsAccessor, viewModel) {\n        var options = valueAccessor() || {},\n            allBindings = allBindingsAccessor(),\n            unwrap = ko.utils.unwrapObservable,\n            modelValue = allBindings.jqAutoValue,\n            source = allBindings.jqAutoSource,\n            valueProp = allBindings.jqAutoSourceValue,\n            inputValueProp = allBindings.jqAutoSourceInputValue || valueProp,\n            labelProp = allBindings.jqAutoSourceLabel || valueProp;\n\n        //function that is shared by both select and change event handlers\n        function writeValueToModel(valueToWrite) {\n            if (ko.isWriteableObservable(modelValue)) {\n               modelValue(valueToWrite );  \n            } else {  //write to non-observable\n               if (allBindings['_ko_property_writers'] && allBindings['_ko_property_writers']['jqAutoValue'])\n                        allBindings['_ko_property_writers']['jqAutoValue'](valueToWrite );    \n            }\n        }\n        \n        //on a selection write the proper value to the model\n        options.select = function(event, ui) {\n            writeValueToModel(ui.item ? ui.item.actualValue : null);\n        };\n            \n        //on a change, make sure that it is a valid value or clear out the model value\n        options.change = function(event, ui) {\n            var currentValue = $(element).val();\n            var matchingItem =  ko.utils.arrayFirst(unwrap(source), function(item) {\n               return unwrap(item[inputValueProp]) === currentValue;  \n            });\n            \n            if (!matchingItem) {\n               writeValueToModel(null);\n            }    \n        }\n        \n        \n        //handle the choices being updated in a DO, to decouple value updates from source (options) updates\n        var mappedSource = ko.dependentObservable(function() {\n            var mapped = ko.utils.arrayMap(unwrap(source), function(item) {\n                var result = {};\n                result.label = labelProp ? unwrap(item[labelProp]) : unwrap(item).toString();  //show in pop-up choices\n                result.value = inputValueProp ? unwrap(item[inputValueProp]) : unwrap(item).toString();  //show in input box\n                result.actualValue = valueProp ? unwrap(item[valueProp]) : item;  //store in model\n                return result;\n            });\n            return mapped;                \n        });\n        \n        //whenever the items that make up the source are updated, make sure that autocomplete knows it\n        mappedSource.subscribe(function(newValue) {\n           $(element).autocomplete(\"option\", \"source\", newValue); \n        });\n        \n        options.source = mappedSource();\n        \n        options.minLength = 1;\n        //initialize autocomplete\n        $(element).autocomplete(options);\n    },\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel) {\n       //update value based on a model change\n       var allBindings = allBindingsAccessor(),\n           unwrap = ko.utils.unwrapObservable,\n           modelValue = unwrap(allBindings.jqAutoValue) || '', \n           valueProp = allBindings.jqAutoSourceValue,\n           inputValueProp = allBindings.jqAutoSourceInputValue || valueProp;\n        \n       //if we are writing a different property to the input than we are writing to the model, then locate the object\n       if (valueProp && inputValueProp !== valueProp) {\n           var source = unwrap(allBindings.jqAutoSource) || [];\n           var modelValue = ko.utils.arrayFirst(source, function(item) {\n                 return unwrap(item[valueProp]) === modelValue;\n           }) || {};  //probably don't need the || {}, but just protect against a bad value          \n       } \n\n       //update the element with the value that should be shown in the input\n       $(element).val(modelValue && inputValueProp !== valueProp ? unwrap(modelValue[inputValueProp]) : modelValue.toString());    \n    }\n};\n\nko.bindingHandlers.jqAutoCombo = {\n    init: function(element, valueAccessor) {\n       var autoEl = $(\"#\" + valueAccessor());\n       \n        $(element).click(function() {\n           // close if already visible\n            if (autoEl.autocomplete(\"widget\").is(\":visible\")) {\n                autoEl.autocomplete( \"close\" );\n                return;\n            }\n\n           //autoEl.blur();\n            autoEl.autocomplete(\"search\", \" \");\n            autoEl.focus(); \n            \n        });\n        \n    }  \n}\n\nmodule.exports = ko;",
    "'use strict';\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar itemtooltipdata = {};\nvar ability_vars = {\n    '$health': 'Health',\n    '$mana': 'Mana',\n    '$armor': 'Armor',\n    '$damage': 'Damage',\n    '$str': 'Strength',\n    '$int': 'Intelligence',\n    '$agi': 'Agility',\n    '$all': 'All Attributes',\n    '$attack': 'Attack Speed',\n    '$hp_regen': 'HP Regeneration',\n    '$mana_regen': 'Mana Regeneration',\n    '$move_speed': 'Movement Speed',\n    '$evasion': 'Evasion',\n    '$spell_resist': 'Spell Resistance',\n    '$selected_attribute': 'Selected Attribute',\n    '$selected_attrib': 'Selected Attribute',\n    '$cast_range': 'Cast Range',\n    '$attack_range': 'Attack Range'\n}\n\nvar getTooltipItemDescription = function (item) {\n    var d = item.description;\n    for (var i = 0; i < item.attributes.length; i++) {\n        if (item.attributes[i].name != null) {\n            var attributeName = item.attributes[i].name;\n            var attributeValue = item.attributes[i].value[0];\n            for (var j = 1; j < item.attributes[i].value.length; j++) {\n                attributeValue += ' / ' + item.attributes[i].value[j];\n            }\n            var regexp = new RegExp('%' + attributeName + '%', 'gi');\n            d = d.replace(regexp, attributeValue );\n        }\n    }\n    var regexp = new RegExp('%%', 'gi');\n    d = d.replace(regexp,'%');\n    regexp = new RegExp('\\n', 'gi');\n    d = d.replace(/\\\\n/g, '<br>');\n    return d;\n}\n\nvar getTooltipItemAttributes = function (item) {\n    var a = '';\n    for (var i = 0; i < item.attributes.length; i++) {\n        if (item.attributes[i].tooltip != null) {\n            var attributeTooltip = item.attributes[i].tooltip;\n            var attributeValue = item.attributes[i].value[0];\n            for (var j = 1; j < item.attributes[i].value.length; j++) {\n                attributeValue += ' / ' + item.attributes[i].value[j];\n            }\n            var p = attributeTooltip.indexOf('%');\n            if (p == 0) {\n                attributeValue = attributeValue + '%';\n                attributeTooltip = attributeTooltip.slice(1);\n            }\n            var d = attributeTooltip.indexOf('$');\n            if (d != -1) {\n                a = a + attributeTooltip.slice(0, d) + ' ' + attributeValue + ' ' + ability_vars[attributeTooltip.slice(d)] + '<br>';\n            }\n            else {\n                a = a + attributeTooltip + ' ' + attributeValue + '<br>';\n            }\n        }\n    }\n    return a.trim('<br>');\n}\n\nvar getTooltipItemCooldown = function (item) {\n    var c = '';\n    for (var i = 0; i < item.cooldown.length; i++) {\n        c = c + ' ' + item.cooldown[i];\n    }\n    return c;\n}\n\nvar getTooltipItemManaCost = function (item) {\n    var c = '';\n    for (var i = 0; i < item.manacost.length; i++) {\n        if (item.manacost[i] > 0) {\n            c = c + ' ' + item.manacost[i];\n        }\n    }\n    return c;\n}\n\nvar getItemTooltipData = function(itemData, el) {\n    if (itemData['item_' + el] == undefined) {\n        return undefined;\n    }\n    if (itemtooltipdata[el] == undefined) {\n        var item = itemData['item_' + el];\n        var data = $('<div>');\n        data.append($('<span>').html(item.displayname).addClass('item_field item_name'));\n        data.append($('<span>').html(item.itemcost).addClass('item_field item_cost'));\n        data.append($('<hr>'));\n        if (item.description != null) {\n            data.append($('<div>').html(getTooltipItemDescription(item)).addClass('item_field item_description'));\n        }\n        var attributedata = getTooltipItemAttributes(item);\n        if (attributedata != '') {\n            data.append($('<div>').html(attributedata).addClass('item_field item_attributes'));\n        }\n        var cd = getTooltipItemCooldown(item);\n        var mana = getTooltipItemManaCost(item);\n        if (cd != '' || mana != '') {\n            var cdmanacost = $('<div>').addClass('item_cdmana');\n            if (cd != '') {\n                cdmanacost.append($('<span>').html(cd).addClass('item_field item_cooldown'));\n            }\n            if (mana != '') {\n                cdmanacost.append($('<span>').html(mana).addClass('item_field item_manacost'));\n            }\n            data.append(cdmanacost);\n        }\n        if (item.lore != null) {\n            data.append($('<div>').html(item.lore).addClass('item_field item_lore'));\n        }\n        itemtooltipdata[el] = data.html();\n        return data.html();\n    }\n    else {\n        return itemtooltipdata[el];\n    }\n}\n\nmodule.exports = getItemTooltipData;",
    "'use strict';\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n//require('jquery-ui');\nrequire('jquery-ui/ui/version');\nrequire('jquery-ui/ui/widget');\nrequire('jquery-ui/ui/unique-id');\nrequire('jquery-ui/ui/safe-active-element');\nrequire('jquery-ui/ui/keycode');\nrequire('jquery-ui/ui/position');\nrequire('jquery-ui/ui/focusable');\nrequire('jquery-ui/ui/tabbable');\nrequire('jquery-ui/ui/plugin');\nrequire('jquery-ui/ui/ie');\nrequire('jquery-ui/ui/data');\nrequire('jquery-ui/ui/scroll-parent');\nrequire('jquery-ui/ui/disable-selection');\nrequire('jquery-ui/ui/safe-blur');\nrequire('jquery-ui/ui/widgets/button');\nrequire('jquery-ui/ui/widgets/spinner');\nrequire('jquery-ui/ui/widgets/menu');\nrequire('jquery-ui/ui/widgets/autocomplete');\nrequire('jquery-ui/ui/widgets/mouse');\nrequire('jquery-ui/ui/widgets/draggable');\nrequire('jquery-ui/ui/widgets/resizable');\nrequire('jquery-ui/ui/widgets/dialog');\n\nvar proto = $.ui.autocomplete.prototype,\n    initSource = proto._initSource;\n\nfunction filter( array, term ) {\n    var matcher = new RegExp( $.ui.autocomplete.escapeRegex(term), \"i\" );\n    return $.grep( array, function(value) {\n        return matcher.test( $( \"<div>\" ).html( value.label || value.value || value ).text() );\n    });\n}\n\n$.extend( proto, {\n    _initSource: function() {\n        if ( this.options.html && $.isArray(this.options.source) ) {\n            this.source = function( request, response ) {\n                response( filter( this.options.source, request.term ) );\n            };\n        } else {\n            initSource.call( this );\n        }\n    },\n\n    _renderItem: function( ul, item) {\n        return $( \"<li></li>\" )\n            .data( \"item.autocomplete\", item )\n            .append( $( \"<a></a>\" )[ this.options.html ? \"html\" : \"text\" ]( item.label ) )\n            .appendTo( ul );\n    }\n});",
    "if (!Array.prototype.find) {\n  Array.prototype.find = function(predicate) {\n    'use strict';\n    if (this == null) {\n      throw new TypeError('Array.prototype.find called on null or undefined');\n    }\n    if (typeof predicate !== 'function') {\n      throw new TypeError('predicate must be a function');\n    }\n    var list = Object(this);\n    var length = list.length >>> 0;\n    var thisArg = arguments[1];\n    var value;\n\n    for (var i = 0; i < length; i++) {\n      value = list[i];\n      if (predicate.call(thisArg, value, i, list)) {\n        return value;\n      }\n    }\n    return undefined;\n  };\n}\nif (!String.prototype.startsWith) {\n    String.prototype.startsWith = function(searchString, position){\n        position = position || 0;\n        return this.substr(position, searchString.length) === searchString;\n    };\n}",
    "var ability_vars = {\n    '$health': 'Health',\n    '$mana': 'Mana',\n    '$armor': 'Armor',\n    '$damage': 'Damage',\n    '$str': 'Strength',\n    '$int': 'Intelligence',\n    '$agi': 'Agility',\n    '$all': 'All Attributes',\n    '$attack': 'Attack Speed',\n    '$hp_regen': 'HP Regen',\n    '$mana_regen': 'Mana Regen',\n    '$move_speed': 'Movement Speed',\n    '$evasion': 'Evasion',\n    '$spell_resist': 'Spell Resistance',\n    '$selected_attribute': 'Selected Attribute',\n    '$selected_attrib': 'Selected Attribute',\n    '$cast_range': 'Cast Range',\n    '$attack_range': 'Attack Range'\n};\n\nvar abilityDamageTypes = {\n    'DAMAGE_TYPE_MAGICAL': 'Magical',\n    'DAMAGE_TYPE_PURE': 'Pure',\n    'DAMAGE_TYPE_PHYSICAL': 'Physical',\n    'DAMAGE_TYPE_COMPOSITE': 'Composite',\n    'DAMAGE_TYPE_HP_REMOVAL': 'HP Removal'\n};\n\nvar abilityTooltipData = ko.observable();\n\nvar getTooltipAbilityDescription = function (item) {\n    var d = abilityTooltipData() ? abilityTooltipData()[item.name].description : '';\n    for (var i = 0; i < item.attributes.length; i++) {\n        if (item.attributes[i].name != null) {\n            var attributeName = item.attributes[i].name;\n            var attributeValue = item.attributes[i].value[0];\n            for (var j = 1; j < item.attributes[i].value.length; j++) {\n                attributeValue += ' / ' + item.attributes[i].value[j];\n            }\n            regexp = new RegExp('%' + attributeName + '%', 'gi');\n            d = d.replace(regexp, attributeValue);\n        }\n    }\n    var regexp = new RegExp('%%', 'gi');\n    d = d.replace(regexp, '%');\n    regexp = new RegExp('\\n', 'gi');\n    d = d.replace(/\\\\n/g, '<br>');\n    return d;\n}\n\nfunction AttributeTooltip(tooltip, values, sep, suffix) {\n    this.tooltip = tooltip;\n    this.values = values;\n    this.sep = sep || ' / ';\n    this.suffix = suffix || \"\";\n}\nAttributeTooltip.prototype.toString = function () {\n    var self = this;\n    return this.tooltip.toUpperCase() + ' ' + this.values.map(function (v) { return v + self.suffix; }).join(this.sep);\n}\n\nvar getTooltipAbilityAttributes = function (item) {\n    var a = [];\n    if (item.damage.length > 0 && item.damage.reduce(function(memo, num){ return memo + num; }, 0) > 0) {\n        a.push(new AttributeTooltip('DAMAGE:', item.damage));\n    }\n    for (var i = 0; i < item.attributes.length; i++) {\n        if (item.attributes[i].tooltip != null) {\n            var attributeTooltip = item.attributes[i].tooltip;\n            attributeTooltip = attributeTooltip.replace(/\\\\n/g, '');\n            var suffix = '';\n            if (attributeTooltip.indexOf('%') == 0) {\n                attributeTooltip = attributeTooltip.slice(1);\n                suffix = '%';\n            }\n            var d = attributeTooltip.indexOf('$');\n            if (d != -1) {\n                attributeTooltip = attributeTooltip.slice(0, d) + ability_vars[attributeTooltip.slice(d)] + ':';\n            }\n            a.push(new AttributeTooltip(attributeTooltip, item.attributes[i].value, ' / ', suffix));\n        }\n    }\n    return a;\n}\n\nvar getTooltipAbilityManaCost = function (hero, item) {\n    var c = '';\n    if (item.manacost.reduce(function(memo, num){ return memo + num; }, 0) == 0) {\n        return c;\n    }\n    if (item.manacost.every(function(num) { return num == item.manacost[0]; })) {\n        return item.manacost[0].toString();\n    }\n    for (var i = 0; i < 4; i++) {\n        if (item.manacost[i] != null) {\n            c = c + ' ' + item.manacost[i];\n        }\n    }\n    return c;\n}\n\nvar getTooltipAbilityCooldown = function (hero, item) {\n    var c = '';\n    if (item.cooldown.reduce(function(memo, num){ return memo + num; }, 0) == 0) {\n        return c;\n    }\n    return item.cooldown.map(function (v) {\n        var val = (\n            v - hero.cooldownReductionFlat()\n              - hero.ability().getUniqueCooldownReductionFlat(item.name)\n        ) * hero.cooldownReductionProduct();\n        return parseFloat(val.toFixed(2));\n    }).join(' ');\n    return c;\n}\n\nfunction ViewModel(params) {\n    var self = this;\n    self.hero = params.hero;\n    self.ability = params.ability;\n    self.description = ko.computed(function () {\n        return getTooltipAbilityDescription(self.ability);\n    });\n    self.damageType = abilityDamageTypes[self.ability.abilityunitdamagetype];\n    self.displayname = self.ability.displayname;\n    self.lore = ko.computed(function () {\n        if (abilityTooltipData()) {\n            return abilityTooltipData()[self.ability.name].lore\n        }\n        else {\n            return \"\";\n        }\n    });\n    self.manacost = ko.computed(function () {\n        return getTooltipAbilityManaCost(self.hero, self.ability);\n    });\n    self.cooldown = ko.computed(function () {\n        return getTooltipAbilityCooldown(self.hero, self.ability);\n    });\n    self.attributes = getTooltipAbilityAttributes(self.ability);\n}\n\nmodule.exports = {\n    viewModel: ViewModel,\n    template: \"<div>\\n    <span class=\\\"item_field pull-left item_name\\\" data-bind=\\\"text: displayname\\\"></span>\\n    <span class=\\\"item_field pull-right item_ability_damage_type\\\" style=\\\"margin-right: 10px;\\\"  data-bind=\\\"text: damageType\\\"></span>\\n    <hr style=\\\"clear: both;\\\">\\n    <div class=\\\"item_field item_description\\\" data-bind=\\\"html: description\\\"></div>\\n    <div class=\\\"item_field item_attributes\\\" data-bind=\\\"foreach: attributes\\\">\\n        <span data-bind=\\\"text: $data\\\"></span>\\n        <br>\\n    </div>\\n    <div class=\\\"item_cdmana\\\">\\n        <span class=\\\"item_field item_manacost\\\" data-bind=\\\"visible: manacost, text: manacost\\\"></span>\\n        <span class=\\\"item_field item_cooldown\\\" data-bind=\\\"visible: cooldown, text: cooldown\\\"></span>\\n    </div>\\n    <div class=\\\"item_field item_lore\\\" data-bind=\\\"text: lore\\\"></div>\\n</div>\",\n    abilityTooltipData: abilityTooltipData\n};",
    "function ViewModel(params) {\n    var self = this;\n    self.windowWidth = params.windowWidth;\n    self.windowHeight = params.windowHeight;\n    self.displayShop = params.displayShop;\n    self.displayShopItemTooltip = params.displayShopItemTooltip;\n    self.shopDock = params.shopDock;\n    self.shopDockTrigger = params.shopDockTrigger;\n    self.shopPopout = params.shopPopout;\n    self.selectedItem = params.selectedItem;\n    self.addItem = params.addItem;\n    self.changeSelectedItem = params.changeSelectedItem;\n    self.getItemTooltipData = params.getItemTooltipData;\n    self.getItemInputLabel = params.getItemInputLabel;\n    self.itemInputValue = params.itemInputValue;\n    self.itemOptions = params.itemOptions;\n}\n\nmodule.exports = {\n    viewModel: ViewModel,\n    template: \"        <div id=\\\"shop-container\\\" class=\\\"col-md-12 col-lg-4\\\" data-bind=\\\"shopDockStyle: shopDockTrigger, visible: displayShop() || shopPopout(), css: {'col-lg-4': !shopPopout()}, style: { 'padding-top': shopPopout() ? '5px' : '0px'}\\\">\\n              <button id=\\\"shop-minimize\\\" class=\\\"btn btn-default btn-xs shop-button glyphicon glyphicon-minus pull-right\\\" data-bind=\\\"toggle: displayShop, visible: displayShop()\\\" title=\\\"Minimize shop\\\"></button>\\n              <button id=\\\"shop-maximize\\\" class=\\\"btn btn-default btn-xs shop-button glyphicon glyphicon-plus pull-right\\\" data-bind=\\\"toggle: displayShop, visible: !displayShop()\\\" title=\\\"Maximize shop\\\"></button>\\n              <button class=\\\"btn btn-default btn-xs shop-button glyphicon glyphicon-new-window pull-right hidden-xs\\\" data-bind=\\\"click: shopPopout, visible: !shopPopout()\\\" title=\\\"Popout shop\\\"></button>\\n              <button class=\\\"btn btn-default btn-xs shop-button glyphicon glyphicon-align-right pull-right hidden-xs\\\" data-bind=\\\"toggle: shopDock, attr: { title: shopDock() ? 'Undock shop to right side of screen' : 'Dock shop to right side of screen' }\\\" ></button>\\n            <ul id=\\\"shoptabs\\\" class=\\\"nav nav-tabs\\\" data-bind=\\\"visible: displayShop()\\\">\\n              <li><a href=\\\"#shop_basic\\\" data-toggle=\\\"tab\\\">Basic</a></li>\\n              <li><a href=\\\"#shop_upgrade\\\" data-toggle=\\\"tab\\\">Upgrade</a></li>\\n              <li><a href=\\\"#shop_secret\\\" data-toggle=\\\"tab\\\">Secret</a></li>\\n            </ul>\\n            <div class=\\\"tab-content text-center bottom-buffer2\\\" data-bind=\\\"visible: displayShop()\\\">\\n                <div class=\\\"tab-pane active\\\" id=\\\"shop_basic\\\">\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-consumables\\\" id=\\\"consumables\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-clarity\\\" id=\\\"clarity\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-faerie_fire\\\" id=\\\"faerie_fire\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-enchanted_mango\\\" id=\\\"enchanted_mango\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-tango\\\" id=\\\"tango\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-flask\\\" id=\\\"flask\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-smoke_of_deceit\\\" id=\\\"smoke_of_deceit\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-tpscroll\\\" id=\\\"tpscroll\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-dust\\\" id=\\\"dust\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-courier\\\" id=\\\"courier\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-flying_courier\\\" id=\\\"flying_courier\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ward_observer\\\" id=\\\"ward_observer\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ward_sentry\\\" id=\\\"ward_sentry\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-tome_of_knowledge\\\" id=\\\"tome_of_knowledge\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-bottle\\\" id=\\\"bottle\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n</div>\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-attributes\\\" id=\\\"attributes\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-branches\\\" id=\\\"branches\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-gauntlets\\\" id=\\\"gauntlets\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-slippers\\\" id=\\\"slippers\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-mantle\\\" id=\\\"mantle\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-circlet\\\" id=\\\"circlet\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-belt_of_strength\\\" id=\\\"belt_of_strength\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-boots_of_elves\\\" id=\\\"boots_of_elves\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-robe\\\" id=\\\"robe\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ogre_axe\\\" id=\\\"ogre_axe\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-blade_of_alacrity\\\" id=\\\"blade_of_alacrity\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-staff_of_wizardry\\\" id=\\\"staff_of_wizardry\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-emptyitembg\\\" id=\\\"emptyitembg\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-emptyitembg\\\" id=\\\"emptyitembg\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-emptyitembg\\\" id=\\\"emptyitembg\\\"></div>\\n</div>\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-armaments\\\" id=\\\"armaments\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ring_of_protection\\\" id=\\\"ring_of_protection\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-stout_shield\\\" id=\\\"stout_shield\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-quelling_blade\\\" id=\\\"quelling_blade\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-infused_raindrop\\\" id=\\\"infused_raindrop\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-blight_stone\\\" id=\\\"blight_stone\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-orb_of_venom\\\" id=\\\"orb_of_venom\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-blades_of_attack\\\" id=\\\"blades_of_attack\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-chainmail\\\" id=\\\"chainmail\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-quarterstaff\\\" id=\\\"quarterstaff\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-helm_of_iron_will\\\" id=\\\"helm_of_iron_will\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-broadsword\\\" id=\\\"broadsword\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-claymore\\\" id=\\\"claymore\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-javelin\\\" id=\\\"javelin\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-mithril_hammer\\\" id=\\\"mithril_hammer\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n</div>\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-arcane\\\" id=\\\"arcane\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-wind_lace\\\" id=\\\"wind_lace\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-magic_stick\\\" id=\\\"magic_stick\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-sobi_mask\\\" id=\\\"sobi_mask\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ring_of_regen\\\" id=\\\"ring_of_regen\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-boots\\\" id=\\\"boots\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-gloves\\\" id=\\\"gloves\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-cloak\\\" id=\\\"cloak\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ring_of_health\\\" id=\\\"ring_of_health\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-void_stone\\\" id=\\\"void_stone\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-gem\\\" id=\\\"gem\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-lifesteal\\\" id=\\\"lifesteal\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-shadow_amulet\\\" id=\\\"shadow_amulet\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ghost\\\" id=\\\"ghost\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-blink\\\" id=\\\"blink\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n</div>\\n\\n\\n                </div>\\n                <div class=\\\"tab-pane\\\" id=\\\"shop_upgrade\\\">\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-common\\\" id=\\\"common\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-magic_wand\\\" id=\\\"magic_wand\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-null_talisman\\\" id=\\\"null_talisman\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-wraith_band\\\" id=\\\"wraith_band\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-poor_mans_shield\\\" id=\\\"poor_mans_shield\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-bracer\\\" id=\\\"bracer\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-soul_ring\\\" id=\\\"soul_ring\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-phase_boots\\\" id=\\\"phase_boots\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-power_treads\\\" id=\\\"power_treads\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-oblivion_staff\\\" id=\\\"oblivion_staff\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-pers\\\" id=\\\"pers\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-hand_of_midas\\\" id=\\\"hand_of_midas\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-travel_boots\\\" id=\\\"travel_boots\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-moon_shard\\\" id=\\\"moon_shard\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-emptyitembg\\\" id=\\\"emptyitembg\\\"></div>\\n</div>\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-support\\\" id=\\\"support\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ring_of_basilius\\\" id=\\\"ring_of_basilius\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-iron_talon\\\" id=\\\"iron_talon\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-headdress\\\" id=\\\"headdress\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-buckler\\\" id=\\\"buckler\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-urn_of_shadows\\\" id=\\\"urn_of_shadows\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-tranquil_boots\\\" id=\\\"tranquil_boots\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ring_of_aquila\\\" id=\\\"ring_of_aquila\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-medallion_of_courage\\\" id=\\\"medallion_of_courage\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-arcane_boots\\\" id=\\\"arcane_boots\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ancient_janggo\\\" id=\\\"ancient_janggo\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-mekansm\\\" id=\\\"mekansm\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-vladmir\\\" id=\\\"vladmir\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-pipe\\\" id=\\\"pipe\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-guardian_greaves\\\" id=\\\"guardian_greaves\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n</div>\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-caster\\\" id=\\\"caster\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-glimmer_cape\\\" id=\\\"glimmer_cape\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-force_staff\\\" id=\\\"force_staff\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-veil_of_discord\\\" id=\\\"veil_of_discord\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-aether_lens\\\" id=\\\"aether_lens\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-necronomicon\\\" id=\\\"necronomicon\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-dagon\\\" id=\\\"dagon\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-cyclone\\\" id=\\\"cyclone\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-solar_crest\\\" id=\\\"solar_crest\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-rod_of_atos\\\" id=\\\"rod_of_atos\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-orchid\\\" id=\\\"orchid\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ultimate_scepter\\\" id=\\\"ultimate_scepter\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-refresher\\\" id=\\\"refresher\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-sheepstick\\\" id=\\\"sheepstick\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-octarine_core\\\" id=\\\"octarine_core\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n</div>\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-weapons\\\" id=\\\"weapons\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-lesser_crit\\\" id=\\\"lesser_crit\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-armlet\\\" id=\\\"armlet\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-invis_sword\\\" id=\\\"invis_sword\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-basher\\\" id=\\\"basher\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-bfury\\\" id=\\\"bfury\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ethereal_blade\\\" id=\\\"ethereal_blade\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-silver_edge\\\" id=\\\"silver_edge\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-radiance\\\" id=\\\"radiance\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-monkey_king_bar\\\" id=\\\"monkey_king_bar\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-greater_crit\\\" id=\\\"greater_crit\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-butterfly\\\" id=\\\"butterfly\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-rapier\\\" id=\\\"rapier\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-abyssal_blade\\\" id=\\\"abyssal_blade\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-bloodthorn\\\" id=\\\"bloodthorn\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n</div>\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-armor\\\" id=\\\"armor\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-hood_of_defiance\\\" id=\\\"hood_of_defiance\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-vanguard\\\" id=\\\"vanguard\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-blade_mail\\\" id=\\\"blade_mail\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-soul_booster\\\" id=\\\"soul_booster\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-crimson_guard\\\" id=\\\"crimson_guard\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-black_king_bar\\\" id=\\\"black_king_bar\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-lotus_orb\\\" id=\\\"lotus_orb\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-shivas_guard\\\" id=\\\"shivas_guard\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-bloodstone\\\" id=\\\"bloodstone\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-manta\\\" id=\\\"manta\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-sphere\\\" id=\\\"sphere\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-hurricane_pike\\\" id=\\\"hurricane_pike\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-assault\\\" id=\\\"assault\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-heart\\\" id=\\\"heart\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n</div>\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-artifacts\\\" id=\\\"artifacts\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-mask_of_madness\\\" id=\\\"mask_of_madness\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-helm_of_the_dominator\\\" id=\\\"helm_of_the_dominator\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-dragon_lance\\\" id=\\\"dragon_lance\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-sange\\\" id=\\\"sange\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-yasha\\\" id=\\\"yasha\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-echo_sabre\\\" id=\\\"echo_sabre\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-maelstrom\\\" id=\\\"maelstrom\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-diffusal_blade\\\" id=\\\"diffusal_blade\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-desolator\\\" id=\\\"desolator\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-heavens_halberd\\\" id=\\\"heavens_halberd\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-sange_and_yasha\\\" id=\\\"sange_and_yasha\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-skadi\\\" id=\\\"skadi\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-mjollnir\\\" id=\\\"mjollnir\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-satanic\\\" id=\\\"satanic\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n</div>\\n                </div>\\n                <div class=\\\"tab-pane\\\" id=\\\"shop_secret\\\">\\n<div class=\\\"shop-column\\\">\\n  <div class=\\\"hc-shop hc-shop-secret\\\" id=\\\"secret\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-energy_booster\\\" id=\\\"energy_booster\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-vitality_booster\\\" id=\\\"vitality_booster\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-point_booster\\\" id=\\\"point_booster\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-platemail\\\" id=\\\"platemail\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-talisman_of_evasion\\\" id=\\\"talisman_of_evasion\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-hyperstone\\\" id=\\\"hyperstone\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-ultimate_orb\\\" id=\\\"ultimate_orb\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-demon_edge\\\" id=\\\"demon_edge\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-mystic_staff\\\" id=\\\"mystic_staff\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-eagle\\\" id=\\\"eagle\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-reaver\\\" id=\\\"reaver\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n  <div class=\\\"img-rounded items-sprite-50x36 items-sprite-relic\\\" id=\\\"relic\\\" data-bind=\\\"click: changeSelectedItem, event: { dblclick: addItem }\\\"></div>\\n</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" data-bind=\\\"visible: displayShop()\\\">\\n                <div class=\\\"input-group\\\">\\n                    <input class=\\\"form-control\\\" id=\\\"auto\\\" data-bind=\\\"jqAuto: { autoFocus: true, html: true }, jqAutoSource: itemOptions, jqAutoValue: selectedItem, jqAutoSourceLabel: 'displayname', jqAutoSourceInputValue: 'name', jqAutoSourceValue: 'value'\\\" />\\n                    <span class=\\\"input-group-btn\\\">\\n                        <button class=\\\"btn btn-default\\\" data-bind=\\\"jqAutoCombo: 'auto'\\\"><span class=\\\"glyphicon glyphicon-search\\\"></span></button>\\n                    </span>\\n                </div>\\n            </div>\\n\\n            <div data-bind=\\\"visible: selectedItem() && displayShop()\\\">\\n                <button class=\\\"btn btn-default btn-xs glyphicon glyphicon-minus pull-right\\\" data-bind=\\\"toggle: displayShopItemTooltip, visible: displayShopItemTooltip()\\\" title=\\\"Hide item description\\\"></button>\\n                <button class=\\\"btn btn-default btn-xs glyphicon glyphicon-plus pull-right\\\" data-bind=\\\"toggle: displayShopItemTooltip, visible: !displayShopItemTooltip()\\\" title=\\\"Show item description\\\"></button>\\n                <div data-bind=\\\"html: getItemTooltipData, css: { 'hide-shop-item-details': !displayShopItemTooltip() }\\\"></div>\\n                <div style=\\\"margin-top:10px;margin-bottom:10px;\\\" class=\\\"form-inline\\\" data-bind=\\\"visible: getItemInputLabel() != ''\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"iteminput\\\" data-bind=\\\"text: getItemInputLabel\\\"></label>\\n                        <input class=\\\"form-control\\\" id=\\\"iteminput\\\" data-bind=\\\"value: itemInputValue\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group text-right\\\">\\n                    <button class=\\\"btn btn-default\\\" data-bind=\\\"click: addItem\\\">Add Item</button>\\n                </div>\\n            </div>\\n        </div>\"\n};",
    "'use strict';\nvar ko = require('./herocalc_knockout');\nvar abilityData = require(\"./herocalc_abilitydata\");\nvar TalentController = require(\"./hero/TalentController\");\n\nvar AbilityModel = function (a, h) {\n    var self = this;\n    self.hero = h;\n    self.abilityData = abilityData;\n    self.hasScepter = ko.observable(false);\n    self.isShapeShiftActive = ko.observable(false);\n    self.abilities = a;\n    self._abilities = self.abilities();\n    for (var i = 0; i < self.abilities().length; i++) {\n        self._abilities[i].level = ko.observable(0);\n        self._abilities[i].isActive = ko.observable(false);\n        self._abilities[i].isDetail = ko.observable(false);\n        self._abilities[i].baseDamage = ko.observable(0);\n        self._abilities[i].baseDamageReductionPct = ko.observable(0);\n        self._abilities[i].baseDamageMultiplier = ko.observable(0);\n        self._abilities[i].bash = ko.observable(0);\n        self._abilities[i].bashBonusDamage = ko.observable(0);\n        self._abilities[i].bonusDamage = ko.observable(0);\n        self._abilities[i].bonusDamageOrb = ko.observable(0);\n        self._abilities[i].bonusDamagePct = ko.observable(0);\n        self._abilities[i].bonusDamagePrecisionAura = ko.observable(0);\n        self._abilities[i].bonusDamageReduction = ko.observable(0);\n        self._abilities[i].bonusHealth = ko.observable(0);\n        self._abilities[i].bonusStrength = ko.observable(0);\n        self._abilities[i].bonusStrength2 = ko.observable(0);\n        self._abilities[i].bonusAgility = ko.observable(0);\n        self._abilities[i].bonusAgility2 = ko.observable(0);\n        self._abilities[i].bonusInt = ko.observable(0);\n        self._abilities[i].bonusAllStatsReduction = ko.observable(0);\n        self._abilities[i].damageAmplification = ko.observable(0);\n        self._abilities[i].damageReduction = ko.observable(0);\n        self._abilities[i].evasion = ko.observable(0);\n        self._abilities[i].magicResist = ko.observable(0);\n        self._abilities[i].manaregen = ko.observable(0);\n        self._abilities[i].manaregenreduction = ko.observable(0);\n        self._abilities[i].missChance = ko.observable(0);\n        self._abilities[i].movementSpeedFlat = ko.observable(0);\n        self._abilities[i].movementSpeedPct = ko.observable(0);\n        self._abilities[i].movementSpeedPctReduction = ko.observable(0);\n        self._abilities[i].turnRateReduction = ko.observable(0);\n        self._abilities[i].attackrange = ko.observable(0);\n        self._abilities[i].attackspeed = ko.observable(0);\n        self._abilities[i].attackspeedreduction = ko.observable(0);\n        self._abilities[i].armor = ko.observable(0);\n        self._abilities[i].armorReduction = ko.observable(0);\n        self._abilities[i].healthregen = ko.observable(0);\n        self._abilities[i].lifesteal = ko.observable(0);\n        self._abilities[i].visionnight = ko.observable(0);\n        self._abilities[i].visionday = ko.observable(0);\n    }\n    self.abilityControlData = {};\n    self.abilitySettingsData = function (data, parent, index) {\n        if (self.abilityControlData[data] == undefined) {\n            return self.processAbility(data, parent, index, self.abilityData[data]);\n        }\n        else {\n            return self.abilityControlData[data];\n        }\n    }\n    \n    self.processAbility = function (data, parent, index, args) {\n        var result = {};\n        result.data = [];\n        var v;\n        var v_list = [];\n        for (var i=0; i < args.length; i++) {\n            switch (args[i].controlType) {\n                case 'input':\n                    v = ko.observable(0).extend({ numeric: 2 });\n                    v.controlValueType = args[i].controlValueType;\n                    v_list.push(v);\n                    result.data.push({ labelName: args[i].label.toUpperCase() + ':', controlVal: v, controlType: args[i].controlType, display: args[i].display });\n                break;\n                case 'checkbox':\n                    v = ko.observable(false);\n                    v.controlValueType = args[i].controlValueType;\n                    v_list.push(v);\n                    result.data.push({ labelName: args[i].label.toUpperCase() + '?', controlVal: v, controlType: args[i].controlType, display: args[i].display });\n                break;\n                case 'radio':\n                    v = ko.observable(args[i].controlOptions[0].value);\n                    v.controlValueType = args[i].controlValueType;\n                    v_list.push(v);\n                    result.data.push({ labelName: args[i].label.toUpperCase() + '?', controlVal: v, controlType: args[i].controlType, display: args[i].display, controlOptions: args[i].controlOptions });\n                break;\n                case 'method':\n                case 'text':\n                    // single input abilities\n                    if (args[i].controls == undefined) {\n                        if (args[i].noLevel) {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    var _ability = self.abilities().find(function(b) {\n                                        return b.name == data;\n                                    });\n                                    return self.getAbilityAttributeValue(_ability.attributes, attributeName, 0);\n                                })};\n                            };\n                        }\n                        else {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    var _ability = self.abilities().find(function(b) {\n                                        return b.name == data;\n                                    });\n                                    return self.getAbilityAttributeValue(_ability.attributes, attributeName, _ability.level());\n                                })};\n                            };\n                        }\n                        var g = attributeValue(args[i].attributeName)\n                        var r = self.getComputedFunction(v, g.fn, args[i].fn, parent, index, self, args[i].returnProperty, undefined, data);\n                        if (args[i].ignoreTooltip) {\n                            var tooltip = args[i].label || args[i].attributeName;\n                        }\n                        else {\n                            var tooltip = self.getAbilityAttributeTooltip(self.abilities()[index].attributes, args[i].attributeName) || args[i].label || args[i].attributeName;\n                        }\n                        result.data.push({ labelName: tooltip.toUpperCase(), controlVal: r, controlType: args[i].controlType, display: args[i].display, clean: g.fn });\n                    }\n                    // multi input abilities\n                    else {\n                        if (args[i].noLevel) {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    return self.getAbilityAttributeValue(self.abilities()[index].attributes, attributeName, 0);\n                                })};\n                            };\n                        }\n                        else {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    return self.getAbilityAttributeValue(self.abilities()[index].attributes, attributeName, self.abilities()[index].level());\n                                })};\n                            };\n                        }\n                        var g = attributeValue(args[i].attributeName)\n                        var r = self.getComputedFunction(v_list, g.fn, args[i].fn, parent, index, self, args[i].returnProperty, args[i].controls, data);\n                        if (args[i].ignoreTooltip) {\n                            var tooltip = args[i].label || args[i].attributeName;\n                        }\n                        else {\n                            var tooltip = self.getAbilityAttributeTooltip(self.abilities()[index].attributes, args[i].attributeName) || args[i].label || args[i].attributeName;\n                        }\n                        result.data.push({ labelName: tooltip.toUpperCase(), controlVal: r, controlType: args[i].controlType, display: args[i].display, clean: g.fn });\n                    }\n                    \n                    if (args[i].controlType == 'method') {\n                        v_list.push(r);\n                    }\n                break;\n            }\n        }\n        self.abilityControlData[data] = result;\n        return result;\n    }\n\n    self.getComputedFunction = function (v, attributeValue, fn, parent, index, abilityModel, returnProperty, controls, abilityName) {\n        var _ability = abilityModel.abilities().find(function(b) {\n            return b.name == abilityName;\n        });\n        return ko.pureComputed(function () {                \n            var inputValue;\n            if (controls == undefined) {\n                if (v == undefined) {\n                    inputValue = v;\n                }\n                else if (typeof v() == 'boolean') {\n                    inputValue = v();\n                }\n                else if (v.controlValueType == undefined) {\n                    inputValue = parseFloat(v());\n                }\n                else if (v.controlValueType == 'string') {\n                    inputValue = v();\n                }\n                else {\n                    inputValue = parseFloat(v());\n                }\n            }\n            else {\n                var v_list = [];\n                for (var i=0;i<controls.length;i++) {\n                    switch (typeof v[controls[i]]()) {\n                        case 'boolean':\n                        case 'object':\n                            v_list.push(v[controls[i]]());\n                        break;\n                        default:\n                            v_list.push(parseFloat(v[controls[i]]()));\n                        break;\n                    }\n                }\n                inputValue = v_list;\n            }\n            \n            var returnVal = fn.call(this, inputValue, attributeValue(), parent, index, abilityModel, _ability, TalentController);\n            if (returnProperty != undefined) {\n                _ability[returnProperty](returnVal);\n            }\n            return returnVal;\n        }, this);\n    }\n    \n    self.getAbilityLevelByAbilityName = function (abilityName) {\n        for (var i = 0; i < self.abilities().length; i++) {\n            if (self._abilities[i].name == abilityName) {\n                return self._abilities[i].level();\n            }\n        }\n        return -1;\n    }\n\n    self.getAbilityByName = function (abilityName) {\n        for (var i = 0; i < self.abilities().length; i++) {\n            if (self._abilities[i].name == abilityName) {\n                return self._abilities[i];\n            }\n        }\n        return undefined;\n    }\n\n    self.getAbilityPropertyValue = function (ability, property) {\n        return parseFloat(ko.utils.unwrapObservable(ability[property])[ability.level()-1]);\n    }\n    \n    self.getAttributeBonusLevel = function () {\n        for (var i = 0; i < self.abilities().length; i++) {\n            if (self._abilities[i].name == 'attribute_bonus') {\n                return self._abilities[i].level();\n            }\n        }\n        return 0;        \n    }\n    \n    self.getAllStatsReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {                    \n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        /*switch(attribute.name) {\n                            // invoker_quas\n                            case 'bonus_strength':\n                                totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                            break;\n                        }*/\n                    }\n                }\n                else if (ability.bonusAllStatsReduction != undefined) {\n                    // slark_essence_shift\n                    totalAttribute+=ability.bonusAllStatsReduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getStrengthReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {                    \n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        /*switch(attribute.name) {\n                            // invoker_quas\n                            case 'bonus_strength':\n                                totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                            break;\n                        }*/\n                    }\n                }\n                else if (ability.bonusStrength != undefined && ability.name == 'undying_decay') {\n                    // undying_decay\n                    totalAttribute-=ability.bonusStrength();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getStrength = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // sven_gods_strength\n                                case 'gods_strength_bonus_str':\n                                    totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (ability.bonusStrength != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                            // pudge_flesh_heap,morphling_morph_str,morphling_morph_agi,undying_decay\n                            totalAttribute+=ability.bonusStrength();\n                        }\n                    }\n                    if (ability.bonusStrength2 != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                            // morphling_morph_str\n                            totalAttribute+=ability.bonusStrength2();\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAgility = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // drow_ranger_marksmanship\n                                case 'marksmanship_agility_bonus':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (ability.bonusAgility != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                            // morphling_morph_agi,morphling_morph_str\n                            totalAttribute+=ability.bonusAgility();\n                        }\n                    }\n                    if (ability.bonusAgility2 != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                            // morphling_morph_agi,morphling_morph_str\n                            totalAttribute+=ability.bonusAgility2();\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getIntelligence = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // invoker_exort\n                            /*    case 'bonus_intelligence':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;*/\n                            }\n                        }\n                    }\n                }\n                /*else if (ability.bonusInt != undefined) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1) || ability.name == 'invoker_exort') {\n                        // invoker_exort\n                        totalAttribute+=ability.bonusInt();\n                    }\n                }*/\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getArmor = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // axe_berserkers_call,dragon_knight_dragon_blood,troll_warlord_berserkers_rage,lycan_shapeshift,enraged_wildkin_toughness_aura\n                            case 'bonus_armor':\n                                if (ability.name != 'templar_assassin_meld') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // sven_warcry\n                            case 'warcry_armor':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // lich_frost_armor,ogre_magi_frost_armor\n                            case 'armor_bonus':\n                                if (ability.name == 'lich_frost_armor' || ability.name == 'ogre_magi_frost_armor') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.armor != undefined) {\n                    // shredder_reactive_armor,visage_gravekeepers_cloak\n                    totalAttribute+=ability.armor();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getArmorBaseReduction = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                //if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        //elder_titan_natural_order\n                        case 'elder_titan_natural_order':\n                            totalAttribute *= (1-self.getAbilityAttributeValue(self._abilities[i].attributes, 'armor_reduction_pct', ability.level())/100);\n                        break;\n                    }\n                //}\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getArmorReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        //templar_assassin_meld\n                        case 'templar_assassin_meld':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'bonus_armor', ability.level());\n                        break;\n                        // tidehunter_gush\n                        case 'tidehunter_gush':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'armor_bonus', ability.level());\n                        break;\n                        // naga_siren_rip_tide\n                        case 'naga_siren_rip_tide':\n                        // slardar_amplify_damage\n                        case 'slardar_amplify_damage':\n                        // vengefulspirit_wave_of_terror\n                        case 'vengefulspirit_wave_of_terror':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'armor_reduction', ability.level());\n                        break;\n                        // nevermore_dark_lord\n                        case 'nevermore_dark_lord':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'presence_armor_reduction', ability.level());\n                        break;\n                    }\n                }\n                else if (ability.armorReduction != undefined) {\n                    // alchemist_acid_spray\n                    totalAttribute+=ability.armorReduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getHealth = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // lone_druid_true_form,lycan_shapeshift,troll_warlord_berserkers_rage\n                            case 'bonus_hp':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // lone_druid_synergy\n                            case 'true_form_hp_bonus':\n                                if (self.isTrueFormActive()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bonusHealth != undefined) {\n                    // clinkz_death_pact,lycan_howl\n                    totalAttribute+=ability.bonusHealth();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.isTrueFormActive = function () {\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.isActive() && ability.name == 'lone_druid_true_form') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    self.getHealthRegen = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // alchemist_chemical_rage, dragon_knight_dragon_blood\n                            case 'bonus_health_regen':\n                            // broodmother_spin_web\n                            case 'heath_regen':\n                            // omniknight_guardian_angel,treant_living_armor,satyr_hellcaller_unholy_aura\n                            case 'health_regen':\n                            // legion_commander_press_the_attack\n                            case 'hp_regen':\n                            // lycan_feral_impulse\n                            case 'bonus_hp_regen':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.healthregen != undefined) {\n                    // shredder_reactive_armor,invoker_quas,necrolyte_sadist\n                    totalAttribute+=ability.healthregen();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getMana = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                //if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // obsidian_destroyer_essence_aura\n                            case 'bonus_mana':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                //}\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getManaRegen = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // alchemist_chemical_rage\n                            case 'bonus_mana_regen':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.manaregen != undefined) {\n                    // necrolyte_sadist\n                    totalAttribute+=ability.manaregen();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getManaRegenArcaneAura = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                //if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // crystal_maiden_brilliance_aura\n                            case 'mana_regen':\n                                if (ability.name == 'crystal_maiden_brilliance_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                //}\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getManaRegenReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                /*if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        //switch(attribute.name) {\n                        //    // \n                        //    case '':\n                        //        totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                        //    break;\n                        //}\n                    }\n                }\n                else*/ if (ability.manaregenreduction != undefined) {\n                    // pugna_nether_ward\n                    totalAttribute+=ability.manaregenreduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAttackRange = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // winter_wyvern_arctic_burn\n                                case 'attack_range_bonus':\n                                // templar_assassin_psi_blades,sniper_take_aim\n                                case 'bonus_attack_range':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;\n                                // terrorblade_metamorphosis,troll_warlord_berserkers_rage\n                                case 'bonus_range':\n                                    if (ability.name == 'terrorblade_metamorphosis') {\n                                        totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                    if (ability.name == 'troll_warlord_berserkers_rage') {\n                                        totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                break;\n                                // tiny_grow\n                                case 'bonus_range_scepter':\n                                    if (ability.name == 'tiny_grow' && self.hasScepter()) {\n                                        totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                break;\n                                // enchantress_impetus\n                                case 'bonus_attack_range_scepter':\n                                    if (ability.name == 'enchantress_impetus' && self.hasScepter()) {\n                                        totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                break;\n                            }\n                        }\n                        // lone_druid_true_form\n                        if (ability.name == 'lone_druid_true_form') {\n                            totalAttribute -= 422;\n                        }\n                    }\n                    else if (ability.name == 'enchantress_impetus' && self.hasScepter()) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                              case 'bonus_attack_range_scepter':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                              break;\n                            }\n                        }\n                    }\n                }\n                else if (ability.attackrange != undefined) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        // dragon_knight_elder_dragon_form\n                        totalAttribute+=ability.attackrange();\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAttackSpeed = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // abaddon_frostmourne,troll_warlord_battle_trance\n                            case 'attack_speed':\n                            // visage_grave_chill\n                            case 'attackspeed_bonus':\n                            // mirana_leap\n                            case 'leap_speedbonus_as':\n                            // life_stealer\n                            case 'attack_speed_bonus':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // clinkz_strafe,ursa_overpower\n                            case 'attack_speed_bonus_pct':\n                                if (ability.name == 'clinkz_strafe' || ability.name == 'ursa_overpower') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // axe_culling_blade,necronomicon_archer_aoe\n                            case 'speed_bonus':\n                                if (ability.name == 'axe_culling_blade' || ability.name == 'necronomicon_archer_aoe') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // ancient_apparition_chilling_touch\n                            case 'attack_speed_pct':\n                                if (ability.name == 'ancient_apparition_chilling_touch') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // beastmaster_inner_beast,lycan_feral_impulse,lone_druid_rabid,tiny_grow,phantom_assassin_phantom_strike,windrunner_focusfire,ogre_magi_bloodlust,centaur_khan_endurance_aura\n                            case 'bonus_attack_speed':\n                                if (ability.name == 'beastmaster_inner_beast' \n                                 || ability.name == 'lycan_feral_impulse' \n                                 || ability.name == 'lone_druid_rabid' \n                                 || ability.name == 'tiny_grow' \n                                 || ability.name == 'phantom_assassin_phantom_strike' \n                                 || ability.name == 'windrunner_focusfire' \n                                 || ability.name == 'ogre_magi_bloodlust'\n                                 || ability.name == 'centaur_khan_endurance_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.attackspeed != undefined) {\n                    // troll_warlord_fervor,wisp_overcharge,lina_fiery_soul,invoker_alacrity,invoker_wex,huskar_berserkers_blood\n                    totalAttribute+=ability.attackspeed();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getAttackSpeedReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // night_stalker_void,crystal_maiden_crystal_nova,ghost_frost_attack,ogre_magi_frost_armor,polar_furbolg_ursa_warrior_thunder_clap\n                            case 'attackspeed_slow':\n                            // lich_frost_armor,lich_frost_nova,enchantress_untouchable\n                            case 'slow_attack_speed':\n                            // beastmaster_primal_roar\n                            case 'slow_attack_speed_pct':\n                            // storm_spirit_overload\n                            case 'overload_attack_slow':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // omniknight_degen_aura\n                            case 'speed_bonus':\n                                if (ability.name == 'omniknight_degen_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // tusk_frozen_sigil,crystal_maiden_freezing_field\n                            case 'attack_slow':\n                                if (ability.name == 'crystal_maiden_freezing_field' && !self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                                else if (ability.name == 'tusk_frozen_sigil') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            case 'attack_slow_scepter':\n                                if (ability.name == 'crystal_maiden_freezing_field' && self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // faceless_void_time_walk\n                            case 'attack_speed_pct':\n                                if (ability.name == 'faceless_void_time_walk') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // bounty_hunter_jinada\n                            case 'bonus_attackspeed':\n                                if (ability.name == 'bounty_hunter_jinada') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // brewmaster_thunder_clap\n                            case 'attack_speed_slow':\n                                if (ability.name == 'brewmaster_thunder_clap') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // medusa_stone_gaze\n                            case 'slow':\n                                if (ability.name == 'medusa_stone_gaze') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // visage_grave_chill\n                            case 'attackspeed_bonus':\n                                totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // abaddon_frostmourne\n                            case 'attack_slow_tooltip':\n                                if (ability.name == 'abaddon_frostmourne') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                    if (ability.name == 'enraged_wildkin_tornado') {\n                        totalAttribute -= 15;\n                    }\n                }\n                else if (ability.attackspeedreduction != undefined) {\n                    // viper_viper_strike,viper_corrosive_skin,jakiro_liquid_fire,lich_chain_frost,sandking_epicenter,earth_spirit_rolling_boulder\n                    totalAttribute+=ability.attackspeedreduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    self.getBash = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // slardar_bash\n                            case 'chance':\n                            // sniper_headshot\n                            case 'proc_chance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bash != undefined) {\n                    // spirit_breaker_greater_bash,faceless_void_time_lock\n                    totalAttribute *= (1 - ability.bash()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });    \n    self.getBaseDamage = ko.computed(function () {\n        var totalAttribute = 0;\n        var totalMultiplier = 1;\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // tiny_grow,terrorblade_metamorphosis\n                            case 'bonus_damage':\n                                if (ability.name == 'tiny_grow' || ability.name == 'terrorblade_metamorphosis') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                else {\n                    if (ability.baseDamageMultiplier != undefined) {\n                        // earthshaker_enchant_totem\n                        totalMultiplier += ability.baseDamageMultiplier()/100;\n                        /*totalAttribute += ability.baseDamage();\n                        sources[ability.name] = {\n                            'damage': ability.baseDamage(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        }*/\n                    }\n                    if (ability.baseDamage != undefined) {\n                        // clinkz_death_pact\n                        totalAttribute += ability.baseDamage();\n                        sources[ability.name] = {\n                            'damage': ability.baseDamage(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        }\n                    }\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute, multiplier: totalMultiplier };\n    });\n    \n    self.getSelfBaseDamageReductionPct = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // medusa_split_shot\n                            case 'damage_modifier':\n                                totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // windrunner_focusfire\n                            case 'focusfire_damage_reduction':\n                                if (!self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                            case 'focusfire_damage_reduction_scepter':\n                                if (self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getBaseDamageReductionPct = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // vengefulspirit_command_aura\n                            case 'bonus_damage_pct':\n                                if (ability.name == 'vengefulspirit_command_aura') {\n                                    totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.baseDamageReductionPct != undefined) {\n                    // nevermore_requiem\n                    totalAttribute *= (1 + ability.baseDamageReductionPct()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getBAT = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // troll_warlord_berserkers_rage,alchemist_chemical_rage,lone_druid_true_form,lycan_shapeshift\n                            case 'base_attack_time':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    self.getBonusDamage = ko.computed(function () {\n        var totalAttribute = 0;\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // broodmother_insatiable_hunger,luna_lunar_blessing,templar_assassin_refraction,templar_assassin_meld,troll_warlord_berserkers_rage,lone_druid_true_form_battle_cry\n                            case 'bonus_damage':\n                                if (ability.name == 'broodmother_insatiable_hunger' || ability.name == 'luna_lunar_blessing'\n                                 || ability.name == 'templar_assassin_refraction' || ability.name == 'templar_assassin_meld'\n                                 || ability.name == 'troll_warlord_berserkers_rage' || ability.name == 'lone_druid_true_form_battle_cry') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                    if (ability.name == 'storm_spirit_overload') {\n                        totalAttribute += self.getAbilityPropertyValue(ability, 'damage');\n                        sources[ability.name] = {\n                            'damage': self.getAbilityPropertyValue(ability, 'damage'),\n                            'damageType': 'magic',\n                            'displayname': ability.displayname\n                        }                        \n                    }\n                }\n                else if (ability.bonusDamage != undefined && ability.bonusDamage() != 0) {\n                    // nevermore_necromastery,ursa_fury_swipes,ursa_enrage,invoker_alacrity,invoker_exort,elder_titan_ancestral_spirit,spectre_desolate,razor_static_link,lycan_howl\n                    totalAttribute+=ability.bonusDamage();\n                    sources[ability.name] = {\n                        'damage': ability.bonusDamage(),\n                        'damageType': ability.name == 'spectre_desolate' ? 'pure' : 'physical',\n                        'displayname': ability.displayname\n                    }\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    });\n\n    self.getBonusDamagePercent = ko.computed(function () {\n        var totalAttribute = 0;\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // bloodseeker_bloodrage\n                            case 'damage_increase_pct':\n                                if (ability.name == 'bloodseeker_bloodrage') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // magnataur_empower,vengefulspirit_command_aura,alpha_wolf_command_aura\n                            case 'bonus_damage_pct':\n                                if (ability.name == 'magnataur_empower' || ability.name == 'vengefulspirit_command_aura' || ability.name == 'alpha_wolf_command_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // lycan_feral_impulse\n                            case 'bonus_damage':\n                                if (ability.name == 'lycan_feral_impulse') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // sven_gods_strength\n                            case 'gods_strength_damage':\n                                if (ability.name == 'sven_gods_strength' && self.hero != undefined && self.hero.heroId() == 'sven') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            case 'gods_strength_damage_scepter':\n                                if (ability.name == 'sven_gods_strength' && self.hero == undefined) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                /*else if (ability.bonusDamagePct != undefined && ability.bonusDamagePct() != 0) {\n                    // bloodseeker_bloodrage\n                    // totalAttribute+=ability.bonusDamagePct()/100;\n                    // sources[ability.name] = {\n                        // 'damage': ability.bonusDamagePct()/100,\n                        // 'damageType': 'physical',\n                        // 'displayname': ability.displayname\n                    // }\n                }*/\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    });\n\n    self.getBonusDamageBackstab = ko.computed(function () {\n        var totalAttribute1 = 0;\n        var totalAttribute2 = 0;\n        var sources = [];\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.name == 'riki_backstab') {\n                if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // riki_backstab\n                            case 'damage_multiplier':\n                                totalAttribute1 += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                sources.push({\n                                    'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                    'damageType': 'physical',\n                                    'displayname': ability.displayname\n                                });\n                            break;\n                        }\n                    }/*\n                    if (ability.bonusDamageBackstab != undefined) {\n                        // damage_multiplier\n                        totalAttribute2+=ability.bonusDamageBackstab();\n                        sources.push({\n                            'damage': ability.bonusDamageBackstab(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        });\n                    }\n                    */\n                }\n            }\n        }\n        return { sources: sources, total: [totalAttribute1,totalAttribute2] };\n    });\n    \n    self.getBonusDamagePrecisionAura = ko.computed(function () {\n        var totalAttribute1 = 0;\n        var totalAttribute2 = 0;\n        var sources = [];\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.name == 'drow_ranger_trueshot') {\n                if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // drow_ranger_trueshot\n                            case 'trueshot_ranged_damage':\n                                totalAttribute1 += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                sources.push({\n                                    'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                    'damageType': 'physical',\n                                    'displayname': ability.displayname\n                                });\n                            break;\n                        }\n                    }\n                    if (ability.bonusDamagePrecisionAura != undefined) {\n                        // drow_ranger_trueshot\n                        totalAttribute2+=ability.bonusDamagePrecisionAura();\n                        sources.push({\n                            'damage': ability.bonusDamagePrecisionAura(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        });\n                    }\n                }\n            }\n        }\n        return { sources: sources, total: [totalAttribute1,totalAttribute2] };\n    });\n    \n    self.getBonusDamageReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // bane_enfeeble\n                            case 'enfeeble_attack_reduction':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bonusDamageReduction != undefined) {\n                    // rubick_fade_bolt,razor_static_link\n                    totalAttribute+=ability.bonusDamageReduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getBonusDamageReductionPct = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // medusa_split_shot\n                            case 'damage_modifier':\n                                totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // windrunner_focusfire\n                            case 'focusfire_damage_reduction':\n                                if (!self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                            case 'focusfire_damage_reduction_scepter':\n                                if (self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getDamageAmplification = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                /*if (!(ability.name in self.abilityData)) {\n                    if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // bane_enfeeble\n                                case 'enfeeble_attack_reduction':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;\n                            }\n                        }\n                    }\n                }\n                else*/ if (ability.damageAmplification != undefined) {\n                        // undying_flesh_golem\n                        totalAttribute *= (1 + ability.damageAmplification()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getDamageReduction = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // bloodseeker_bloodrage\n                            case 'damage_increase_pct':\n                                if (ability.name == 'bloodseeker_bloodrage') {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                    // kunkka_ghostship\n                    if (ability.name == 'kunkka_ghostship') {\n                        totalAttribute *= (1 - 50/100);\n                    }\n                }\n                else if (ability.damageReduction != undefined) {\n                    // wisp_overcharge,bristleback_bristleback,spectre_dispersion,medusa_mana_shield,ursa_enrage,visage_gravekeepers_cloak\n                    totalAttribute *= (1 + ability.damageReduction()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getCritSource = ko.computed(function () {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        // phantom_assassin_coup_de_grace,brewmaster_drunken_brawler,chaos_knight_chaos_strike,lycan_shapeshift,skeleton_king_mortal_strike,juggernaut_blade_dance,alpha_wolf_critical_strike,giant_wolf_critical_strike\n                        case 'phantom_assassin_coup_de_grace':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_bonus', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'brewmaster_drunken_brawler':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_multiplier', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'chaos_knight_chaos_strike':\n                        case 'lycan_shapeshift':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_multiplier', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'skeleton_king_mortal_strike':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_mult', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'juggernaut_blade_dance':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'blade_dance_crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'blade_dance_crit_mult', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'alpha_wolf_critical_strike':\n                        case 'giant_wolf_critical_strike':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_mult', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                    }\n                }\n            }\n        }\n        return sources;\n    });    \n\n    self.getCleaveSource = ko.computed(function () {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        // magnataur_empower\n                        case 'magnataur_empower':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'cleave_radius', ability.level()),\n                                    'magnitude': self.getAbilityAttributeValue(self._abilities[i].attributes, 'cleave_damage_pct', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        // sven_great_cleave\n                        case 'sven_great_cleave':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'great_cleave_radius', ability.level()),\n                                    'magnitude': self.getAbilityAttributeValue(self._abilities[i].attributes, 'great_cleave_damage', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        // kunkka_tidebringer\n                        case 'kunkka_tidebringer':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'radius', ability.level()),\n                                    'magnitude': 1,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        // tiny_grow\n                        case 'tiny_grow':\n                            if (self.hasScepter()) {\n                                if (sources[ability.name] == undefined) {\n                                    sources[ability.name] = {\n                                        'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'bonus_cleave_radius_scepter', ability.level()),\n                                        'magnitude': self.getAbilityAttributeValue(self._abilities[i].attributes, 'bonus_cleave_damage_scepter', ability.level())/100,\n                                        'count': 1,\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                                else {\n                                    sources[ability.name].count += 1;\n                                }\n                            }\n                        break;\n                    }\n                }\n            }\n        }\n        return sources;\n    });    \n    \n    self.getCritChance = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // phantom_assassin_coup_de_grace,brewmaster_drunken_brawler,chaos_knight_chaos_strike,lycan_shapeshift,skeleton_king_mortal_strike\n                            case 'crit_chance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });            \n    \n    self.getEvasion = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // phantom_assassin_blur\n                            case 'bonus_evasion':\n                            // brewmaster_drunken_brawler\n                            case 'dodge_chance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getEvasionBacktrack = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // faceless_void_backtrack\n                            case 'dodge_chance_pct':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMissChance = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // broodmother_incapacitating_bite,brewmaster_drunken_haze\n                            case 'miss_chance':\n                            // riki_smoke_screen,keeper_of_the_light_blinding_light,tinker_laser\n                            case 'miss_rate':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n                else if (ability.missChance != undefined) {\n                    // night_stalker_crippling_fear\n                    totalAttribute*=(1-ability.missChance()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getLifesteal = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // skeleton_king_vampiric_aura\n                            case 'vampiric_aura':\n                            // broodmother_insatiable_hunger\n                            case 'lifesteal_pct':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.lifesteal != undefined) {\n                    // life_stealer_open_wounds\n                    totalAttribute+=ability.lifesteal();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getSpellAmp = ko.computed(function () {\n        var totalAttribute = 0;\n        /*for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // keeper_of_the_light_chakra_magic\n                            case 'cooldown_reduction':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n            }\n        }*/\n        return totalAttribute;\n    });\n    \n    self.getUniqueCooldownReductionFlat = function (ability) {\n        var cooldownMap = TalentController.getUniqueCooldownReductionFlat(self.hero.selectedTalents());\n        return cooldownMap[ability] || 0;\n    }\n    \n    self.getCooldownReductionFlat = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // keeper_of_the_light_chakra_magic\n                            case 'cooldown_reduction':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getCooldownReductionPercent = ko.computed(function () {\n        var totalAttribute = 1;\n        return totalAttribute;\n    });\n\n    self.getCooldownIncreaseFlat = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // faceless_void_time_dilation\n                            case 'duration':\n                                if (ability.name == 'faceless_void_time_dilation') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getCooldownIncreasePercent = ko.computed(function () {\n        var totalAttribute = 1;\n        return totalAttribute;\n    });\n    \n    self.getMagicResist = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // antimage_spell_shield\n                            case 'spell_shield_resistance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // phantom_lancer_phantom_edge\n                            case 'magic_resistance_pct':\n                                if (ability.name == 'phantom_lancer_phantom_edge') {\n                                    totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                            // rubick_null_field\n                            case 'magic_damage_reduction_pct':\n                                if (ability.name == 'rubick_null_field') {\n                                    totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.magicResist != undefined) {\n                    // huskar_berserkers_blood,viper_corrosive_skin,visage_gravekeepers_cloak\n                    totalAttribute *= (1 - ability.magicResist()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getMagicResistReduction = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // ancient_apparition_ice_vortex\n                            case 'spell_resist_pct':\n                            // pugna_decrepify\n                            case 'bonus_spell_damage_pct':\n                            // skywrath_mage_ancient_seal\n                            case 'resist_debuff':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // elder_titan_natural_order\n                            case 'magic_resistance_pct':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMovementSpeedFlat = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // alchemist_chemical_rage\n                            case 'bonus_movespeed':\n                                if (ability.name == 'alchemist_chemical_rage') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // tiny_grow\n                            case 'bonus_movement_speed':\n                                if (ability.name == 'tiny_grow') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // troll_warlord_berserkers_rage\n                            case 'bonus_move_speed':\n                                if (ability.name == 'troll_warlord_berserkers_rage') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }                                \n                            break;\n                            // lone_druid_true_form\n                            case 'speed_loss':\n                                totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.movementSpeedFlat != undefined) {\n                // dragon_knight_elder_dragon_form\n                    totalAttribute+=ability.movementSpeedFlat();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMovementSpeedPercent = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // abaddon_frostmourne \n                            case 'move_speed_pct':\n                            // bounty_hunter_track \n                            case 'bonus_move_speed_pct':\n                            // mirana_leap \n                            case 'leap_speedbonus':\n                            // sven_warcry \n                            case 'warcry_movespeed':\n                            // clinkz_wind_walk\n                            case 'move_speed_bonus_pct':\n                            // windrunner_windrun\n                            case 'movespeed_bonus_pct':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                            // broodmother_spin_web,spectre_spectral_dagger\n                            case 'bonus_movespeed':\n                                if (ability.name == 'broodmother_spin_web' || ability.name == 'spectre_spectral_dagger') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // axe_culling_blade,necronomicon_archer_aoe\n                            case 'speed_bonus':\n                                if (ability.name == 'axe_culling_blade' || ability.name == 'necronomicon_archer_aoe') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // nyx_assassin_vendetta \n                            case 'movement_speed':\n                                if (ability.name == 'nyx_assassin_vendetta') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // spirit_breaker_empowering_haste\n                            case 'bonus_movespeed_pct':\n                                if (ability.name == 'spirit_breaker_empowering_haste') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // ogre_magi_bloodlust,death_prophet_witchcraft,kobold_taskmaster_speed_aura\n                            case 'bonus_movement_speed':\n                                if (ability.name == 'ogre_magi_bloodlust' || ability.name == 'death_prophet_witchcraft' || ability.name == 'kobold_taskmaster_speed_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // razor_unstable_current,phantom_lancer_doppelwalk\n                            case 'movement_speed_pct':\n                                if (ability.name == 'razor_unstable_current' || ability.name == 'phantom_lancer_doppelwalk') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // treant_natures_guise,lone_druid_rabid\n                            case 'bonus_move_speed':\n                                if (ability.name == 'treant_natures_guise' || ability.name == 'lone_druid_rabid') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // wisp_tether\n                            case 'movespeed':\n                                if (ability.name == 'wisp_tether') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // kunkka_ghostship,visage_grave_chill\n                            case 'movespeed_bonus':\n                                if (ability.name == 'kunkka_ghostship' || ability.name == 'visage_grave_chill') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }                                \n                            break;\n                        }\n                    }\n                }\n                else if (ability.movementSpeedPct != undefined) {\n                // axe_battle_hunger,bristleback_warpath,spirit_breaker_greater_bash,lina_fiery_soul,invoker_ghost_walk,invoker_wex,elder_titan_ancestral_spirit\n                    totalAttribute+=ability.movementSpeedPct()/100;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getMovementSpeedPercentReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // crystal_maiden_freezing_field\n                            case 'movespeed_slow':\n                                if (ability.name == 'crystal_maiden_freezing_field' && !self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            case 'movespeed_slow_scepter':\n                                if (ability.name == 'crystal_maiden_freezing_field' && self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // elder_titan_earth_splitter,magnataur_skewer,abaddon_frostmourne \n                            case 'slow_pct':\n                                totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                            // night_stalker_void,crystal_maiden_crystal_nova,ghost_frost_attack,ogre_magi_frost_armor,polar_furbolg_ursa_warrior_thunder_clap\n                            case 'movespeed_slow':\n                                if (ability.name != 'crystal_maiden_freezing_field') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // lich_frost_armor,lich_frost_nova,enchantress_enchant\n                            case 'slow_movement_speed':\n                            // beastmaster_primal_roar\n                            case 'slow_movement_speed_pct':\n                            // drow_ranger_frost_arrows\n                            case 'frost_arrows_movement_speed':\n                            // skeleton_king_hellfire_blast\n                            case 'blast_slow':\n                            // slardar_slithereen_crush\n                            case 'crush_extra_slow':\n                            // storm_spirit_overload:\n                            case 'overload_move_slow':\n                            // windrunner_windrun\n                            case 'enemy_movespeed_bonus_pct':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                            // phantom_assassin_stifling_dagger,tusk_frozen_sigil\n                            case 'move_slow':\n                                if (ability.name == 'phantom_assassin_stifling_dagger') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'tusk_frozen_sigil') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // invoker_ice_wall,medusa_stone_gaze,wisp_tether\n                            case 'slow':\n                                if (ability.name == 'medusa_stone_gaze') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // broodmother_incapacitating_bite,bounty_hunter_jinada,spectre_spectral_dagger,winter_wyvern_arctic_burn\n                            case 'bonus_movespeed':\n                                if (ability.name == 'broodmother_incapacitating_bite' || ability.name == 'bounty_hunter_jinada' || ability.name == 'winter_wyvern_arctic_burn' || ability.name == 'winter_wyvern_splinter_blast') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'spectre_spectral_dagger') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // omniknight_degen_aura\n                            case 'speed_bonus':\n                                if (ability.name == 'omniknight_degen_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // tidehunter_gush\n                            case 'movement_speed':\n                                if (ability.name == 'tidehunter_gush') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // pugna_decrepify,chen_penitence\n                            case 'bonus_movement_speed':\n                                if (ability.name == 'pugna_decrepify' || ability.name == 'chen_penitence') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // ancient_apparition_ice_vortex,phantom_lancer_spirit_lance,skywrath_mage_concussive_shot,faceless_void_time_walk\n                            case 'movement_speed_pct':\n                                if (ability.name == 'ancient_apparition_ice_vortex' || ability.name == 'phantom_lancer_spirit_lance' || ability.name == 'faceless_void_time_walk') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'skywrath_mage_concussive_shot') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // razor_unstable_current\n                            case 'slow_amount':\n                                if (ability.name == 'razor_unstable_current') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // brewmaster_drunken_haze,brewmaster_thunder_clap,treant_leech_seed\n                            case 'movement_slow':\n                                if (ability.name == 'brewmaster_drunken_haze' || ability.name == 'brewmaster_thunder_clap') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'ursa_earthshock' || ability.name == 'treant_leech_seed') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // skeleton_king_reincarnation\n                            case 'movespeed':\n                                if (ability.name == 'skeleton_king_reincarnation') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // kunkka_torrent,visage_grave_chill\n                            case 'movespeed_bonus':\n                                if (ability.name == 'kunkka_torrent') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'visage_grave_chill') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                        }\n                    }\n                    if (ability.name == 'satyr_trickster_purge') {\n                        totalAttribute -= 80/100;\n                    }\n                    else if (ability.name == 'enraged_wildkin_tornado') {\n                        totalAttribute -= 15/100;\n                    }\n                }\n                else if (ability.movementSpeedPctReduction != undefined) {\n                    // axe_battle_hunger,batrider_sticky_napalm,shredder_chakram,meepo_geostrike,life_stealer_open_wounds,\n                    // venomancer_poison_sting,viper_viper_strike,viper_corrosive_skin,viper_poison_attack,venomancer_venomous_gale,treant_leech_seed\n                    // lich_chain_frost,sniper_shrapnel,centaur_stampede,huskar_life_break,jakiro_dual_breath,meepo_geostrike,sandking_epicenter\n                    // earth_spirit_rolling_boulder,invoker_ghost_walk,invoker_ice_wall,elder_titan_earth_splitter\n                    // undying_flesh_golem,templar_assassin_psionic_trap,nevermore_requiem,queenofpain_shadow_strike\n                    totalAttribute+=ability.movementSpeedPctReduction()/100;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getTurnRateReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // medusa_stone_gaze\n                            case 'slow':\n                                if (ability.name == 'medusa_stone_gaze') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.turnRateReduction != undefined) {\n                    // batrider_sticky_napalm\n                    totalAttribute+=ability.turnRateReduction()/100;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getVisionRangeNight = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // winter_wyvern_arctic_burn\n                            case 'night_vision_bonus':\n                            // lycan_shapeshift,luna_lunar_blessing\n                            case 'bonus_night_vision':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.visionnight != undefined) {\n                    // \n                    totalAttribute+=ability.visionnight();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getVisionRangePctReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // night_stalker_darkness\n                            case 'blind_percentage':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.setEvasion = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (ability.name == 'windrunner_windrun') {\n                    return 1;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.setMovementSpeed = ko.computed(function () {\n        var MAX_MOVESPEED = 522;\n        var MIN_MOVESPEED = 100;\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (ability.name == 'spirit_breaker_charge_of_darkness') {\n                    return self.getAbilityAttributeValue(ability.attributes, 'movement_speed', ability.level());\n                }\n                if (ability.name == 'dark_seer_surge') {\n                    return MAX_MOVESPEED;\n                }\n                if (ability.name == 'centaur_stampede') {\n                    return MAX_MOVESPEED;\n                }\n                if (ability.name == 'lycan_shapeshift') {\n                    return MAX_MOVESPEED;\n                }\n                if (ability.name == 'lion_voodoo' || ability.name == 'shadow_shaman_voodoo') {\n                    return MIN_MOVESPEED;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getBashSource = function (attacktype) {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // sniper_headshot\n                            case 'proc_chance':\n                                if (sources[ability.name] == undefined && ability.name == 'sniper_headshot') {\n                                    sources[ability.name] = {\n                                        'chance': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level())/100,\n                                        'damage': self.getAbilityPropertyValue(ability, 'damage'),\n                                        'count': 1,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // slardar_bash\n                            case 'chance':\n                                if (sources[ability.name] == undefined && ability.name == 'slardar_bash') {\n                                    sources[ability.name] = {\n                                        'chance': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level())/100,\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, 'bonus_damage', ability.level()),\n                                        'count': 1,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bashBonusDamage != undefined) {\n                    // faceless_void_time_lock\n                    if (sources[ability.name] == undefined && ability.name == 'faceless_void_time_lock') {\n                        sources[ability.name] = {\n                            'chance': ability.bash()/100,\n                            'damage': ability.bashBonusDamage(),\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': ability.displayname\n                        }\n                    }\n                    // spirit_breaker_greater_bash\n                    if (sources[ability.name] == undefined && ability.name == 'spirit_breaker_greater_bash') {\n                        sources[ability.name] = {\n                            'chance': ability.bash()/100,\n                            'damage': ability.bashBonusDamage()/100,\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': ability.displayname\n                        }\n                    }\n                }\n            }\n        }\n\n        return sources;\n    };\n    \n    self.getOrbSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // antimage_mana_break\n                            case 'mana_per_hit':\n                                if (sources[ability.name] == undefined && ability.name == 'antimage_mana_break') {\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level()) \n                                                * self.getAbilityAttributeValue(ability.attributes, 'damage_per_burn', ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // clinkz_searing_arrows\n                            case 'damage_bonus':\n                                if (sources[ability.name] == undefined && ability.name == 'clinkz_searing_arrows') {\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            // silencer_glaives_of_wisdom\n                            case 'intellect_damage_pct':\n                                if (sources[ability.name] == undefined && ability.name == 'silencer_glaives_of_wisdom') {\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level())/100 * self.hero.totalInt(),\n                                        'damageType': 'pure',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bonusDamageOrb != undefined) {\n                    // obsidian_destroyer_arcane_orb\n                    if (sources[ability.name] == undefined && ability.name == 'obsidian_destroyer_arcane_orb') {\n                        sources[ability.name] = {\n                            'damage': ability.bonusDamageOrb(),\n                            'damageType': 'pure',\n                            'displayname': ability.displayname\n                        }\n                    }\n                }\n            }\n        }\n        \n        return sources;\n    };\n    \n    self.toggleAbility = function (index, data, event) {\n        if (self.abilities()[index()].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') < 0) {\n            if (self.abilities()[index()].isActive()) {\n                self.abilities()[index()].isActive(false);\n            }\n            else {\n                self.abilities()[index()].isActive(true);\n            }\n            \n            if (self.abilities()[index()].name == 'lycan_shapeshift') {\n                self.isShapeShiftActive(self.abilities()[index()].isActive());\n            }\n        }\n    }.bind(this);\n\n    self.toggleAbilityDetail = function (index, data, event) {\n        if (self.abilities()[index()].isDetail()) {\n            self.abilities()[index()].isDetail(false);\n        }\n        else {\n            self.abilities()[index()].isDetail(true);\n        }\n    }.bind(this);\n    \n    self.getAbility = function (abilityName) {\n        return self.abilities().find(function(b) {\n            return b.name == abilityName;\n        });\n    }\n}\n\nAbilityModel.prototype.levelUpAbility = function (index, data, event, hero) {\n    var self = this;\n    if (self.abilities()[index()].level() < hero.getAbilityLevelMax(data) && hero.availableSkillPoints() > 0 ) {\n        switch(self.abilities()[index()].abilitytype) {\n            case 'DOTA_ABILITY_TYPE_ULTIMATE':\n                if (hero.heroId() == 'invoker') {\n                    if (\n                        (self.abilities()[index()].level() == 0) && (parseInt(hero.selectedHeroLevel()) >= 2) ||\n                        (self.abilities()[index()].level() == 1) && (parseInt(hero.selectedHeroLevel()) >= 7) ||\n                        (self.abilities()[index()].level() == 2) && (parseInt(hero.selectedHeroLevel()) >= 11) ||\n                        (self.abilities()[index()].level() == 3) && (parseInt(hero.selectedHeroLevel()) >= 17)\n                    ) {\n                        self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                        hero.skillPointHistory.push(index());\n                    }\n                }\n                else if (hero.heroId() == 'meepo') {\n                    if (self.abilities()[index()].level() * 7 + 3 <= parseInt(hero.selectedHeroLevel())) {\n                        self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                        hero.skillPointHistory.push(index());\n                    }\n                }\n                else {\n                    if ((self.abilities()[index()].level()+1) * 5 + 1 <= parseInt(hero.selectedHeroLevel())) {\n                        self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                        hero.skillPointHistory.push(index());\n                    }\n                }\n            break;\n            default:\n                if (self.abilities()[index()].level() * 2 + 1 <= parseInt(hero.selectedHeroLevel())) {\n                    self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                    hero.skillPointHistory.push(index());\n                }\n            break;\n        }\n        switch (self.abilities()[index()].name) {\n            case 'beastmaster_call_of_the_wild':\n            case 'chen_test_of_faith':\n            case 'morphling_morph_agi':\n            case 'shadow_demon_shadow_poison':\n                self.abilities()[index() + 1].level(self.abilities()[index()].level());\n            break;\n            case 'morphling_morph_str':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n            break;\n            case 'keeper_of_the_light_spirit_form':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                self.abilities()[index() - 2].level(self.abilities()[index()].level());\n            break;\n            case 'nevermore_shadowraze1':\n                self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                self.abilities()[index() + 2].level(self.abilities()[index()].level());\n            break;\n            case 'nevermore_shadowraze2':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                self.abilities()[index() + 1].level(self.abilities()[index()].level());\n            break;\n            case 'nevermore_shadowraze3':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                self.abilities()[index() - 2].level(self.abilities()[index()].level());\n            break;\n            case 'ember_spirit_fire_remnant':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n            break;\n            case 'lone_druid_true_form':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n            break;\n            case 'monkey_king_tree_dance':\n                self.abilities()[index() + 1].level(self.abilities()[index()].level());\n            break;\n        }\n    }\n};\nAbilityModel.prototype.levelDownAbility = function (index, data, event, hero) {\n    var i = ko.utils.unwrapObservable(index);\n    var self = this;\n    if (self.abilities()[i].level() > 0) {\n        self.abilities()[i].level(self.abilities()[i].level() - 1);\n        hero.skillPointHistory.splice(hero.skillPointHistory().lastIndexOf(i), 1);\n        switch (self.abilities()[i].name) {\n            case 'beastmaster_call_of_the_wild':\n            case 'chen_test_of_faith':\n            case 'morphling_morph_agi':\n            case 'shadow_demon_shadow_poison':\n                self.abilities()[i + 1].level(self.abilities()[i].level());\n            break;\n            case 'morphling_morph_str':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n            break;\n            case 'keeper_of_the_light_spirit_form':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n                self.abilities()[i - 2].level(self.abilities()[i].level());\n            break;\n            case 'nevermore_shadowraze1':\n                self.abilities()[i + 1].level(self.abilities()[i].level());\n                self.abilities()[i + 2].level(self.abilities()[i].level());\n            break;\n            case 'nevermore_shadowraze2':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n                self.abilities()[i + 1].level(self.abilities()[i].level());\n            break;\n            case 'nevermore_shadowraze3':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n                self.abilities()[i - 2].level(self.abilities()[i].level());\n            break;\n            case 'ember_spirit_fire_remnant':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n            break;\n            case 'lone_druid_true_form':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n            break;\n            case 'monkey_king_tree_dance':\n                self.abilities()[i + 1].level(self.abilities()[i].level());\n            break;\n        }\n    }\n};\nAbilityModel.prototype.getAbilityAttributeValue = function (attributes, attributeName, level) {\n    for (var i=0; i < attributes.length; i++) {\n        if (attributes[i].name == attributeName) {\n            if (level == 0) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else if (level > attributes[i].value.length) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else {\n                return parseFloat(attributes[i].value[level-1]);\n            }\n        }\n    }\n}\nAbilityModel.prototype.getAbilityAttributeTooltip = function (attributes, attributeName) {\n    for (var i=0; i<attributes.length; i++) {\n        if (attributes[i].name == attributeName) {\n            if (attributes[i].hasOwnProperty('tooltip')) {\n                var d = attributes[i].tooltip.replace(/\\\\n/g, '');\n                return d;\n            }\n            else {\n                return '';\n            }\n        }\n    }\n    return '';\n}\n\nmodule.exports = AbilityModel;",
    "'use strict';\nvar ko = require('./herocalc_knockout');\n\nvar AbilityModel = require(\"./AbilityModel\");\nvar InventoryViewModel = require(\"./inventory/InventoryViewModel\");\nvar findWhere = require(\"./util/findWhere\");\nvar buffOptionsArray = require(\"./buffs/buffOptionsArray\");\nvar debuffOptionsArray = require(\"./buffs/debuffOptionsArray\");\n\nvar BuffViewModel = function (itemData, a) {\n    var self = this;\n    AbilityModel.call(this, ko.observableArray([]));\n    self.availableBuffs = ko.observableArray(buffOptionsArray.items);\n    self.availableDebuffs = ko.observableArray(debuffOptionsArray.items);\n    self.selectedBuff = ko.observable(self.availableBuffs()[0]);\n    \n    self.buffs = ko.observableArray([]);\n    self.itemBuffs = new InventoryViewModel(itemData);\n    \n    self.addBuff = function (data, event) {\n        if (findWhere(self.buffs(), { name: self.selectedBuff().buffName }) == undefined) {\n            var a = JSON.parse(JSON.stringify(self.selectedBuff().abilityData));\n            a.level = ko.observable(0);\n            a.isActive = ko.observable(false);\n            a.isDetail = ko.observable(false);\n            a.baseDamage = ko.observable(0);\n            a.bash = ko.observable(0);\n            a.bashBonusDamage = ko.observable(0);\n            a.bonusDamage = ko.observable(0);\n            a.bonusDamageOrb = ko.observable(0);\n            a.bonusDamagePct = ko.observable(0);\n            a.bonusDamagePrecisionAura = ko.observable(0);\n            a.bonusDamageReduction = ko.observable(0);\n            a.bonusHealth = ko.observable(0);\n            a.bonusStrength = ko.observable(0);\n            a.bonusStrength2 = ko.observable(0);\n            a.bonusAgility = ko.observable(0);\n            a.bonusAgility2 = ko.observable(0);\n            a.bonusInt = ko.observable(0);\n            a.bonusAllStatsReduction = ko.observable(0);\n            a.damageAmplification = ko.observable(0);\n            a.damageReduction = ko.observable(0);\n            a.evasion = ko.observable(0);\n            a.magicResist = ko.observable(0);\n            a.manaregen = ko.observable(0);\n            a.manaregenreduction = ko.observable(0);\n            a.missChance = ko.observable(0);\n            a.movementSpeedFlat = ko.observable(0);\n            a.movementSpeedPct = ko.observable(0);\n            a.movementSpeedPctReduction = ko.observable(0);\n            a.turnRateReduction = ko.observable(0);\n            a.attackrange = ko.observable(0);\n            a.attackspeed = ko.observable(0);\n            a.attackspeedreduction = ko.observable(0);\n            a.armor = ko.observable(0);\n            a.armorReduction = ko.observable(0);\n            a.healthregen = ko.observable(0);\n            a.lifesteal = ko.observable(0);\n            a.visionnight = ko.observable(0);\n            a.visionday = ko.observable(0);\n            switch (a.name) {\n                case 'invoker_cold_snap':\n                case 'invoker_ghost_walk':\n                case 'invoker_tornado':\n                case 'invoker_emp':\n                case 'invoker_alacrity':\n                case 'invoker_chaos_meteor':\n                case 'invoker_sun_strike':\n                case 'invoker_forge_spirit':\n                case 'invoker_ice_wall':\n                case 'invoker_deafening_blast':\n                    a.level(1);\n                break;\n            }\n            self.abilities.push(a);\n            self.buffs.push({ name: self.selectedBuff().buffName, hero: self.selectedBuff().hero, data: a });\n        }\n    };\n    \n    self.removeBuff = function (data, event, abilityName) {\n        if (findWhere(self.buffs(), { name: abilityName })  != undefined) {\n                self.buffs.remove(findWhere(self.buffs(), { name: abilityName }));\n                if (self.abilityControlData[abilityName] != undefined) {\n                    for (var i = 0; i < self.abilityControlData[abilityName].data.length; i++) {\n                        if (self.abilityControlData[abilityName].data[i].controlVal.dispose != undefined) {\n                            self.abilityControlData[abilityName].data[i].controlVal.dispose();\n                        }\n                        if (self.abilityControlData[abilityName].data[i].clean != undefined) {\n                            self.abilityControlData[abilityName].data[i].clean.dispose();\n                        }\n                    }\n                    self.abilityControlData[abilityName] = undefined;\n                }\n                for (var i = 0; i < self.abilities().length; i++) {\n                    if (self.abilities()[i].name == abilityName) {\n                        self.abilities()[i].level(0);\n                        self.abilities.remove(self.abilities()[i]);\n                        break;\n                    }\n                }\n        }\n    };\n    self.toggleBuff = function (index, data, event) {\n        if (self.buffs()[index()].data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') < 0) {\n            if (self.buffs()[index()].data.isActive()) {\n                self.buffs()[index()].data.isActive(false);\n                self.abilities()[index()].isActive(false);\n            }\n            else {\n                self.buffs()[index()].data.isActive(true);\n                self.abilities()[index()].isActive(true);\n            }\n        }\n    }.bind(this);\n\n    self.toggleBuffDetail = function (index, data, event) {\n        if (self.buffs()[index()].data.isDetail()) {\n            self.buffs()[index()].data.isDetail(false);\n        }\n        else {\n            self.buffs()[index()].data.isDetail(true);\n        }\n    }.bind(this);\n\n    // Overrides the ability module function to remove available skill point check\n    self.levelUpAbility = function (index, data, event, hero) {\n        if (self.abilities()[index()].level() < hero.getAbilityLevelMax(data)) {\n            switch(self.abilities()[index()].abilitytype) {\n                case 'DOTA_ABILITY_TYPE_ULTIMATE':\n                    self.abilities()[index()].level(self.abilities()[index()].level() + 1);\n                break;\n                default:\n                    self.abilities()[index()].level(self.abilities()[index()].level() + 1);\n                break;\n            }\n            switch (self.abilities()[index()].name) {\n                case 'beastmaster_call_of_the_wild':\n                case 'chen_test_of_faith':\n                case 'morphling_morph_agi':\n                case 'shadow_demon_shadow_poison':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'morphling_morph_str':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n                case 'keeper_of_the_light_spirit_form':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                case 'nevermore_shadowraze1':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 2].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze2':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze3':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                break;\n            }\n        }\n    };\n    self.levelDownAbility = function (index, data, event, hero) {\n        if (self.abilities()[index()].level() > 0) {\n            self.abilities()[index()].level(self.abilities()[index()].level() - 1);\n            switch (self.abilities()[index()].name) {\n                case 'beastmaster_call_of_the_wild':\n                case 'chen_test_of_faith':\n                case 'morphling_morph_agi':\n                case 'shadow_demon_shadow_poison':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'morphling_morph_str':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n                case 'keeper_of_the_light_spirit_form':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                case 'nevermore_shadowraze1':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 2].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze2':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze3':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                break;\n                case 'ember_spirit_fire_remnant':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n                case 'lone_druid_true_form':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n            }\n        }\n    };\n    \n    return self;\n}\nBuffViewModel.prototype = Object.create(AbilityModel.prototype);\nBuffViewModel.prototype.constructor = BuffViewModel;\n\nmodule.exports = BuffViewModel;",
    "var findWhere = require(\"../util/findWhere\");\n\nvar BuffModel = function (heroData, unitData, hero, ability) {\n    this.buffName = ability;\n    if (heroData['npc_dota_hero_' + hero] == undefined) {\n        this.hero = hero;\n        this.abilityData = findWhere(unitData[hero].abilities, {name: ability})\n        this.buffDisplayName = unitData[hero].displayname + ' - ' + this.abilityData.displayname;\n    }\n    else {\n        this.hero = 'npc_dota_hero_' + hero;\n        this.abilityData = findWhere(heroData['npc_dota_hero_' + hero].abilities, {name: ability})\n        this.buffDisplayName = heroData['npc_dota_hero_' + hero].displayname + ' - ' + this.abilityData.displayname;        \n        if (ability == 'sven_gods_strength') {\n            this.buffDisplayName += ' (Aura for allies)';\n        }\n    }\n\n};\n\nmodule.exports = BuffModel;",
    "var BuffModel = require(\"./BuffModel\");\n\nvar buffOptionsArray = {};\n\nvar init = function (heroData, unitData) {\n    buffOptionsArray.items = [\n        new BuffModel(heroData, unitData, 'abaddon', 'abaddon_frostmourne'),\n        new BuffModel(heroData, unitData, 'axe', 'axe_culling_blade'),\n        new BuffModel(heroData, unitData, 'beastmaster', 'beastmaster_inner_beast'),\n        new BuffModel(heroData, unitData, 'bloodseeker', 'bloodseeker_bloodrage'),\n        new BuffModel(heroData, unitData, 'bounty_hunter', 'bounty_hunter_track'),\n        new BuffModel(heroData, unitData, 'centaur', 'centaur_stampede'),\n        new BuffModel(heroData, unitData, 'crystal_maiden', 'crystal_maiden_brilliance_aura'),\n        new BuffModel(heroData, unitData, 'dark_seer', 'dark_seer_surge'),\n        new BuffModel(heroData, unitData, 'dazzle', 'dazzle_weave'),\n        new BuffModel(heroData, unitData, 'drow_ranger', 'drow_ranger_trueshot'),\n        new BuffModel(heroData, unitData, 'invoker', 'invoker_alacrity'),\n        new BuffModel(heroData, unitData, 'wisp', 'wisp_tether'),\n        new BuffModel(heroData, unitData, 'wisp', 'wisp_overcharge'),\n        new BuffModel(heroData, unitData, 'kunkka', 'kunkka_ghostship'),\n        new BuffModel(heroData, unitData, 'lich', 'lich_frost_armor'),\n        new BuffModel(heroData, unitData, 'life_stealer', 'life_stealer_open_wounds'),\n        new BuffModel(heroData, unitData, 'luna', 'luna_lunar_blessing'),\n        new BuffModel(heroData, unitData, 'lycan', 'lycan_howl'),\n        new BuffModel(heroData, unitData, 'magnataur', 'magnataur_empower'),\n        new BuffModel(heroData, unitData, 'mirana', 'mirana_leap'),\n        new BuffModel(heroData, unitData, 'ogre_magi', 'ogre_magi_bloodlust'),\n        new BuffModel(heroData, unitData, 'omniknight', 'omniknight_guardian_angel'),\n        new BuffModel(heroData, unitData, 'rubick', 'rubick_null_field'),\n        new BuffModel(heroData, unitData, 'skeleton_king', 'skeleton_king_vampiric_aura'),\n        new BuffModel(heroData, unitData, 'spirit_breaker', 'spirit_breaker_empowering_haste'),\n        new BuffModel(heroData, unitData, 'sven', 'sven_warcry'),\n        new BuffModel(heroData, unitData, 'sven', 'sven_gods_strength'),\n        new BuffModel(heroData, unitData, 'treant', 'treant_living_armor'),\n        new BuffModel(heroData, unitData, 'troll_warlord', 'troll_warlord_battle_trance'),\n        new BuffModel(heroData, unitData, 'vengefulspirit', 'vengefulspirit_command_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_alpha_wolf', 'alpha_wolf_critical_strike'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_alpha_wolf', 'alpha_wolf_command_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_polar_furbolg_ursa_warrior', 'centaur_khan_endurance_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_kobold_taskmaster', 'kobold_taskmaster_speed_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_ogre_magi', 'ogre_magi_frost_armor'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_satyr_hellcaller', 'satyr_hellcaller_unholy_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_enraged_wildkin', 'enraged_wildkin_toughness_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_necronomicon_archer_1', 'necronomicon_archer_aoe')\n    ];\n    return buffOptionsArray.items;\n}\n\nbuffOptionsArray.init = init;\n\nmodule.exports = buffOptionsArray;",
    "var BuffModel = require(\"./BuffModel\");\n\nvar debuffOptionsArray = {};\n\nvar init = function (heroData, unitData) {\n    debuffOptionsArray.items = [\n        new BuffModel(heroData, unitData, 'abaddon', 'abaddon_frostmourne'),\n        new BuffModel(heroData, unitData, 'alchemist', 'alchemist_acid_spray'),\n        new BuffModel(heroData, unitData, 'ancient_apparition', 'ancient_apparition_ice_vortex'),\n        new BuffModel(heroData, unitData, 'axe', 'axe_battle_hunger'),\n        new BuffModel(heroData, unitData, 'bane', 'bane_enfeeble'),\n        new BuffModel(heroData, unitData, 'batrider', 'batrider_sticky_napalm'),\n        new BuffModel(heroData, unitData, 'beastmaster', 'beastmaster_primal_roar'),\n        new BuffModel(heroData, unitData, 'bounty_hunter', 'bounty_hunter_jinada'),\n        new BuffModel(heroData, unitData, 'brewmaster', 'brewmaster_thunder_clap'),\n        new BuffModel(heroData, unitData, 'brewmaster', 'brewmaster_drunken_haze'),\n        new BuffModel(heroData, unitData, 'bristleback', 'bristleback_viscous_nasal_goo'),\n        new BuffModel(heroData, unitData, 'broodmother', 'broodmother_incapacitating_bite'),\n        new BuffModel(heroData, unitData, 'centaur', 'centaur_stampede'),\n        new BuffModel(heroData, unitData, 'chen', 'chen_penitence'),\n        new BuffModel(heroData, unitData, 'crystal_maiden', 'crystal_maiden_crystal_nova'),\n        new BuffModel(heroData, unitData, 'crystal_maiden', 'crystal_maiden_freezing_field'),\n        new BuffModel(heroData, unitData, 'dazzle', 'dazzle_weave'),\n        new BuffModel(heroData, unitData, 'drow_ranger', 'drow_ranger_frost_arrows'),\n        new BuffModel(heroData, unitData, 'earth_spirit', 'earth_spirit_rolling_boulder'),\n        new BuffModel(heroData, unitData, 'elder_titan', 'elder_titan_natural_order'),\n        new BuffModel(heroData, unitData, 'elder_titan', 'elder_titan_earth_splitter'),\n        new BuffModel(heroData, unitData, 'enchantress', 'enchantress_untouchable'),\n        new BuffModel(heroData, unitData, 'enchantress', 'enchantress_enchant'),\n        new BuffModel(heroData, unitData, 'faceless_void', 'faceless_void_time_walk'),\n        new BuffModel(heroData, unitData, 'huskar', 'huskar_life_break'),\n        new BuffModel(heroData, unitData, 'invoker', 'invoker_ghost_walk'),\n        new BuffModel(heroData, unitData, 'invoker', 'invoker_ice_wall'),\n        new BuffModel(heroData, unitData, 'wisp', 'wisp_tether'),\n        new BuffModel(heroData, unitData, 'jakiro', 'jakiro_dual_breath'),\n        new BuffModel(heroData, unitData, 'jakiro', 'jakiro_liquid_fire'),\n        new BuffModel(heroData, unitData, 'keeper_of_the_light', 'keeper_of_the_light_blinding_light'),\n        new BuffModel(heroData, unitData, 'kunkka', 'kunkka_torrent'),\n        new BuffModel(heroData, unitData, 'lich', 'lich_frost_nova'),\n        new BuffModel(heroData, unitData, 'lich', 'lich_frost_armor'),\n        new BuffModel(heroData, unitData, 'lich', 'lich_chain_frost'),\n        new BuffModel(heroData, unitData, 'life_stealer', 'life_stealer_open_wounds'),\n        new BuffModel(heroData, unitData, 'lion', 'lion_voodoo'),\n        new BuffModel(heroData, unitData, 'magnataur', 'magnataur_skewer'),\n        new BuffModel(heroData, unitData, 'medusa', 'medusa_stone_gaze'),\n        new BuffModel(heroData, unitData, 'meepo', 'meepo_geostrike'),\n        new BuffModel(heroData, unitData, 'naga_siren', 'naga_siren_rip_tide'),\n        new BuffModel(heroData, unitData, 'night_stalker', 'night_stalker_void'),\n        new BuffModel(heroData, unitData, 'night_stalker', 'night_stalker_crippling_fear'),\n        new BuffModel(heroData, unitData, 'night_stalker', 'night_stalker_darkness'),\n        new BuffModel(heroData, unitData, 'ogre_magi', 'ogre_magi_ignite'),\n        new BuffModel(heroData, unitData, 'omniknight', 'omniknight_degen_aura'),\n        new BuffModel(heroData, unitData, 'phantom_assassin', 'phantom_assassin_stifling_dagger'),\n        new BuffModel(heroData, unitData, 'phantom_lancer', 'phantom_lancer_spirit_lance'),\n        new BuffModel(heroData, unitData, 'pudge', 'pudge_rot'),\n        new BuffModel(heroData, unitData, 'pugna', 'pugna_decrepify'),\n        new BuffModel(heroData, unitData, 'queenofpain', 'queenofpain_shadow_strike'),\n        new BuffModel(heroData, unitData, 'riki', 'riki_smoke_screen'),\n        new BuffModel(heroData, unitData, 'rubick', 'rubick_fade_bolt'),\n        new BuffModel(heroData, unitData, 'sand_king', 'sandking_epicenter'),\n        new BuffModel(heroData, unitData, 'nevermore', 'nevermore_dark_lord'),\n        new BuffModel(heroData, unitData, 'shadow_shaman', 'shadow_shaman_voodoo'),\n        new BuffModel(heroData, unitData, 'skeleton_king', 'skeleton_king_hellfire_blast'),\n        new BuffModel(heroData, unitData, 'skeleton_king', 'skeleton_king_reincarnation'),\n        new BuffModel(heroData, unitData, 'skywrath_mage', 'skywrath_mage_concussive_shot'),\n        new BuffModel(heroData, unitData, 'skywrath_mage', 'skywrath_mage_ancient_seal'),\n        new BuffModel(heroData, unitData, 'slardar', 'slardar_slithereen_crush'),\n        new BuffModel(heroData, unitData, 'slardar', 'slardar_amplify_damage'),\n        new BuffModel(heroData, unitData, 'slark', 'slark_essence_shift'),\n        new BuffModel(heroData, unitData, 'sniper', 'sniper_shrapnel'),\n        new BuffModel(heroData, unitData, 'spectre', 'spectre_spectral_dagger'),\n        new BuffModel(heroData, unitData, 'storm_spirit', 'storm_spirit_overload'),\n        new BuffModel(heroData, unitData, 'templar_assassin', 'templar_assassin_meld'),\n        new BuffModel(heroData, unitData, 'tidehunter', 'tidehunter_gush'),\n        new BuffModel(heroData, unitData, 'tinker', 'tinker_laser'),\n        new BuffModel(heroData, unitData, 'treant', 'treant_leech_seed'),\n        new BuffModel(heroData, unitData, 'tusk', 'tusk_frozen_sigil'),\n        new BuffModel(heroData, unitData, 'undying', 'undying_flesh_golem'),\n        new BuffModel(heroData, unitData, 'ursa', 'ursa_earthshock'),\n        new BuffModel(heroData, unitData, 'vengefulspirit', 'vengefulspirit_wave_of_terror'),\n        new BuffModel(heroData, unitData, 'vengefulspirit', 'vengefulspirit_command_aura'),\n        new BuffModel(heroData, unitData, 'venomancer', 'venomancer_venomous_gale'),\n        new BuffModel(heroData, unitData, 'venomancer', 'venomancer_poison_sting'),\n        new BuffModel(heroData, unitData, 'viper', 'viper_poison_attack'),\n        new BuffModel(heroData, unitData, 'viper', 'viper_corrosive_skin'),\n        new BuffModel(heroData, unitData, 'viper', 'viper_viper_strike'),\n        new BuffModel(heroData, unitData, 'visage', 'visage_grave_chill'),\n        new BuffModel(heroData, unitData, 'warlock', 'warlock_upheaval'),\n        new BuffModel(heroData, unitData, 'weaver', 'weaver_the_swarm'),\n        new BuffModel(heroData, unitData, 'windrunner', 'windrunner_windrun'),\n        new BuffModel(heroData, unitData, 'winter_wyvern', 'winter_wyvern_arctic_burn'),\n        new BuffModel(heroData, unitData, 'winter_wyvern', 'winter_wyvern_splinter_blast'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_ghost', 'ghost_frost_attack'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_polar_furbolg_ursa_warrior', 'polar_furbolg_ursa_warrior_thunder_clap'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_ogre_magi', 'ogre_magi_frost_armor'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_satyr_trickster', 'satyr_trickster_purge'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_enraged_wildkin', 'enraged_wildkin_tornado')\n    ];\n    return debuffOptionsArray.items;\n}\n\ndebuffOptionsArray.init = init;\n\nmodule.exports = debuffOptionsArray;",
    "var HeroCalcData = {\n    heroData: {},\n    itemData: {},\n    unitData: {}\n};\n\nmodule.exports = HeroCalcData;",
    "var HeroCalcData = require('./HeroCalcData') || {};\nvar getJSON = require(\"../util/getJSON\");\nvar isEmpty = require(\"../util/isEmpty\");\nvar isString = require(\"../util/isString\");\nvar extend = function(out) {\n  out = out || {};\n\n  for (var i = 1; i < arguments.length; i++) {\n    if (!arguments[i])\n      continue;\n\n    for (var key in arguments[i]) {\n      if (arguments[i].hasOwnProperty(key))\n        out[key] = arguments[i][key];\n    }\n  }\n\n  return out;\n};\n\nvar resourceCounter = 0;\n\nvar onResourceLoaded = function (callback) {\n    resourceCounter--;\n    if (resourceCounter === 0) {\n        fixHeroData(HeroCalcData.heroData);\n        modifyItemData(HeroCalcData.itemData);\n        if (callback) callback();\n    }\n}\n\nvar modifyItemData = function (itemData) {\n    itemData[\"item_bottle_doubledamage\"] = {\n        displayname: \"Double Damage\",\n        name: \"item_bottle_doubledamage\",\n        attributes: [{\n            \"name\": \"bottle_doubledamage\", \n            \"tooltip\": \"%BONUS ATTACK DAMAGE:\", \n            \"value\": [\n                100\n            ]\n        }]\n    }\n}\n\nvar fixHeroData = function (heroData) {\n    heroData['npc_dota_hero_invoker'].abilities[5].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_chen'].abilities[2].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_nevermore'].abilities[1].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_nevermore'].abilities[2].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_morphling'].abilities[3].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_ogre_magi'].abilities[3].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_techies'].abilities[4].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_beastmaster'].abilities[2].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n\n    var index = heroData['npc_dota_hero_lone_druid'].abilities[3].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_HIDDEN');\n    heroData['npc_dota_hero_lone_druid'].abilities[3].behavior.splice(index, 1);\n\n    index = heroData['npc_dota_hero_abaddon'].abilities[2].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE');\n    heroData['npc_dota_hero_abaddon'].abilities[2].behavior.splice(index, 1);\n\n    index = heroData['npc_dota_hero_riki'].abilities[2].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE');\n    heroData['npc_dota_hero_riki'].abilities[2].behavior.splice(index, 1);\n}\n\nvar init = function (HERODATA_PATH, ITEMDATA_PATH, UNITDATA_PATH, callback) {\n    resourceCounter = 3;\n    \n    if (!HeroCalcData.heroData || isEmpty(HeroCalcData.heroData)) {\n        if (isString(HERODATA_PATH)) {\n            getJSON(HERODATA_PATH, function (data) {\n                HeroCalcData.heroData = data;\n                onResourceLoaded(callback);\n            });\n        }\n        else if (!isEmpty(HERODATA_PATH)) {\n            HeroCalcData.heroData = HERODATA_PATH;\n            onResourceLoaded(callback);\n        }\n    }\n    else {\n        onResourceLoaded(callback);\n    }\n    \n    if (!HeroCalcData.itemData || isEmpty(HeroCalcData.itemData)) {\n        if (isString(ITEMDATA_PATH)) {\n            getJSON(ITEMDATA_PATH, function (data) {\n                HeroCalcData.itemData = data;\n                onResourceLoaded(callback);\n            });\n        }\n        else if (!isEmpty(ITEMDATA_PATH)) {\n            HeroCalcData.itemData = ITEMDATA_PATH;\n            onResourceLoaded(callback);\n        }\n    }\n    else {\n        onResourceLoaded(callback);\n    }\n    \n    if (!HeroCalcData.unitData || isEmpty(HeroCalcData.unitData)) {\n        if (isString(UNITDATA_PATH)) {\n            getJSON(UNITDATA_PATH, function (data) {\n                HeroCalcData.unitData = data;\n                onResourceLoaded(callback);\n            });\n        }\n        else if (!isEmpty(UNITDATA_PATH)) {\n            HeroCalcData.unitData = UNITDATA_PATH;\n            onResourceLoaded(callback);\n        }\n    }\n    else {\n        onResourceLoaded(callback);\n    }\n}\n    \nHeroCalcData.init = init;\n\nmodule.exports = HeroCalcData;",
    "'use strict';\nvar HeroModel = require(\"./HeroModel\");\n\nvar CloneModel = function (heroData, itemData, h,p) {\n    var self = this;\n    HeroModel.call(this, heroData, itemData, h);\n    self.parent = p;\n    return self;\n}\nCloneModel.prototype = Object.create(HeroModel.prototype);\nCloneModel.prototype.constructor = CloneModel;\n\nmodule.exports = CloneModel;",
    "var DamageTypeColor = {\n    'physical': '#979aa2',\n    'pure': 'goldenrod',\n    'magic': '#428bca',\n    'default': '#979aa2'\n}\n\nmodule.exports = DamageTypeColor;",
    "'use strict';\nvar ko = require('../herocalc_knockout');\n    \nvar DamageTypeColor = require(\"./DamageTypeColor\");\nvar extend = require(\"../util/extend\");\nvar TalentController = require(\"./TalentController\");\n\nvar HeroDamageMixin = function (self, itemData) {\n    self.critInfo = ko.pureComputed(function () {\n        var critSources = self.inventory.getCritSource();\n        extend(critSources, self.ability().getCritSource());\n        extend(critSources, self.buffs.getCritSource());\n        var critSourcesArray = [];\n        for (var prop in critSources) {\n            var el = critSources[prop];\n            el.name = prop\n            critSourcesArray.push(el);\n        }\n        function compareByMultiplier(a,b) {\n            if (a.multiplier < b.multiplier)\n                return 1;\n            if (a.multiplier > b.multiplier)\n                return -1;\n            return 0;\n        }\n\n        critSourcesArray.sort(compareByMultiplier);\n        \n        var result = [];\n        var critTotal = 0;\n        for (var i = 0; i < critSourcesArray.length; i++) {\n            var total = 1;\n            for (var j = 0; j < i; j++) {\n                for (var k = 0; k <critSourcesArray[j].count; k++) {\n                    total *= (1 - critSourcesArray[j].chance);\n                }\n            }\n            var total2 = 1;\n            for (var k = 0; k < critSourcesArray[i].count; k++) {\n                total2 *= (1 - critSourcesArray[i].chance);\n            }\n            total *= (1 - total2);\n            critTotal += total;\n            if (critSourcesArray[i].count > 1) {\n                result.push({\n                    'name':critSourcesArray[i].displayname + ' x' + critSourcesArray[i].count,\n                    'chance':critSourcesArray[i].chance,\n                    'multiplier':critSourcesArray[i].multiplier,\n                    'count':critSourcesArray[i].count,\n                    'totalChance':total\n                });\n            }\n            else {\n                result.push({\n                    'name':critSourcesArray[i].displayname,\n                    'chance':critSourcesArray[i].chance,\n                    'multiplier':critSourcesArray[i].multiplier,\n                    'count':critSourcesArray[i].count,\n                    'totalChance':total\n                });\n            }\n        }\n        return { sources: result, total: critTotal };\n    });\n\n    self.cleaveInfo = ko.pureComputed(function () {\n        var cleaveSources = self.inventory.getCleaveSource();\n        extend(cleaveSources, self.ability().getCleaveSource());\n        extend(cleaveSources, self.buffs.getCleaveSource());\n        var cleaveSourcesArray = [];\n        for (var prop in cleaveSources) {\n            var el = cleaveSources[prop];\n            el.name = prop\n            cleaveSourcesArray.push(el);\n        }\n        function compareByRadius(a,b) {\n            if (a.radius < b.radius)\n                return 1;\n            if (a.radius > b.radius)\n                return -1;\n            return 0;\n        }\n\n        cleaveSourcesArray.sort(compareByRadius);\n        var cleaveSourcesByRadius = {};\n        for (var i = 0; i < cleaveSourcesArray.length; i++) {\n            var total = 0;\n            for (var j = 0; j <cleaveSourcesArray.length; j++) {\n                if (cleaveSourcesArray[j].radius >= cleaveSourcesArray[i].radius) {\n                    total += cleaveSourcesArray[j].magnitude * cleaveSourcesArray[j].count;\n                }\n            }\n            cleaveSourcesByRadius[cleaveSourcesArray[i].radius] = total;\n        }\n        var result = [];\n        for (var prop in cleaveSourcesByRadius) {\n            result.push({\n                'radius':prop,\n                'magnitude':cleaveSourcesByRadius[prop]\n            });\n        }\n        return result;\n    });\n    \n    self.bashInfo = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        var bashSources = self.inventory.getBashSource(attacktype);\n        extend(bashSources, self.ability().getBashSource());\n        var bashSourcesArray = [];\n        for (var prop in bashSources) {\n            var el = bashSources[prop];\n            el.name = prop\n            bashSourcesArray.push(el);\n        }\n        function compareByDuration(a, b) {\n            if (a.duration < b.duration)\n                return 1;\n            if (a.duration > b.duration)\n                return -1;\n            return 0;\n        }\n\n        //bashSourcesArray.sort(compareByDuration);\n        \n        var result = [];\n        var bashTotal = 0;\n        for (var i = 0;i < bashSourcesArray.length; i++) {\n            var total = 1;\n            for (var j = 0; j < i; j++) {\n                for (var k = 0; k < bashSourcesArray[j].count; k++) {\n                    total *= (1 - bashSourcesArray[j].chance);\n                }\n            }\n            var total2 = 1;\n            for (var k = 0; k < bashSourcesArray[i].count; k++) {\n                total2 *= (1 - bashSourcesArray[i].chance);\n            }\n            total *= (1 - total2);\n            bashTotal += total;\n            if (bashSourcesArray[i].name === 'spirit_breaker_greater_bash') {\n                var d = bashSourcesArray[i].damage * self.totalMovementSpeed();\n            }\n            else {\n                var d = bashSourcesArray[i].damage;\n            }\n            if (bashSourcesArray[i].count > 1) {\n                result.push({\n                    'name':bashSourcesArray[i].displayname, // + ' x' + bashSourcesArray[i].count,\n                    'chance':bashSourcesArray[i].chance,\n                    'damage':d,\n                    'count':bashSourcesArray[i].count,\n                    'damageType':bashSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n            else {\n                result.push({\n                    'name':bashSourcesArray[i].displayname,\n                    'chance':bashSourcesArray[i].chance,\n                    'damage':d,\n                    'count':bashSourcesArray[i].count,\n                    'damageType':bashSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n\n        }\n        return { sources: result, total: bashTotal };\n    });\n    \n    self.orbProcInfo = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        var damageSources = self.inventory.getOrbProcSource();\n        var damageSourcesArray = [];\n        for (var prop in damageSources) {\n            var el = damageSources[prop];\n            el.name = prop\n            damageSourcesArray.push(el);\n        }\n        function compareByDamage(a, b) {\n            if (a.priority > b.priority) {\n                return 1;\n            }\n            if (a.priority < b.priority) {\n                return -1;\n            }\n            if (a.damage < b.damage)\n                return 1;\n            if (a.damage > b.damage)\n                return -1;\n            return 0;\n        }\n\n        damageSourcesArray.sort(compareByDamage);\n        \n        var result = [];\n        var damageTotal = 0;\n        for (var i=0 ; i < damageSourcesArray.length; i++) {\n            var total = 1;\n            for (var j = 0; j < i; j++) {\n                for (var k = 0; k < damageSourcesArray[j].count; k++) {\n                    total *= (1 - damageSourcesArray[j].chance);\n                }\n            }\n            var total2 = 1;\n            for (var k = 0; k < damageSourcesArray[i].count; k++) {\n                total2 *= (1 - damageSourcesArray[i].chance);\n            }\n            total *= (1 - total2);\n            damageTotal += total;\n            if (damageSourcesArray[i].count > 1) {\n                result.push({\n                    'name':damageSourcesArray[i].displayname + ' x' + damageSourcesArray[i].count,\n                    'chance':damageSourcesArray[i].chance,\n                    'damage':damageSourcesArray[i].damage,\n                    'count':damageSourcesArray[i].count,\n                    'damageType':damageSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n            else {\n                result.push({\n                    'name':damageSourcesArray[i].displayname,\n                    'chance':damageSourcesArray[i].chance,\n                    'damage':damageSourcesArray[i].damage,\n                    'count':damageSourcesArray[i].count,\n                    'damageType':damageSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n        }\n        return { sources: result, total: damageTotal };\n    });\n    \n    self.getReducedDamage = function (value, type) {\n        var result = value;\n        switch (type) {\n            case 'physical':\n                result = value * (1 - (0.06 * self.enemy().totalArmorPhysical()) / (1 + 0.06 * Math.abs(self.enemy().totalArmorPhysical())));\n            break;\n            case 'magic':\n                result = value * (1 - self.enemy().totalMagicResistance() / 100);\n            break;\n            case 'pure':\n                result = value;\n            break;\n            case 'composite':\n                result = value * (1 - (0.06 * self.enemy().totalArmorPhysical()) / (1 + 0.06 * Math.abs(self.enemy().totalArmorPhysical())));\n                result *= (1 - self.enemy().totalMagicResistance() / 100);\n            break;\n        }\n        result *= self.ability().getDamageAmplification() * self.debuffs.getDamageAmplification();\n        result *= self.enemy().ability().getDamageReduction() * self.enemy().buffs.getDamageReduction();\n        return result;\n    }\n    \n    self.damageTotalInfo = ko.pureComputed(function () {\n        var bonusDamageArray = [\n            self.ability().getBonusDamage().sources,\n            self.buffs.getBonusDamage().sources,\n            TalentController.getBonusDamage(self.selectedTalents()).sources\n        ],\n        bonusDamagePctArray = [\n            self.ability().getBonusDamagePercent().sources,\n            self.buffs.getBonusDamagePercent().sources\n        ],\n        itemBonusDamage = self.inventory.getBonusDamage().sources,\n        itemBonusDamagePct = self.buffs.itemBuffs.getBonusDamagePercent(self.inventory.getBonusDamagePercent()).sources,\n        critSources = self.critInfo(),\n        abilityOrbSources = self.ability().getOrbSource(),\n        itemOrbSources = self.inventory.getOrbSource(),\n        itemProcOrbSources = self.orbProcInfo(),\n        bashSources = self.bashInfo(),\n        \n        attackSources = [];\n        \n        attackSources.push({\n            name: 'Base Attack',\n            cooldown: 1\n        });\n        \n        // weaver_geminate_attack\n        if (self.heroId() === 'weaver') {\n            var a = self.ability().abilities().find(function (ability) {\n                return ability.name === 'weaver_geminate_attack';\n            });\n            if (a) {\n                if (a.level() > 0) {\n                    var cd = a.cooldown[a.level() - 1];\n                    attackSources.push({\n                        name: a.displayname,\n                        cooldown: (1/cd)\n                    });\n                }\n            }\n        }\n        \n        // echo_sabre\n        var item = self.inventory.items().find(function (o) { return o.item === \"echo_sabre\" && o.enabled(); });\n        if (item && self.heroData().attacktype === 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n            var item_echo_sabre = itemData['item_echo_sabre'];\n            attackSources.push({\n                name: item_echo_sabre.displayname,\n                cooldown: (1/item_echo_sabre.cooldown)\n            });\n        }\n\n        var attacks = attackSources.map(function (a) {\n            var baseDamage = (self.baseDamage()[0] + self.baseDamage()[1]) / 2,\n            totalDamage = 0,\n            totalCritableDamage = 0,\n            totalCrit = 0,\n            geminateAttack = { damage: 0, damageReduced: 0, cooldown: 6, active: false },\n            echoSabreAttack = { damage: 0, damageReduced: 0, cooldown: itemData['item_echo_sabre'].cooldown[0], active: false },\n            damage = {\n                pure: 0,\n                physical: 0,\n                magic: 0\n            },\n            result = [],\n            crits = [];\n            \n            // base damage\n            result.push({\n                name: 'Base Damage',\n                damage: baseDamage,\n                damageType: 'physical',\n                damageReduced: self.getReducedDamage(baseDamage, 'physical'),\n                enabled: ko.observable(true)\n            });\n            totalDamage += baseDamage;\n            totalCritableDamage += baseDamage;\n            damage.physical += baseDamage;\n            \n            // bonus damage from items\n            for (i in itemBonusDamage) {\n                var d = itemBonusDamage[i].damage*itemBonusDamage[i].count * self.ability().getSelfBaseDamageReductionPct() * self.enemy().ability().getBaseDamageReductionPct() * self.debuffs.itemBuffs.getBaseDamageReductionPct();\n                result.push({\n                    name: itemBonusDamage[i].displayname + (itemBonusDamage[i].count > 1 ? ' x' + itemBonusDamage[i].count : ''),\n                    damage: d,\n                    damageType: itemBonusDamage[i].damageType,\n                    damageReduced: self.getReducedDamage(d, itemBonusDamage[i].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                totalCritableDamage += d;\n                damage[itemBonusDamage[i].damageType] += d;\n            }\n\n            // bonus damage percent from items\n            for (i in itemBonusDamagePct) {\n                var d = baseDamage * itemBonusDamagePct[i].damage;\n                result.push({\n                    name: itemBonusDamagePct[i].displayname,\n                    damage: d,\n                    damageType: itemBonusDamagePct[i].damageType,\n                    damageReduced: self.getReducedDamage(d, itemBonusDamagePct[i].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                totalCritableDamage += d;\n                damage[itemBonusDamagePct[i].damageType] += d;\n            }\n            \n            // bonus damage from abilities and buffs\n            for (var i = 0; i < bonusDamageArray.length; i++) {\n                for (j in bonusDamageArray[i]) {\n                    var d = bonusDamageArray[i][j].damage;\n                    result.push({\n                        name: bonusDamageArray[i][j].displayname,\n                        damage: d,\n                        damageType: bonusDamageArray[i][j].damageType,\n                        damageReduced: self.getReducedDamage(d, bonusDamageArray[i][j].damageType),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    totalCritableDamage += d;\n                    damage[bonusDamageArray[i][j].damageType] += d;\n                }\n            }\n            \n            // bonus damage percent from abilities and buffs\n            for (var i = 0; i < bonusDamagePctArray.length; i++) {\n                for (j in bonusDamagePctArray[i]) {\n                    var d = baseDamage * bonusDamagePctArray[i][j].damage;\n                    result.push({\n                        name: bonusDamagePctArray[i][j].displayname,\n                        damage: d,\n                        damageType: bonusDamagePctArray[i][j].damageType,\n                        damageReduced: self.getReducedDamage(d, bonusDamagePctArray[i][j].damageType),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    totalCritableDamage += d;\n                    damage[bonusDamagePctArray[i][j].damageType] += d;\n                }\n            }\n            // drow_ranger_trueshot\n            if (self.heroData().attacktype === 'DOTA_UNIT_CAP_RANGED_ATTACK') {\n                if (self.heroId() === 'drow_ranger') {\n                    var s = self.ability().getBonusDamagePrecisionAura().sources;\n                    var index = 0;\n                }\n                else {\n                    var s = self.buffs.getBonusDamagePrecisionAura().sources;\n                    var index = 1;\n                }\n                if (s[index] != undefined) {\n                    if (self.heroId() === 'drow_ranger') {\n                        var d = s[index].damage * self.totalAgi();\n                    }\n                    else {\n                        var d = s[index].damage;\n                    }\n                    result.push({\n                        name: s[index].displayname,\n                        damage: d,\n                        damageType: 'physical',\n                        damageReduced: self.getReducedDamage(d, 'physical'),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    totalCritableDamage += d;\n                    damage.physical += d;                    \n                }\n            }\n            \n            // riki_backstab\n            if (self.heroId() === 'riki') {\n                var s = self.ability().getBonusDamageBackstab().sources;\n                var index = 0;\n            }\n            else {\n                var s = self.buffs.getBonusDamageBackstab().sources;\n                var index = 1;\n            }\n            if (s[index] != undefined) {\n                if (self.heroId() === 'riki') {\n                    var d = s[index].damage * self.totalAgi();\n                }\n                else {\n                    var d = s[index].damage;\n                }\n                result.push({\n                    name: s[index].displayname,\n                    damage: d,\n                    damageType: 'physical',\n                    damageReduced: self.getReducedDamage(d, 'physical'),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                //totalCritableDamage += d;\n                damage.physical += d;                    \n            }\n\n            // bash damage\n            for (var i = 0; i < bashSources.sources.length; i++) {\n                var o = bashSources.sources[i];\n                var d = bashSources.sources[i].damage;\n                var cd = self.attacksPerSecond();\n                if (o.cooldown) {\n                    cd = Math.max(1/o.cooldown, cd);\n                }\n                for (var j = 0; j < bashSources.sources[i].count; j++) {\n                    result.push({\n                        name: bashSources.sources[i].name,\n                        damage: d,\n                        damageType: bashSources.sources[i].damageType,\n                        damageReduced: self.getReducedDamage(d, bashSources.sources[i].damageType),\n                        dps: d * cd * bashSources.sources[i].chance,\n                        dpsReduced: self.getReducedDamage(d, bashSources.sources[i].damageType) * cd * bashSources.sources[i].chance,\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    damage[bashSources.sources[i].damageType] += d;\n                }\n\n            }\n            \n            // %-based orbs\n            for (var i = 0; i < itemProcOrbSources.sources.length; i++) {\n                var d = itemProcOrbSources.sources[i].damage * (1 - Math.pow(1 - itemProcOrbSources.sources[i].chance, itemProcOrbSources.sources[i].count));\n                result.push({\n                    name: itemProcOrbSources.sources[i].name,\n                    damage: d,\n                    damageType: itemProcOrbSources.sources[i].damageType,\n                    damageReduced: self.getReducedDamage(d, itemProcOrbSources.sources[i].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                damage[itemProcOrbSources.sources[i].damageType] += d;\n            }\n            \n            // ability orbs\n            for (var orb in abilityOrbSources) {\n                var d = abilityOrbSources[orb].damage * (1 - itemProcOrbSources.total);\n                result.push({\n                    name: abilityOrbSources[orb].displayname,\n                    damage: d,\n                    damageType: abilityOrbSources[orb].damageType,\n                    damageReduced: self.getReducedDamage(d, abilityOrbSources[orb].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                damage[abilityOrbSources[orb].damageType] += d;\n            }\n            \n            // item orbs\n            if (Object.keys(abilityOrbSources).length === 0) {\n                for (var orb in itemOrbSources) {\n                    var d = itemOrbSources[orb].damage * (1 - itemProcOrbSources.total);\n                    result.push({\n                        name: itemOrbSources[orb].displayname,\n                        damage: d,\n                        damageType: itemOrbSources[orb].damageType,\n                        damageReduced: self.getReducedDamage(d, itemOrbSources[orb].damageType),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    damage[itemOrbSources[orb].damageType] += d;\n                }            \n            }\n            \n            // crit damage\n            for (var i = 0; i < critSources.sources.length; i++) {\n                var d = totalCritableDamage * (critSources.sources[i].multiplier - 1);// * critSources.sources[i].totalChance;\n                crits.push({\n                    name: critSources.sources[i].name + ', ' + critSources.sources[i].multiplier + 'x, ' + (critSources.sources[i].totalChance * 100).toFixed(1) + '%',\n                    damage: d,\n                    damageType: 'physical',\n                    damageReduced: self.getReducedDamage(d, 'physical'),\n                    enabled: ko.observable(true),\n                    chance: critSources.sources[i].totalChance\n                });\n                totalCrit += d;\n            }\n\n            var totalReduced = self.getReducedDamage(damage.pure, 'pure') \n                    + self.getReducedDamage(damage.physical, 'physical')\n                    + self.getReducedDamage(damage.magic, 'magic'),\n                totalCritReduced = self.getReducedDamage(totalCrit, 'physical'),\n                dps = {\n                    base: totalDamage * self.attacksPerSecond(),\n                    crit: totalCrit * self.attacksPerSecond(),\n                    geminateAttack: geminateAttack.active ? geminateAttack.damage / geminateAttack.cooldown : 0,\n                    reduced: {\n                        base: totalReduced * self.attacksPerSecond(),\n                        crit: totalCritReduced * self.attacksPerSecond(),\n                        geminateAttack: geminateAttack.active ? self.getReducedDamage(geminateAttack.damage, 'physical') / geminateAttack.cooldown : 0,\n                    }\n                }\n                \n            crits.forEach(function (o) {\n                if (!o.dps) {\n                    o.dps = o.damage * (o.cooldown || self.attacksPerSecond()) * o.chance;\n                }\n                if (!o.dpsReduced) {\n                    o.dpsReduced = o.damageReduced * (o.cooldown || self.attacksPerSecond()) * o.chance;\n                }\n            });\n                \n            result.forEach(function (o) {\n                if (!o.dps) {\n                    o.dps = o.damage * (o.cooldown || self.attacksPerSecond());\n                }\n                if (!o.dpsReduced) {\n                    o.dpsReduced = o.damageReduced * (o.cooldown || self.attacksPerSecond());\n                }\n            });\n            \n            var totalCritChance = crits.reduce(function (memo, o) { return memo + o.chance }, 0);\n                \n            var t1Crit = ko.computed(function () {\n                var c = crits.find(function (o) { return o.enabled(); });\n                return c ? c.damage : 0;\n            });\n            var t2Crit = ko.computed(function () {\n                var c = crits.find(function (o) { return o.enabled(); });\n                return c ? c.damageReduced : 0;\n            });\n            var t3Crit = ko.computed(function () {\n                return crits.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dps }, 0);\n            });\n            var t4Crit = ko.computed(function () {\n                return crits.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dpsReduced }, 0);\n            });\n                \n            var t1 = ko.computed(function () {\n                return result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.damage }, 0) + t1Crit();\n            });\n            var t2 = ko.computed(function () {\n                return result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.damageReduced }, 0) + t2Crit();\n            });\n            var t3 = ko.computed(function () {\n                return (result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dps }, 0) + t3Crit()) * a.cooldown;\n            });\n            var t4 = ko.computed(function () {\n                return (result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dpsReduced }, 0) + t4Crit()) * a.cooldown;\n            });\n            \n            var totalCritRow = [t1Crit, t2Crit, t3Crit, t4Crit];\n            \n            var totalRow = [t1, t2, t3, t4];\n\n            return {\n                name: a.name + ' Subtotal',\n                cooldown: a.cooldown,\n                enabled: ko.observable(true),\n                visible: ko.observable(true),\n                totalCritChance: totalCritChance,\n                totalCritRow: totalCritRow,\n                totalRow: totalRow,\n                sources: result,\n                sourcesCrit: crits,\n                total: totalDamage,\n                totalCrit: totalCrit,\n                totalGeminateAttack: totalDamage + geminateAttack.damage,\n                totalGeminateAttackReduced: totalReduced + geminateAttack.damageReduced,\n                geminateAttack: geminateAttack,\n                totalCritReduced: totalCritReduced,\n                totalReduced: totalReduced,\n                sumTotal: totalDamage + totalCrit,\n                sumTotalReduced: totalReduced + totalCritReduced,\n                dps: {\n                    base: dps.base,\n                    crit: dps.base + dps.crit,\n                    geminateAttack: dps.base + dps.geminateAttack,\n                    total: dps.base + dps.crit + dps.geminateAttack,\n                    reduced: {\n                        base: dps.reduced.base,\n                        crit: dps.reduced.base + dps.reduced.crit,\n                        geminateAttack: dps.reduced.base + dps.reduced.geminateAttack,\n                        total: dps.reduced.base + dps.reduced.crit + dps.reduced.geminateAttack\n                    }\n                }\n            };\n        });\n        \n        var t1 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[0]() }, 0);\n        });\n        var t2 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[1]() }, 0);\n        });\n        var t3 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[2]() }, 0);\n        });\n        var t4 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[3]() }, 0);\n        });\n            \n        return {\n            attacks: attacks,\n            totalRow: [t1, t2, t3, t4]\n        }\n    });\n    \n    self.getDamageTypeColor = function (damageType) {\n        return DamageTypeColor[damageType] || DamageTypeColor['default'];\n    }\n    \n}\n\nmodule.exports = HeroDamageMixin;",
    "'use strict';\nvar ko = require('../herocalc_knockout');\n\nvar AbilityModel = require(\"../AbilityModel\");\nvar BuffViewModel = require(\"../BuffViewModel\");\nvar InventoryViewModel = require(\"../inventory/InventoryViewModel\");\nvar diffProperties = require(\"./diffProperties\");\nvar HeroDamageMixin = require(\"./HeroDamageMixin\");\nvar TalentController = require(\"./TalentController\");\nvar totalExp = require(\"./totalExp\");\nvar nextLevelExp = require(\"./nextLevelExp\");\n\nvar HeroModel = function (heroData, itemData, h) {\n    var self = this;\n    self.heroId = ko.observable(h);\n    self.selectedHeroLevel = ko.observable(1);\n    self.inventory = new InventoryViewModel(itemData, self);\n    self.selectedInventory = ko.observable(-1);\n    self.buffs = new BuffViewModel(itemData);\n    self.buffs.hasScepter = self.inventory.hasScepter;\n    self.debuffs = new BuffViewModel(itemData);\n    self.heroData = ko.computed(function () {\n      return heroData['npc_dota_hero_' + self.heroId()];\n    });\n    self.heroCompare = ko.observable(self);\n    self.enemy = ko.observable(self);\n    self.unit = ko.observable(self);\n    self.clone = ko.observable(self);\n    \n    self.talents = [\n        ko.observable(-1),\n        ko.observable(-1),\n        ko.observable(-1),\n        ko.observable(-1)\n    ];\n    \n    self.selectedTalents = ko.computed(function () {\n        var arr = [];\n        for (var i = 0; i < 4; i++) {\n            if (self.talents[i]() !== -1) {\n                arr.push(self.heroData().talents[i][self.talents[i]()]);\n            }\n        }\n        return arr;\n    });\n    \n    self.skillPointHistory = ko.observableArray();\n    \n    self.ability = ko.computed(function () {\n        var a = new AbilityModel(ko.observableArray(JSON.parse(JSON.stringify(self.heroData().abilities))), self);\n        switch (self.heroId()) {\n            case 'earth_spirit':\n            case 'ogre_magi':\n                a._abilities[3].level(1);\n            break;\n            case 'monkey_king':\n                a._abilities[5].level(1);\n            break;\n            case 'invoker':\n                for (var i = 5; i < 16; i++) {\n                    a._abilities[i].level(1);\n                }\n            break;\n        }\n        self.skillPointHistory.removeAll();\n        a.hasScepter = self.inventory.hasScepter\n        return a;\n    });\n\n    self.availableSkillPoints = ko.computed(function () {\n        var c = self.selectedHeroLevel();\n        for (var i = 0; i < 4; i++) {\n            if (self.selectedHeroLevel() < i * 5 + 10) self.talents[i](-1);\n        }\n        c -= self.talents.filter(function (talent) { return talent() !== -1 }).length;\n        for (var i = 0; i < self.ability().abilities().length; i++) {\n            switch(self.ability().abilities()[i].abilitytype) {\n                case 'DOTA_ABILITY_TYPE_ULTIMATE':\n                    if (self.heroId() === 'invoker') {\n                        /*while (\n                            ((self.ability().abilities()[i].level() == 1) && (parseInt(self.selectedHeroLevel()) < 2)) ||\n                            ((self.ability().abilities()[i].level() == 2) && (parseInt(self.selectedHeroLevel()) < 7)) ||\n                            ((self.ability().abilities()[i].level() == 3) && (parseInt(self.selectedHeroLevel()) < 11)) ||\n                            ((self.ability().abilities()[i].level() == 4) && (parseInt(self.selectedHeroLevel()) < 17))\n                        ) {\n                            self.ability().levelDownAbility(i, null, null, self);\n                        }*/\n                    }\n                    else if (self.heroId() === 'meepo') {\n                        while ((self.ability().abilities()[i].level()-1) * 7 + 3 > parseInt(self.selectedHeroLevel())) {\n                            self.ability().levelDownAbility(i, null, null, self);\n                        }\n                    }\n                    else {\n                        while (self.ability().abilities()[i].level() * 5 + 1 > parseInt(self.selectedHeroLevel())) {\n                            self.ability().levelDownAbility(i, null, null, self);\n                        }\n                    }\n                break;\n                default:\n                    while (self.ability().abilities()[i].level() * 2 - 1 > parseInt(self.selectedHeroLevel())) {\n                        self.ability().levelDownAbility(i, null, null, self);\n                    }\n                break;\n            }\n        }\n        while (self.skillPointHistory().length > c) {\n            self.ability().levelDownAbility(self.skillPointHistory()[self.skillPointHistory().length-1], null, null, self);\n        }\n        return c-self.skillPointHistory().length;\n    }, this);\n    self.primaryAttribute = ko.pureComputed(function () {\n        var v = self.heroData().attributeprimary;\n        if (v === 'DOTA_ATTRIBUTE_AGILITY') return 'agi';\n        if (v === 'DOTA_ATTRIBUTE_INTELLECT') return 'int';\n        if (v === 'DOTA_ATTRIBUTE_STRENGTH') return 'str';\n        return '';\n    });\n    self.totalExp = ko.pureComputed(function () {\n        return totalExp[self.selectedHeroLevel() - 1];\n    });\n    self.nextLevelExp = ko.pureComputed(function () {\n        return nextLevelExp[self.selectedHeroLevel() - 1];\n    });\n    self.startingArmor = ko.pureComputed(function () {\n        return (self.heroData().attributebaseagility * .14 + self.heroData().armorphysical).toFixed(2);\n    });\n    self.respawnTime = ko.pureComputed(function () {\n        var level = self.selectedHeroLevel();\n        var reduction = TalentController.getRespawnReduction(self.selectedTalents());\n        if (level >= 1 && level <= 5) {\n            return (level - 1) * 2 + 8 - reduction;\n        }\n        else if (level >= 6 && level <= 11) {\n            return (level - 6) * 2 + 26 - reduction;\n        }\n        else if (level >= 12 && level <= 17) {\n            return (level - 12) * 2 + 46 - reduction;\n        }\n        else if (level >= 18 && level <= 24) {\n            return (level - 18) * 4 + 66 - reduction;\n        }\n        else if (level == 25) {\n            return 100 - reduction;\n        }\n    });\n    self.totalAttribute = function (a) {\n        if (a === 'agi') return parseFloat(self.totalAgi());\n        if (a === 'int') return parseFloat(self.totalInt());\n        if (a === 'str') return parseFloat(self.totalStr());\n        return 0;\n    };\n    self.totalAgi = ko.pureComputed(function () {\n        return (self.heroData().attributebaseagility\n                + self.heroData().attributeagilitygain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('agi') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getAgility()\n                + TalentController.getAgility(self.selectedTalents())\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.intStolen = ko.observable(0).extend({ numeric: 0 });\n    self.totalInt = ko.pureComputed(function () {\n        return (self.heroData().attributebaseintelligence \n                + self.heroData().attributeintelligencegain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('int') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getIntelligence()\n                + TalentController.getIntelligence(self.selectedTalents())\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction() + self.intStolen()\n               ).toFixed(2);\n    });\n    self.totalStr = ko.pureComputed(function () {\n        return (self.heroData().attributebasestrength \n                + self.heroData().attributestrengthgain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('str') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getStrength()\n                + TalentController.getStrength(self.selectedTalents())\n                + self.enemy().ability().getStrengthReduction()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.health = ko.pureComputed(function () {\n        return (self.heroData().statushealth + Math.floor(self.totalStr()) * 20 \n                + self.inventory.getHealth()\n                + self.ability().getHealth()\n                + TalentController.getHealth(self.selectedTalents())\n                ).toFixed(2);\n    });\n    self.healthregen = ko.pureComputed(function () {\n        var healthRegenAura = [self.inventory.getHealthRegenAura, self.buffs.itemBuffs.getHealthRegenAura].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value: 0, excludeList: []});\n        return (self.heroData().statushealthregen + self.totalStr() * .06 \n                + self.inventory.getHealthRegen() \n                + self.ability().getHealthRegen()\n                + TalentController.getHealthRegen(self.selectedTalents())\n                + self.buffs.getHealthRegen()\n                + healthRegenAura.value\n                ).toFixed(2);\n    });\n    self.mana = ko.pureComputed(function () {\n        return (self.heroData().statusmana\n                + self.totalInt() * 11\n                + self.inventory.getMana()\n                + TalentController.getMana(self.selectedTalents())\n                + self.ability().getMana()).toFixed(2);\n    });\n    self.manaregen = ko.pureComputed(function () {\n        return ((self.heroData().statusmanaregen \n                + self.totalInt() * .04 \n                + self.ability().getManaRegen()\n                + TalentController.getManaRegen(self.selectedTalents())\n                ) \n                * (1 + self.inventory.getManaRegenPercent()) \n                + (self.heroId() === 'crystal_maiden' ? self.ability().getManaRegenArcaneAura() * 2 : self.buffs.getManaRegenArcaneAura())\n                + self.inventory.getManaRegenBloodstone()\n                + self.inventory.getManaRegen()\n                - self.enemy().ability().getManaRegenReduction()).toFixed(2);\n    });\n    self.totalArmorPhysical = ko.pureComputed(function () {\n        var armorAura = [self.inventory.getArmorAura, self.buffs.itemBuffs.getArmorAura].reduce(function (memo, fn) {\n            var obj = fn(memo.attributes);\n            return obj;\n        }, {value:0, attributes:[]});\n        var armorReduction = [self.enemy().inventory.getArmorReduction, self.debuffs.itemBuffs.getArmorReduction].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value: 0, excludeList: []});\n        return (self.enemy().ability().getArmorBaseReduction() * self.debuffs.getArmorBaseReduction() * (self.heroData().armorphysical + self.totalAgi() * .14)\n                + self.inventory.getArmor()\n                //+ self.inventory.getArmorAura().value\n                //+ self.enemy().inventory.getArmorReduction()\n                + self.ability().getArmor()\n                + TalentController.getArmor(self.selectedTalents())\n                + self.enemy().ability().getArmorReduction()\n                + self.buffs.getArmor()\n                //+ self.buffs.itemBuffs.getArmor()\n                + self.debuffs.getArmorReduction()\n                //+ self.buffs.itemBuffs.getArmorAura().value\n                + armorAura.value\n                + armorReduction.value\n                //+ self.debuffs.getArmorReduction()\n                ).toFixed(2);\n    });\n    self.totalArmorPhysicalReduction = ko.pureComputed(function () {\n        var totalArmor = self.totalArmorPhysical();\n        if (totalArmor >= 0) {\n            return ((0.06 * self.totalArmorPhysical()) / (1 + 0.06 * self.totalArmorPhysical()) * 100).toFixed(2);\n        }\n        else {\n            return -((0.06 * -self.totalArmorPhysical()) / (1 + 0.06 * -self.totalArmorPhysical()) * 100).toFixed(2);\n        }\n    });\n    self.spellAmp = ko.pureComputed(function () {\n        return (self.totalInt() / 14\n                + self.inventory.getSpellAmp()\n                + self.ability().getSpellAmp()\n                + TalentController.getSpellAmp(self.selectedTalents())\n                + self.buffs.getSpellAmp()\n                ).toFixed(2);\n    });\n    self.cooldownReductionFlat = ko.pureComputed(function () {\n        return self.inventory.getCooldownReductionFlat()\n                + self.ability().getCooldownReductionFlat()\n                + TalentController.getCooldownReductionFlat(self.selectedTalents())\n                + self.buffs.getCooldownReductionFlat()\n                - self.enemy().inventory.getCooldownIncreaseFlat()\n                - self.enemy().ability().getCooldownIncreaseFlat()\n                - self.debuffs.getCooldownIncreaseFlat()\n                - self.debuffs.itemBuffs.getCooldownIncreaseFlat();\n    });\n    self.cooldownReductionProduct = ko.pureComputed(function () {\n        return self.inventory.getCooldownReductionPercent().value\n                * self.ability().getCooldownReductionPercent()\n                * TalentController.getCooldownReductionPercent(self.selectedTalents())\n                * self.buffs.getCooldownReductionPercent()\n                * self.enemy().inventory.getCooldownIncreasePercent()\n                * self.enemy().ability().getCooldownIncreasePercent()\n                * self.debuffs.getCooldownIncreasePercent()\n                * self.debuffs.itemBuffs.getCooldownIncreasePercent();\n    });\n    self.cooldownReductionPercent = ko.pureComputed(function () {\n        return ((1 - self.cooldownReductionProduct()) * 100).toFixed(2);\n    });\n    self.totalMovementSpeed = ko.pureComputed(function () {\n        var MIN_MOVESPEED = 100;\n        var ms = (self.ability().setMovementSpeed() > 0 ? self.ability().setMovementSpeed() : self.buffs.setMovementSpeed());\n        if (ms > 0) {\n            return ms;\n        }\n        else {\n            var movementSpeedFlat = [self.inventory.getMovementSpeedFlat, self.buffs.itemBuffs.getMovementSpeedFlat].reduce(function (memo, fn) {\n                var obj = fn(memo.excludeList);\n                obj.value += memo.value;\n                return obj;\n            }, {value:0, excludeList:[]});\n            var movementSpeedPercent = [self.inventory.getMovementSpeedPercent, self.buffs.itemBuffs.getMovementSpeedPercent].reduce(function (memo, fn) {\n                var obj = fn(memo.excludeList);\n                obj.value += memo.value;\n                return obj;\n            }, {value:0, excludeList:[]});\n            var movementSpeedPercentReduction = [self.enemy().inventory.getMovementSpeedPercentReduction, self.debuffs.itemBuffs.getMovementSpeedPercentReduction].reduce(function (memo, fn) {\n                var obj = fn(memo.excludeList);\n                obj.value += memo.value;\n                return obj;\n            }, {value:0, excludeList:[]});\n            return Math.max(\n                self.enemy().inventory.isSheeped() || self.debuffs.itemBuffs.isSheeped() ? 140 :\n                (self.heroData().movementspeed + movementSpeedFlat.value + self.ability().getMovementSpeedFlat() + TalentController.getMovementSpeedFlat(self.selectedTalents())) * \n                (1 //+ self.inventory.getMovementSpeedPercent() \n                   + movementSpeedPercent.value\n                   + movementSpeedPercentReduction.value\n                   + self.ability().getMovementSpeedPercent() \n                   //+ self.enemy().inventory.getMovementSpeedPercentReduction() \n                   + self.enemy().ability().getMovementSpeedPercentReduction() \n                   + self.buffs.getMovementSpeedPercent() \n                   + self.debuffs.getMovementSpeedPercentReduction()\n                   + self.unit().ability().getMovementSpeedPercent() \n                )\n            , MIN_MOVESPEED).toFixed(2);\n        }\n    });\n    self.totalTurnRate = ko.pureComputed(function () {\n        return (self.heroData().movementturnrate \n                * (1 + self.enemy().ability().getTurnRateReduction()\n                     + self.debuffs.getTurnRateReduction())).toFixed(2);\n    });\n    self.baseDamage = ko.pureComputed(function () {\n        var totalAttribute = self.totalAttribute(self.primaryAttribute()),\n            abilityBaseDamage = self.ability().getBaseDamage(),\n            minDamage = self.heroData().attackdamagemin,\n            maxDamage = self.heroData().attackdamagemax;\n        return [Math.floor((minDamage + totalAttribute + abilityBaseDamage.total) * self.ability().getSelfBaseDamageReductionPct() * self.enemy().ability().getBaseDamageReductionPct() * self.debuffs.getBaseDamageReductionPct() * self.debuffs.itemBuffs.getBaseDamageReductionPct() * abilityBaseDamage.multiplier),\n                Math.floor((maxDamage + totalAttribute + abilityBaseDamage.total) * self.ability().getSelfBaseDamageReductionPct() * self.enemy().ability().getBaseDamageReductionPct() * self.debuffs.getBaseDamageReductionPct() * self.debuffs.itemBuffs.getBaseDamageReductionPct() * abilityBaseDamage.multiplier)];\n    });\n    self.baseDamageAvg = ko.pureComputed(function () {\n        return (self.baseDamage()[0] + self.baseDamage()[1]) / 2;\n    });\n    self.baseDamageMin = ko.pureComputed(function () {\n        return self.baseDamage()[0];\n    });\n    self.baseDamageMax = ko.pureComputed(function () {\n        return self.baseDamage()[1];\n    });\n    self.bonusDamage = ko.pureComputed(function () {\n        return ((self.inventory.getBonusDamage().total\n                + self.ability().getBonusDamage().total\n                + TalentController.getBonusDamage(self.selectedTalents()).total\n                + self.buffs.getBonusDamage().total\n                + Math.floor((self.baseDamage()[0] + self.baseDamage()[1]) / 2 \n                              * (self.buffs.itemBuffs.getBonusDamagePercent(self.inventory.getBonusDamagePercent()).total\n                                 + self.ability().getBonusDamagePercent().total\n                                 + self.buffs.getBonusDamagePercent().total\n                                )\n                            )\n                + Math.floor(\n                    (self.heroData().attacktype == 'DOTA_UNIT_CAP_RANGED_ATTACK' \n                        ? ((self.heroId() == 'drow_ranger') ? self.ability().getBonusDamagePrecisionAura().total[0] * self.totalAgi() : self.buffs.getBonusDamagePrecisionAura().total[1])\n                        : 0)\n                  )\n                + Math.floor(\n                    ((self.heroId() == 'riki') ? self.ability().getBonusDamageBackstab().total[0] * self.totalAgi() : 0)\n                  )\n                ) * self.ability().getSelfBaseDamageReductionPct()\n                  * self.enemy().ability().getBaseDamageReductionPct()\n                  * self.debuffs.itemBuffs.getBaseDamageReductionPct());\n    });\n    self.bonusDamageReduction = ko.pureComputed(function () {\n        return Math.abs(self.enemy().ability().getBonusDamageReduction() + self.debuffs.getBonusDamageReduction());\n    });\n    self.damageAvg = ko.pureComputed(function () {\n        return (self.baseDamage()[0] + self.baseDamage()[1]) / 2 + self.bonusDamage();\n    });\n    self.damageMin = ko.pureComputed(function () {\n        return self.baseDamage()[0] + self.bonusDamage();\n    });\n    self.damageMax = ko.pureComputed(function () {\n        return self.baseDamage()[1] + self.bonusDamage();\n    });\n    self.damage = ko.pureComputed(function () {\n        return [self.baseDamage()[0] + self.bonusDamage(),\n                self.baseDamage()[1] + self.bonusDamage()];\n    });\n    self.totalMagicResistanceProduct = ko.pureComputed(function () {\n        return (1 - self.heroData().magicalresistance / 100) \n                * self.inventory.getMagicResist()\n                * self.ability().getMagicResist()\n                * TalentController.getMagicResist(self.selectedTalents())\n                * self.buffs.getMagicResist()\n                * self.inventory.getMagicResistReductionSelf()\n                * self.enemy().inventory.getMagicResistReduction()\n                * self.enemy().ability().getMagicResistReduction()\n                * self.debuffs.getMagicResistReduction()\n                * self.debuffs.itemBuffs.getMagicResistReduction();\n    });\n    self.totalMagicResistance = ko.pureComputed(function () {\n        return ((1 - self.totalMagicResistanceProduct()) * 100).toFixed(2);\n    });\n    self.bat = ko.pureComputed(function () {\n        var abilityBAT = self.ability().getBAT();\n        if (abilityBAT > 0) {\n            return abilityBAT;\n        }\n        return self.heroData().attackrate;\n    });\n    self.ias = ko.pureComputed(function () {\n        var attackSpeed = [self.inventory.getAttackSpeed].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value:0, excludeList:[]});\n        var attackSpeedAura = [self.inventory.getAttackSpeedAura, self.buffs.itemBuffs.getAttackSpeedAura].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value: 0, excludeList: []});\n        var attackSpeedReduction = [self.enemy().inventory.getAttackSpeedReduction, self.debuffs.itemBuffs.getAttackSpeedReduction].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value:0, excludeList: []});\n        var val = parseFloat(self.totalAgi()) \n                //+ self.inventory.getAttackSpeed() \n                + attackSpeed.value\n                + attackSpeedAura.value\n                + attackSpeedReduction.value\n                //+ self.enemy().inventory.getAttackSpeedReduction() \n                + self.ability().getAttackSpeed() \n                + TalentController.getAttackSpeed(self.selectedTalents()) \n                + self.enemy().ability().getAttackSpeedReduction() \n                + self.buffs.getAttackSpeed() \n                + self.debuffs.getAttackSpeedReduction()\n                + self.unit().ability().getAttackSpeed(); \n        if (val < -80) {\n            return -80;\n        }\n        else if (val > 500) {\n            return 500;\n        }\n        return val.toFixed(2);\n    });\n    self.attackTime = ko.pureComputed(function () {\n        return (self.bat() / (1 + self.ias() / 100)).toFixed(2);\n    });\n    self.attacksPerSecond = ko.pureComputed(function () {\n        return ((1 + self.ias() / 100) / self.bat()).toFixed(2);\n    });\n    self.evasion = ko.pureComputed(function () {\n        if (self.enemy().inventory.isSheeped() || self.debuffs.itemBuffs.isSheeped()) return 0;\n        var e = self.ability().setEvasion();\n        if (e) {\n            return (e * 100).toFixed(2);\n        }\n        else {\n            return (\n                (\n                    1 - (\n                        self.inventory.getEvasion()\n                        * self.ability().getEvasion()\n                        * self.ability().getEvasionBacktrack()\n                        * TalentController.getEvasion(self.selectedTalents())\n                        * self.buffs.itemBuffs.getEvasion()\n                    )\n                ) * 100\n            ).toFixed(2);\n        }\n    });\n    self.ehpPhysical = ko.pureComputed(function () {\n        var evasion = self.enemy().inventory.isSheeped() || self.debuffs.itemBuffs.isSheeped() ? 1 : self.inventory.getEvasion() * self.ability().getEvasion() * self.buffs.itemBuffs.getEvasion();\n        if (self.totalArmorPhysical() >= 0) {\n            var ehp = self.health() * (1 + .06 * self.totalArmorPhysical());\n        }\n        else {\n            var ehp = self.health() * (1 - .06 * self.totalArmorPhysical()) / (1 - .12 * self.totalArmorPhysical());\n        }\n        ehp /= (1 - (1 - (evasion * self.ability().getEvasionBacktrack())));\n        ehp /= (1 - parseFloat(self.enemy().missChance()) / 100);\n        ehp *= (self.inventory.activeItems().some(function (item) {return item.item == 'mask_of_madness';}) ? (1 / 1.3) : 1);\n        ehp *= (1 / self.ability().getDamageReduction());\n        ehp *= (1 / self.buffs.getDamageReduction());\n        ehp *= (1 / self.enemy().ability().getDamageAmplification());\n        ehp *= (1 / self.debuffs.getDamageAmplification());\n        return ehp.toFixed(2);\n    });\n    self.ehpMagical = ko.pureComputed(function () {\n        var ehp = self.health() / self.totalMagicResistanceProduct();\n        ehp *= (self.inventory.activeItems().some(function (item) {return item.item == 'mask_of_madness';}) ? (1 / 1.3) : 1);\n        ehp *= (1 / self.ability().getDamageReduction());\n        ehp *= (1 / self.buffs.getDamageReduction());\n        ehp *= (1 / self.ability().getEvasionBacktrack());\n        ehp *= (1 / self.enemy().ability().getDamageAmplification());\n        ehp *= (1 / self.debuffs.getDamageAmplification());\n        return ehp.toFixed(2);\n    });\n    self.bash = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        return ((1 - (self.inventory.getBash(attacktype) * self.ability().getBash())) * 100).toFixed(2);\n    });\n    \n    self.critChance = ko.pureComputed(function () {\n        return ((1 - (self.inventory.getCritChance() * self.ability().getCritChance())) * 100).toFixed(2);\n    });\n\n    HeroDamageMixin(self, itemData);\n    \n    /*self.critDamage = ko.computed(function () {\n        self.critInfo();\n        return 0;\n    });*/\n    self.missChance = ko.pureComputed(function () {\n        var missDebuff = [self.enemy().inventory.getMissChance, self.debuffs.itemBuffs.getMissChance].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value *= memo.value;\n            return obj;\n        }, {value:1, excludeList:[]});\n        return ((1 - (self.enemy().ability().getMissChance() * self.debuffs.getMissChance() * missDebuff.value)) * 100).toFixed(2);\n    });\n    self.totalattackrange = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        return self.heroData().attackrange\n             + self.ability().getAttackRange()\n             + TalentController.getAttackRange(self.selectedTalents())\n             + self.inventory.getAttackRange(attacktype).value;\n    });\n    self.visionrangeday = ko.pureComputed(function () {\n        return (self.heroData().visiondaytimerange) * (1 + self.enemy().ability().getVisionRangePctReduction() + self.debuffs.getVisionRangePctReduction());\n    });\n    self.visionrangenight = ko.pureComputed(function () {\n        return (self.heroData().visionnighttimerange + self.inventory.getVisionRangeNight() + self.ability().getVisionRangeNight()) * (1 + self.enemy().ability().getVisionRangePctReduction() + self.debuffs.getVisionRangePctReduction());\n    });\n    self.lifesteal = ko.pureComputed(function () {\n        var total = self.inventory.getLifesteal()\n                  + self.ability().getLifesteal()\n                  + TalentController.getLifesteal(self.selectedTalents())\n                  + self.buffs.getLifesteal();\n        if (self.heroData().attacktype == 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n            var lifestealAura = [self.inventory.getLifestealAura, self.buffs.itemBuffs.getLifestealAura].reduce(function (memo, fn) {\n                var obj = fn(memo.excludeList);\n                obj.value += memo.value;\n                return obj;\n            }, {value: 0, excludeList: []});\n            total += lifestealAura.value;\n        }\n        return (total).toFixed(2);\n    });\n    \n    self.diffProperties = diffProperties;\n    self.diff = {};\n\n    for (var i = 0; i < self.diffProperties.length; i++) {\n        var index = i;\n        self.diff[self.diffProperties[index]] = self.getDiffFunction(self.diffProperties[index]);\n    }\n};\n\nHeroModel.prototype.getDiffFunction = function (prop) {\n    var self = this;\n    return ko.computed(function () {\n        if (prop == 'baseDamage') {\n            return [self[prop]()[0] - self.heroCompare()[prop]()[0], self[prop]()[1] - self.heroCompare()[prop]()[1]];\n        }\n        else {\n            return self[prop]() - self.heroCompare()[prop]();\n        }\n    }, this, { deferEvaluation: true });\n}\n\nHeroModel.prototype.getAbilityLevelMax = function (data) {\n    if (data.abilitytype === 'DOTA_ABILITY_TYPE_ATTRIBUTES') {\n        return 1;\n    }\n    else if (data.name === 'invoker_quas' || data.name === 'invoker_wex' || data.name === 'invoker_exort') {\n        return 7;\n    }\n    else if (data.name === 'invoker_invoke') {\n        return 1;\n    }\n    else if (data.name === 'earth_spirit_stone_caller' || data.name === 'ogre_magi_unrefined_fireblast' || data.name === 'monkey_king_mischief') {\n        return 1;\n    }\n    else if (data.abilitytype === 'DOTA_ABILITY_TYPE_ULTIMATE' || data.name === 'keeper_of_the_light_recall' ||\n             data.name === 'keeper_of_the_light_blinding_light' || data.name === 'ember_spirit_activate_fire_remnant' ||\n             data.name === 'lone_druid_true_form_battle_cry') {\n        return 3;\n    }\n    else if (data.name === 'puck_ethereal_jaunt'  || data.name === 'shadow_demon_shadow_poison_release' ||\n             data.name === 'templar_assassin_trap' || data.name === 'spectre_reality') {\n        return 0;\n    }\n    else if (data.name === 'invoker_cold_snap'  || data.name === 'invoker_ghost_walk' || data.name === 'invoker_tornado' || \n             data.name === 'invoker_emp' || data.name === 'invoker_alacrity' || data.name === 'invoker_chaos_meteor' || \n             data.name === 'invoker_sun_strike' || data.name === 'invoker_forge_spirit' || data.name === 'invoker_ice_wall' || \n             data.name === 'invoker_deafening_blast') {\n        return 0;\n    }\n    else if (data.name === 'techies_minefield_sign' || data.name === 'techies_focused_detonate') {\n        return 0;\n    }\n    else {\n        return 4;\n    }\n};\n\nHeroModel.prototype.toggleTalent = function (talentTier, talentIndex) {\n    if (this.talents[talentTier]() === talentIndex) {\n        this.talents[talentTier](-1);\n    }\n    else if (this.availableSkillPoints() > 0 || this.talents[talentTier]() == 1 - talentIndex) {\n        if (parseInt(this.selectedHeroLevel()) >= talentTier * 5 + 10) {\n            this.talents[talentTier](talentIndex);\n        }\n    }\n}\n\nmodule.exports = HeroModel;",
    "var HeroOption = function (name, displayname, hero) {\n    this.heroName = name;\n    this.heroDisplayName = displayname;\n    this.hero = hero;\n};\n\nmodule.exports = HeroOption;",
    "'use strict';\nvar HeroModel = require(\"./HeroModel\");\nvar illusionData = require(\"../illusion/illusionData\");\nvar findWhere = require(\"../util/findWhere\");\n\nvar IllusionModel = function (heroData, itemData, h,p, abilityLevel) {\n    var self = this;\n    HeroModel.call(this, heroData, itemData, h);\n    self.illusionAbilityLevel = ko.observable(abilityLevel);\n    self.parent = p;\n    \n    self.totalAgi = ko.computed(function () {\n        return (self.heroData().attributebaseagility\n                + self.heroData().attributeagilitygain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('agi') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getAgility()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.intStolen = ko.observable(0).extend({ numeric: 0 });\n    self.totalInt = ko.computed(function () {\n        return (self.heroData().attributebaseintelligence \n                + self.heroData().attributeintelligencegain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('int') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getIntelligence()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction() + self.intStolen()\n               ).toFixed(2);\n    });\n    self.totalStr = ko.computed(function () {\n        return (self.heroData().attributebasestrength \n                + self.heroData().attributestrengthgain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('str') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getStrength()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    \n    self.getAbilityAttributeValue = function(hero, ability, attributeName, level) {\n        if (ability == 'item_manta') {\n            var abilityObj = itemData[ability];\n        }\n        else {\n            var abilityObj = findWhere(heroData['npc_dota_hero_' + hero].abilities, {name: ability});\n        }\n        var attribute = findWhere(abilityObj.attributes, {name: attributeName});\n        if (level == 0) {\n            return parseFloat(attribute.value[0]);\n        }\n        else if (level > attribute.length) {\n            return parseFloat(attribute.value[0]);\n        }\n        else {\n            return parseFloat(attribute.value[level - 1]);\n        }\n    }\n    \n    self.getIncomingDamageMultiplier = function(illusionType, hasScepter, attackType) {\n        if (illusionType == 'item_manta') {\n            if (attackType == 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n                return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].incoming_damage_melee, self.illusionAbilityLevel())/100)\n            }\n            else {\n                return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].incoming_damage_ranged, self.illusionAbilityLevel())/100)\n            }\n        }\n        else {\n            return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].incoming_damage, self.illusionAbilityLevel())/100)\n        }\n    }\n    self.getOutgoingDamageMultiplier = function(illusionType, hasScepter, attackType) {\n        if (illusionType == 'item_manta') {\n            if (attackType == 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n                return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].outgoing_damage_melee, self.illusionAbilityLevel())/100);\n            }\n            else {\n                return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].outgoing_damage_ranged, self.illusionAbilityLevel())/100);\n            }\n        }\n        else {\n            return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].outgoing_damage, self.illusionAbilityLevel())/100);\n        }\n    }\n\n    self.baseDamage = ko.computed(function() {\n        return [Math.floor(heroData['npc_dota_hero_' + self.heroId()].attackdamagemin + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total)\n                * self.getOutgoingDamageMultiplier(self.illusionType(), false, self.heroData().attacktype),\n                Math.floor(heroData['npc_dota_hero_' + self.heroId()].attackdamagemax + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total)\n                * self.getOutgoingDamageMultiplier(self.illusionType(), false, self.heroData().attacktype)];\n    });\n    \n    self.damage = ko.computed(function() {\n        return [self.baseDamage()[0],\n                self.baseDamage()[1]];\n    });\n    \n    self.ehpPhysical = ko.computed(function() {\n        var ehp = (self.health() * (1 + .06 * self.totalArmorPhysical())) / (1 - (1 - (self.inventory.getEvasion() * self.ability().getEvasion())))\n        ehp *= (self.inventory.activeItems().some(function(item) {return item.item == 'mask_of_madness';}) ? (1 / 1.3) : 1);\n        ehp *= (1 / self.getIncomingDamageMultiplier(self.illusionType(), false, self.heroData().attacktype));\n        return ehp.toFixed(2);\n    });\n    self.ehpMagical = ko.computed(function() {\n        var ehp = self.health() / self.totalMagicResistanceProduct();\n        ehp *= (1 / self.getIncomingDamageMultiplier(self.illusionType(), false, self.heroData().attacktype));\n        return ehp.toFixed(2);\n    });\n    \n    self.totalArmorPhysical = ko.computed(function() {\n        return (self.enemy().ability().getArmorBaseReduction() * self.debuffs.getArmorBaseReduction() * (heroData['npc_dota_hero_' + self.heroId()].armorphysical + self.totalAgi() * .14)\n                + self.ability().getArmor() + self.enemy().ability().getArmorReduction() + self.buffs.getArmor() + self.debuffs.getArmorReduction()).toFixed(2);\n    });\n    \n    self.ias = ko.computed(function() {\n        var val = parseFloat(self.totalAgi()) \n                + self.ability().getAttackSpeed() \n                + self.enemy().ability().getAttackSpeedReduction() \n                + self.buffs.getAttackSpeed() \n                + self.debuffs.getAttackSpeedReduction()\n                + self.unit().ability().getAttackSpeed(); \n        if (val < -80) {\n            return -80;\n        }\n        else if (val > 400) {\n            return 400;\n        }\n        return val.toFixed(2);\n    });\n    \n    return self;\n}\nIllusionModel.prototype = Object.create(HeroModel.prototype);\nIllusionModel.prototype.constructor = IllusionModel;\n\nmodule.exports = IllusionModel;",
    "var cooldownTalents = require('./cooldownTalents');\nvar talentAbilityMap = require('./talentAbilityMap');\n\nmodule.exports = {\n    getTalentById: function (talents, talentId) {\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name == talentId) {\n                return ability;\n            }\n        }\n    },\n    getBonusDamage: function (talents) {\n        var totalAttribute = 0;\n        var sources = {};\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_attack_damage_')) {\n                totalAttribute += ability.attributes[0].value[0];\n                sources[ability.name] = {\n                    'damage': ability.attributes[0].value[0],\n                    'damageType': 'physical',\n                    'displayname': ability.displayname\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    },\n    getHealth: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_hp_') && !ability.name.startsWith('special_bonus_hp_regen_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getHealthRegen: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_hp_regen_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getMana: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_mp_') && !ability.name.startsWith('special_bonus_mp_regen_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getManaRegen: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_mp_regen_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getArmor: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_armor_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getSpellAmp: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_spell_amplify_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getUniqueCooldownReductionFlat: function (talents) {\n        var totalAttribute = {};\n        for (var i = 0; i < talents.length; i++) {\n            var talent = talents[i];\n            if (cooldownTalents.indexOf(talent.name) != -1) {\n                var abilities = [].concat(talentAbilityMap[talent.name]);\n                abilities.forEach(function (ability) {\n                    totalAttribute[ability] = talent.attributes[0].value[0];\n                });\n            }\n        }\n        return totalAttribute;\n    },\n    getCooldownReductionFlat: function (talents) {\n        var totalAttribute = 0;\n        return totalAttribute;\n    },\n    getCooldownReductionPercent: function (talents) {\n        var totalAttribute = 1;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_cooldown_reduction_')) {\n                totalAttribute *= (1 - ability.attributes[0].value[0]/100);\n            }\n        }\n        return totalAttribute;\n    },\n    getCooldownIncreaseFlat: function (talents) {\n        var totalAttribute = 0;\n        return totalAttribute;\n    },\n    getCooldownIncreasePercent: function (talents) {\n        var totalAttribute = 1;\n        return totalAttribute;\n    },\n    getMovementSpeedFlat: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_movement_speed_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getAttackRange: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_attack_range_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getAttackSpeed: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_attack_speed_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getLifesteal: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_lifesteal_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getEvasion: function (talents) {\n        var totalAttribute = 1;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_evasion_')) {\n                totalAttribute *= (1 - ability.attributes[0].value[0]/100);\n            }\n        }\n        return totalAttribute;\n    },\n    getMagicResist: function (talents) {\n        var totalAttribute = 1;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_magic_resistance_')) {\n                totalAttribute *= (1 - ability.attributes[0].value[0]/100);\n            }\n        }\n        return totalAttribute;\n    },\n    getRespawnReduction: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_respawn_reduction_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getStrength: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_strength_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n            else if (ability.name.startsWith('special_bonus_all_stats_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getAgility: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_agility_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n            else if (ability.name.startsWith('special_bonus_all_stats_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    },\n    getIntelligence: function (talents) {\n        var totalAttribute = 0;\n        for (var i = 0; i < talents.length; i++) {\n            var ability = talents[i];\n            if (ability.name.startsWith('special_bonus_intelligence_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n            else if (ability.name.startsWith('special_bonus_all_stats_')) {\n                totalAttribute += ability.attributes[0].value[0];\n            }\n        }\n        return totalAttribute;\n    }\n}",
    "'use strict';\nvar ko = require('../herocalc_knockout');\n\nvar AbilityModel = require(\"../AbilityModel\");\nvar HeroModel = require(\"./HeroModel\");\n\nvar UnitModel = function (heroData, itemData, unitData, h, p) {\n    var self = this;\n    HeroModel.call(this, heroData, itemData, 'abaddon');\n    self.parent = p;\n    self.unitId = ko.observable(h);\n    self.unitLevel = ko.observable(1);\n\n    self.heroData = ko.computed(function() {\n        return unitData[self.unitId()];\n    });\n    self.getAbilityLevelMax = function(data) {\n        if (data.abilitytype == 'DOTA_ABILITY_TYPE_ATTRIBUTES') {\n            return 10;\n        }\n        else if (data.name == 'necronomicon_archer_mana_burn' || data.name == 'necronomicon_archer_aoe'\n            || data.name == 'necronomicon_warrior_mana_burn' || data.name == 'necronomicon_warrior_last_will') {\n            return 3;\n        }\n        else if (data.name == 'necronomicon_warrior_sight') {\n            return 1;\n        }\n        else {\n            return 4;\n        }\n    };\n    self.availableSkillPoints.dispose();\n    self.ability = ko.computed(function() {\n        var a = new AbilityModel(ko.observableArray(JSON.parse(JSON.stringify(self.heroData().abilities))), self);\n        a.hasScepter = self.inventory.hasScepter\n        switch (self.unitId()) {\n            case 'npc_dota_necronomicon_archer_1':\n            case 'npc_dota_necronomicon_warrior_1':\n                a.abilities()[0].level(1);\n                a.abilities()[1].level(1);\n            break;\n            case 'npc_dota_necronomicon_archer_2':\n            case 'npc_dota_necronomicon_warrior_2':\n                a.abilities()[0].level(2);\n                a.abilities()[1].level(2);\n            break;\n            case 'npc_dota_necronomicon_archer_3':\n                a.abilities()[0].level(3);\n                a.abilities()[1].level(3);\n            break;\n            case 'npc_dota_necronomicon_warrior_3':\n                a.abilities()[0].level(3);\n                a.abilities()[1].level(3);\n                a.abilities()[2].level(1);\n            break;\n        }\n        a.levelUpAbility = function(index, data, event, hero) {\n            var i = ko.utils.unwrapObservable(index);\n            switch (a.abilities()[i].name) {\n                case 'necronomicon_archer_mana_burn':\n                case 'necronomicon_archer_aoe':\n                case 'necronomicon_warrior_mana_burn':\n                case 'necronomicon_warrior_last_will':\n                case 'necronomicon_warrior_sight':\n                break;\n                default:\n                    if (a.abilities()[i].level() < hero.getAbilityLevelMax(data)) {\n                        a.abilities()[i].level(a.abilities()[i].level()+1);\n                    }                    \n                break;\n            }\n\n        };\n        a.levelDownAbility = function(index, data, event, hero) {            \n            var i = ko.utils.unwrapObservable(index);\n            switch (a.abilities()[i].name) {\n                case 'necronomicon_archer_mana_burn':\n                case 'necronomicon_archer_aoe':\n                case 'necronomicon_warrior_mana_burn':\n                case 'necronomicon_warrior_last_will':\n                case 'necronomicon_warrior_sight':\n                break;\n                default:\n                    if (a.abilities()[i].level()>0) {\n                        a.abilities()[i].level(a.abilities()[i].level()-1);\n                    }\n                break;\n            }\n        };\n        return a;\n    });        \n    self.primaryAttribute = ko.computed(function() {\n        //var v = unitData[self.unitId()].attributeprimary;\n        var v = 0;\n        if (v == 'DOTA_ATTRIBUTE_AGILITY') {\n            return 'agi'\n        }\n        else if (v == 'DOTA_ATTRIBUTE_INTELLECT') {\n            return 'int'\n        }\n        else if (v == 'DOTA_ATTRIBUTE_STRENGTH') {\n            return 'str'\n        }\n        else {\n            return ''\n        }\n    });\n    self.totalAttribute = function(a) {\n        if (a == 'agi') {\n            return parseFloat(self.totalAgi());\n        }\n        if (a == 'int') {\n            return parseFloat(self.totalInt());\n        }\n        if (a == 'str') {\n            return parseFloat(self.totalStr());\n        }\n        return 0;\n    };\n    self.totalAgi = ko.computed(function() {\n        return (unitData[self.unitId()].attributebaseagility\n                + unitData[self.unitId()].attributeagilitygain * (self.selectedHeroLevel() - 1) \n                //+ self.inventory.getAttributes('agi') \n                + self.ability().getAttributeBonusLevel()*2\n                + self.ability().getAgility()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.totalInt = ko.computed(function() {\n        return (unitData[self.unitId()].attributebaseintelligence \n                + unitData[self.unitId()].attributeintelligencegain * (self.selectedHeroLevel() - 1) \n                //+ self.inventory.getAttributes('int') \n                + self.ability().getAttributeBonusLevel()*2\n                + self.ability().getIntelligence()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.totalStr = ko.computed(function() {\n        return (unitData[self.unitId()].attributebasestrength \n                + unitData[self.unitId()].attributestrengthgain * (self.selectedHeroLevel() - 1) \n                //+ self.inventory.getAttributes('str') \n                + self.ability().getAttributeBonusLevel()*2\n                + self.ability().getStrength()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    /*self.health = ko.computed(function() {\n        return (unitData[self.unitId()].statushealth + self.totalStr()*19 \n                + self.inventory.getHealth()\n                + self.ability().getHealth()).toFixed(2);\n    });\n    self.healthregen = ko.computed(function() {\n        return (unitData[self.unitId()].statushealthregen + self.totalStr()*.03 \n                + self.inventory.getHealthRegen() \n                + self.ability().getHealthRegen()\n                + self.buffs.getHealthRegen()).toFixed(2);\n    });\n    self.mana = ko.computed(function() {\n        return (unitData[self.unitId()].statusmana + self.totalInt()*13 + self.inventory.getMana()).toFixed(2);\n    });\n    self.manaregen = ko.computed(function() {\n        return ((unitData[self.unitId()].statusmanaregen \n                + self.totalInt()*.04 \n                + self.ability().getManaRegen()) \n                * (1 + self.inventory.getManaRegenPercent()) \n                + (self.selectedHero().heroName == 'crystal_maiden' ? self.ability().getManaRegenArcaneAura() * 2 : self.buffs.getManaRegenArcaneAura())\n                + self.inventory.getManaRegenBloodstone()\n                - self.enemy().ability().getManaRegenReduction()).toFixed(2);\n    });\n    self.totalArmorPhysical = ko.computed(function() {\n        return (self.enemy().ability().getArmorBaseReduction() * self.debuffs.getArmorBaseReduction() * (unitData[self.unitId()].armorphysical + self.totalAgi()*.14)\n                + self.inventory.getArmor() + self.ability().getArmor() + self.enemy().ability().getArmorReduction() + self.buffs.getArmor() + self.debuffs.getArmorReduction()).toFixed(2);\n    });\n    self.totalArmorPhysicalReduction = ko.computed(function() {\n        return ((0.06 * self.totalArmorPhysical()) / (1 + 0.06 * self.totalArmorPhysical()) * 100).toFixed(2);\n    });\n    self.totalMovementSpeed = ko.computed(function() {\n        if (self.parent.ability().isShapeShiftActive()) {\n            return 522;\n        }\n        var ms = (self.ability().setMovementSpeed() > 0 ? self.ability().setMovementSpeed() : self.buffs.setMovementSpeed());\n        if (ms > 0) {\n            return ms;\n        }\n        else {\n            return ((unitData[self.unitId()].movementspeed + self.inventory.getMovementSpeedFlat()+ self.ability().getMovementSpeedFlat()) * \n                    (1 + self.inventory.getMovementSpeedPercent() \n                       + self.ability().getMovementSpeedPercent() \n                       + self.enemy().inventory.getMovementSpeedPercentReduction() \n                       + self.enemy().ability().getMovementSpeedPercentReduction() \n                       + self.buffs.getMovementSpeedPercent() \n                       + self.debuffs.getMovementSpeedPercentReduction()\n                    )).toFixed(2);\n        }\n    });\n    self.totalTurnRate = ko.computed(function() {\n        return (unitData[self.unitId()].movementturnrate \n                * (1 + self.enemy().ability().getTurnRateReduction()\n                     + self.debuffs.getTurnRateReduction())).toFixed(2);\n    });\n    */\n    self.baseDamage = ko.computed(function() {\n        return [Math.floor(unitData[self.unitId()].attackdamagemin + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total),\n                Math.floor(unitData[self.unitId()].attackdamagemax + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total)];\n    });\n    /*self.bonusDamage = ko.computed(function() {\n        return self.inventory.getBonusDamage().total\n                + self.ability().getBonusDamage().total\n                + self.buffs.getBonusDamage().total\n                + Math.floor((self.baseDamage()[0] + self.baseDamage()[1])/2 \n                              * (self.inventory.getBonusDamagePercent().total\n                                 + self.ability().getBonusDamagePercent().total\n                                 + self.buffs.getBonusDamagePercent().total\n                                )\n                            )\n                + Math.floor(\n                    (self.hero().attacktype() == 'DOTA_UNIT_CAP_RANGED_ATTACK' \n                        ? ((self.selectedHero().heroName == 'drow_ranger') ? self.ability().getBonusDamagePrecisionAura().total[0] * self.totalAgi() : self.buffs.getBonusDamagePrecisionAura().total[1])\n                        : 0)\n                  );\n    });*/\n    /*self.bonusDamageReduction = ko.computed(function() {\n        return Math.abs(self.enemy().ability().getBonusDamageReduction() + self.debuffs.getBonusDamageReduction());\n    });\n    self.damage = ko.computed(function() {\n        return [self.baseDamage()[0] + self.bonusDamage()[0],\n                self.baseDamage()[1] + self.bonusDamage()[1]];\n    });*/\n    self.totalMagicResistanceProduct = ko.computed(function() {\n        return (1 - unitData[self.unitId()].magicalresistance / 100) \n                   * (1 - self.inventory.getMagicResist() / 100) \n                   * (1 - self.ability().getMagicResist() / 100) \n                   * (1 - self.buffs.getMagicResist() / 100) \n                   * self.enemy().inventory.getMagicResistReduction()\n                   * self.enemy().ability().getMagicResistReduction() \n                   * self.debuffs.getMagicResistReduction();\n    });\n    self.totalMagicResistance = ko.computed(function() {\n        return (1 - self.totalMagicResistanceProduct());\n    });\n    self.bat = ko.computed(function() {\n        var abilityBAT = self.ability().getBAT();\n        if (abilityBAT > 0) {\n            return abilityBAT;\n        }\n        return unitData[self.unitId()].attackrate;\n    });\n    /*\n    self.ias = ko.computed(function() {\n        var val = parseFloat(self.totalAgi()) \n                + self.inventory.getAttackSpeed() \n                + self.ability().getAttackSpeed() \n                + self.enemy().ability().getAttackSpeedReduction() \n                + self.buffs.getAttackSpeed() \n                + self.debuffs.getAttackSpeedReduction();\n        if (val < -80) {\n            return -80;\n        }\n        else if (val > 400) {\n            return 400;\n        }\n        return (val).toFixed(2);\n    });*/\n    self.attackTime = ko.computed(function() {\n        return (self.bat() / (1 + self.ias() / 100)).toFixed(2);\n    });\n    self.attacksPerSecond = ko.computed(function() {\n        return (1 + self.ias() / 100) / self.bat();\n    });\n    self.evasion = ko.computed(function() {\n        var e = self.ability().setEvasion();\n        if (e) {\n            return (e * 100).toFixed(2) + '%';\n        }\n        else {\n            return ((1-(self.inventory.getEvasion() * self.ability().getEvasion())) * 100).toFixed(2) + '%';\n        }\n    });\n    self.ehpPhysical = ko.computed(function() {\n        return ((self.health() * (1 + .06 * self.totalArmorPhysical())) / (1-(1-(self.inventory.getEvasion() * self.ability().getEvasion())))).toFixed(2);\n    });\n    self.ehpMagical = ko.computed(function() {\n        return (self.health() / self.totalMagicResistanceProduct()).toFixed(2);\n    });\n    self.heroId(h);\n    self.unitId.subscribe(function (newValue) {\n        self.heroId(newValue);\n    });\n    return self;\n}\nUnitModel.prototype = Object.create(HeroModel.prototype);\nUnitModel.prototype.constructor = UnitModel;\n\nmodule.exports = UnitModel;",
    "var UnitOption = function (name, displayname, levels, image, level) {\n    this.heroName = ko.computed(function() {\n        return (levels > 0) ? name + (level() <= levels ? level() : 1) : name;\n    });\n    this.heroDisplayName = displayname;\n    this.image = image;\n    this.levels = levels;\n};\n\nmodule.exports = UnitOption;",
    "module.exports = ['special_bonus_unique_antimage', 'special_bonus_unique_bloodseeker', 'special_bonus_unique_bounty_hunter', 'special_bonus_unique_dazzle_1', 'special_bonus_unique_earthshaker', 'special_bonus_unique_invoker_3', 'special_bonus_unique_lina_1', 'special_bonus_unique_lone_druid_4', 'special_bonus_unique_luna_2', 'special_bonus_unique_magnus', 'special_bonus_unique_meepo', 'special_bonus_unique_necrophos', 'special_bonus_unique_nevermore_2', 'special_bonus_unique_night_stalker', 'special_bonus_unique_riki_2', 'special_bonus_unique_shadow_demon_2', 'special_bonus_unique_skywrath', 'special_bonus_unique_spectre', 'special_bonus_unique_sven', 'special_bonus_unique_terrorblade', 'special_bonus_unique_troll_warlord', 'special_bonus_unique_windranger', 'special_bonus_unique_winter_wyvern_2'];",
    "var diffProperties = [\n    'totalAgi',\n    'totalInt',\n    'totalStr',\n    'health',\n    'healthregen',\n    'mana',\n    'manaregen',\n    'totalArmorPhysical',\n    'totalArmorPhysicalReduction',\n    'totalMovementSpeed',\n    'totalTurnRate',\n    'spellAmp',\n    'cooldownReductionPercent',\n    'baseDamage',\n    'bonusDamage',\n    'bonusDamageReduction',\n    'damage',\n    'totalMagicResistanceProduct',\n    'totalMagicResistance',\n    'bat',\n    'ias',\n    'attackTime',\n    'attacksPerSecond',\n    'evasion',\n    'ehpPhysical',\n    'ehpMagical',\n    'bash',\n    'critChance',\n    //'critDamage',\n    'missChance',\n    'totalattackrange',\n    'visionrangeday',\n    'visionrangenight',\n    'lifesteal'\n];\n\nmodule.exports = diffProperties;",
    "var HeroOption = require(\"./HeroOption\");\n\nvar heroOptionsArray = {};\n\nvar init = function (heroData) {\n    heroOptionsArray.items = [];\n    for (var h in heroData) {\n        heroOptionsArray.items.push(new HeroOption(h.replace('npc_dota_hero_', ''), heroData[h].displayname));\n    }\n    return heroOptionsArray.items;\n}\n\nheroOptionsArray.init = init;\n\nmodule.exports = heroOptionsArray;",
    "var nextLevelExp = [200, 300, 400, 500, 600, 615, 630, 645, 660, 675, 775, 1175, 1200, 1225, 1250, 1275, 1375, 1400, 1425, 1600, 1900, 2200, 2500, 2975, '&mdash;'];\n\nmodule.exports = nextLevelExp;",
    "module.exports = {\n    special_bonus_unique_abaddon: 'abaddon_aphotic_shield',\n    special_bonus_unique_underlord: 'abyssal_underlord_pit_of_malice',\n    special_bonus_unique_alchemist_2: 'alchemist_unstable_concoction',\n    special_bonus_unique_alchemist: 'alchemist_acid_spray',\n    special_bonus_unique_ancient_apparition_3: 'ancient_apparition_ice_vortex',\n    special_bonus_unique_ancient_apparition_4: 'ancient_apparition_ice_vortex',\n    special_bonus_unique_ancient_apparition_1: 'ancient_apparition_cold_feet',\n    special_bonus_unique_ancient_apparition_2: 'ancient_apparition_chilling_touch',\n    special_bonus_unique_antimage: 'antimage_blink',\n    special_bonus_unique_antimage_2: 'antimage_mana_void',\n    special_bonus_unique_arc_warden_2: 'arc_warden_flux',\n    special_bonus_unique_arc_warden: 'arc_warden_spark_wraith',\n    special_bonus_unique_axe: 'axe_battle_hunger',\n    special_bonus_unique_bane_1: 'bane_enfeeble',\n    special_bonus_unique_bane_2: 'bane_brain_sap',\n    special_bonus_unique_batrider_1: 'batrider_firefly',\n    special_bonus_unique_batrider_2: 'batrider_flamebreak',\n    special_bonus_unique_beastmaster: 'beastmaster_wild_axes',\n    special_bonus_unique_bloodseeker_2: 'bloodseeker_blood_bath',\n    special_bonus_unique_bloodseeker_3: 'bloodseeker_rupture',\n    special_bonus_unique_bloodseeker: 'bloodseeker_blood_bath',\n    special_bonus_unique_bounty_hunter_2: 'bounty_hunter_shuriken_toss',\n    special_bonus_unique_bounty_hunter: 'bounty_hunter_jinada',\n    special_bonus_unique_brewmaster_2: 'brewmaster_thunder_clap',\n    special_bonus_unique_brewmaster: 'brewmaster_primal_split',\n    special_bonus_unique_centaur_1: 'centaur_return',\n    special_bonus_unique_centaur_2: 'centaur_hoof_stomp',\n    special_bonus_unique_chaos_knight: 'chaos_knight_reality_rift',\n    special_bonus_unique_chen_3: 'chen_test_of_faith_teleport',\n    special_bonus_unique_chen_1: 'chen_holy_persuasion',\n    special_bonus_unique_chen_2: 'chen_hand_of_god',\n    special_bonus_unique_clinkz_1: 'clinkz_searing_arrows',\n    special_bonus_unique_clinkz_2: 'clinkz_strafe',\n    special_bonus_unique_crystal_maiden_3: 'crystal_maiden_freezing_field',\n    special_bonus_unique_crystal_maiden_1: 'crystal_maiden_frostbite',\n    special_bonus_unique_crystal_maiden_2: 'crystal_maiden_crystal_nova',\n    special_bonus_unique_dark_seer_2: 'dark_seer_vacuum',\n    special_bonus_unique_dark_seer: 'dark_seer_ion_shell',\n    special_bonus_unique_dazzle_3: 'dazzle_poison_touch',\n    special_bonus_unique_dazzle_1: 'dazzle_poison_touch',\n    special_bonus_unique_dazzle_2: 'dazzle_shadow_wave',\n    special_bonus_unique_death_prophet_2: 'death_prophet_carrion_swarm',\n    special_bonus_unique_death_prophet: 'death_prophet_exorcism',\n    special_bonus_unique_disruptor_2: 'disruptor_kinetic_field',\n    special_bonus_unique_disruptor_3: 'disruptor_thunder_strike',\n    special_bonus_unique_disruptor: 'disruptor_thunder_strike',\n    special_bonus_unique_doom_3: 'doom_bringer_devour',\n    special_bonus_unique_doom_4: 'doom_bringer_scorched_earth',\n    special_bonus_unique_doom_5: 'doom_bringer_doom',\n    special_bonus_unique_doom_2: 'doom_bringer_devour',\n    special_bonus_unique_doom_1: 'doom_bringer_infernal_blade',\n    special_bonus_unique_dragon_knight: 'dragon_knight_dragon_blood',\n    special_bonus_unique_drow_ranger_1: 'drow_ranger_trueshot',\n    special_bonus_unique_drow_ranger_2: 'drow_ranger_wave_of_silence',\n    special_bonus_unique_drow_ranger_3: 'drow_ranger_marksmanship',\n    special_bonus_unique_earth_spirit_2: 'earth_spirit_geomagnetic_grip',\n    special_bonus_unique_earth_spirit: 'earth_spirit_rolling_boulder',\n    special_bonus_unique_earthshaker_3: 'earthshaker_fissure',\n    special_bonus_unique_earthshaker: 'earthshaker_enchant_totem',\n    special_bonus_unique_elder_titan_2: 'elder_titan_echo_stomp',\n    special_bonus_unique_elder_titan: 'elder_titan_ancestral_spirit',\n    special_bonus_unique_ember_spirit_1: 'ember_spirit_flame_guard',\n    special_bonus_unique_ember_spirit_2: 'ember_spirit_searing_chains',\n    special_bonus_unique_enchantress_2: 'enchantress_natures_attendants',\n    special_bonus_unique_enchantress_3: 'enchantress_untouchable',\n    special_bonus_unique_enchantress_4: 'enchantress_impetus',\n    special_bonus_unique_enchantress_1: 'enchantress_enchant',\n    special_bonus_unique_enigma_2: 'enigma_malefice',\n    special_bonus_unique_enigma: 'enigma_demonic_conversion',\n    special_bonus_unique_furion_3: 'furion_teleportation',\n    special_bonus_unique_gyrocopter_1: 'gyrocopter_homing_missile',\n    special_bonus_unique_gyrocopter_2: 'gyrocopter_flak_cannon',\n    special_bonus_unique_huskar_2: 'huskar_burning_spear',\n    special_bonus_unique_huskar: 'huskar_life_break',\n    special_bonus_unique_invoker_2: 'invoker_deafening_blast',\n    special_bonus_unique_invoker_3: 'invoker_tornado',\n    special_bonus_unique_jakiro_2: 'jakiro_dual_breath',\n    special_bonus_unique_jakiro_3: 'jakiro_macropyre',\n    special_bonus_unique_jakiro: 'jakiro_ice_path',\n    special_bonus_unique_juggernaut: 'juggernaut_blade_fury',\n    special_bonus_unique_keeper_of_the_light_2: 'keeper_of_the_light_chakra_magic',\n    special_bonus_unique_keeper_of_the_light: 'keeper_of_the_light_spirit_form_illuminate',\n    special_bonus_unique_kunkka_2: 'kunkka_torrent',\n    special_bonus_unique_kunkka: 'kunkka_torrent',\n    special_bonus_unique_legion_commander: 'legion_commander_duel',\n    special_bonus_unique_legion_commander_2: 'legion_commander_press_the_attack',\n    special_bonus_unique_leshrac_1: 'leshrac_diabolic_edict',\n    special_bonus_unique_leshrac_2: 'leshrac_lightning_storm',\n    special_bonus_unique_lich_3: 'lich_frost_nova',\n    special_bonus_unique_lifestealer: 'life_stealer_rage',\n    special_bonus_unique_lina_3: 'lina_light_strike_array',\n    special_bonus_unique_lina_1: 'lina_dragon_slave',\n    special_bonus_unique_lina_2: 'lina_fiery_soul',\n    special_bonus_unique_lion_2: 'lion_impale',\n    special_bonus_unique_lion: 'lion_mana_drain',\n    special_bonus_unique_lone_druid_4: 'lone_druid_savage_roar',\n    special_bonus_unique_luna_1: 'luna_lucent_beam',\n    special_bonus_unique_luna_2: 'luna_lucent_beam',\n    special_bonus_unique_lycan_1: 'lycan_shapeshift',\n    special_bonus_unique_magnus_2: 'magnataur_empower',\n    special_bonus_unique_magnus_3: 'magnataur_skewer',\n    special_bonus_unique_medusa_2: 'medusa_split_shot',\n    special_bonus_unique_medusa: 'medusa_stone_gaze',\n    special_bonus_unique_meepo: 'meepo_poof',\n    special_bonus_unique_mirana_3: 'mirana_arrow',\n    special_bonus_unique_mirana_1: 'mirana_leap',\n    special_bonus_unique_mirana_2: 'mirana_arrow',\n    special_bonus_unique_monkey_king_2: 'monkey_king_jingu_mastery',\n    special_bonus_unique_monkey_king: 'monkey_king_boundless_strike',\n    special_bonus_unique_morphling_1: 'morphling_waveform',\n    special_bonus_unique_morphling_2: 'morphling_replicate',\n    special_bonus_unique_naga_siren_2: 'naga_siren_ensnare',\n    special_bonus_unique_naga_siren: 'naga_siren_mirror_image',\n    special_bonus_unique_necrophos: 'necrolyte_death_pulse',\n    special_bonus_unique_night_stalker: 'night_stalker_crippling_fear',\n    special_bonus_unique_nyx_2: 'nyx_assassin_impale',\n    special_bonus_unique_nyx: 'nyx_assassin_spiked_carapace',\n    special_bonus_unique_outworld_devourer: 'obsidian_destroyer_arcane_orb',\n    special_bonus_unique_ogre_magi: 'ogre_magi_bloodlust',\n    special_bonus_unique_omniknight_1: 'omniknight_purification',\n    special_bonus_unique_omniknight_2: 'omniknight_degen_aura',\n    special_bonus_unique_oracle_2: 'oracle_fortunes_end',\n    special_bonus_unique_oracle: 'oracle_false_promise',\n    special_bonus_unique_phantom_assassin: 'phantom_assassin_stifling_dagger',\n    special_bonus_unique_phantom_lancer_2: 'phantom_lancer_spirit_lance',\n    special_bonus_unique_phantom_lancer: 'phantom_lancer_phantom_edge',\n    special_bonus_unique_phoenix_3: 'phoenix_fire_spirits',\n    special_bonus_unique_phoenix_1: 'phoenix_supernova',\n    special_bonus_unique_phoenix_2: 'phoenix_supernova',\n    special_bonus_unique_puck_2: 'puck_waning_rift',\n    special_bonus_unique_puck: 'puck_illusory_orb',\n    special_bonus_unique_pudge_3: 'pudge_dismember',\n    special_bonus_unique_pudge_1: 'pudge_flesh_heap',\n    special_bonus_unique_pudge_2: 'pudge_rot',\n    special_bonus_unique_pugna_5: 'pugna_decrepify',\n    special_bonus_unique_pugna_1: 'pugna_life_drain',\n    special_bonus_unique_pugna_2: 'pugna_nether_blast',\n    special_bonus_unique_queen_of_pain: 'queenofpain_shadow_strike',\n    special_bonus_unique_clockwerk_2: 'rattletrap_rocket_flare',\n    special_bonus_unique_clockwerk_3: 'rattletrap_battery_assault',\n    special_bonus_unique_clockwerk: 'rattletrap_battery_assault',\n    special_bonus_unique_razor_2: 'razor_unstable_current',\n    special_bonus_unique_razor: 'razor_static_link',\n    special_bonus_unique_rubick: 'rubick_telekinesis_land',\n    special_bonus_unique_sand_king_2: 'sandking_sand_storm',\n    special_bonus_unique_sand_king_3: 'sandking_epicenter',\n    special_bonus_unique_sand_king: 'sandking_epicenter',\n    special_bonus_unique_shadow_demon_3: 'shadow_demon_shadow_poison',\n    special_bonus_unique_shadow_demon_1: 'shadow_demon_demonic_purge',\n    special_bonus_unique_shadow_demon_2: 'shadow_demon_soul_catcher',\n    special_bonus_unique_shadow_shaman_2: 'shadow_shaman_shackles',\n    special_bonus_unique_shadow_shaman_3: 'shadow_shaman_ether_shock',\n    special_bonus_unique_timbersaw: 'shredder_whirling_death',\n    special_bonus_unique_wraith_king_3: 'skeleton_king_hellfire_blast',\n    special_bonus_unique_wraith_king_2: 'skeleton_king_vampiric_aura',\n    special_bonus_unique_wraith_king_1: 'skeleton_king_reincarnation',\n    special_bonus_unique_wraith_king_4: 'skeleton_king_reincarnation',\n    special_bonus_unique_skywrath: 'skywrath_mage_ancient_seal',\n    special_bonus_unique_slark: 'slark_pounce',\n    special_bonus_unique_sniper_1: 'sniper_shrapnel',\n    special_bonus_unique_sniper_2: 'sniper_shrapnel',\n    special_bonus_unique_spectre: 'spectre_spectral_dagger',\n    special_bonus_unique_spirit_breaker_3: 'spirit_breaker_greater_bash',\n    special_bonus_unique_spirit_breaker_1: 'spirit_breaker_greater_bash',\n    special_bonus_unique_storm_spirit: 'storm_spirit_electric_vortex',\n    special_bonus_unique_sven: 'sven_storm_bolt',\n    special_bonus_unique_templar_assassin_2: 'templar_assassin_meld',\n    special_bonus_unique_templar_assassin: 'templar_assassin_refraction',\n    special_bonus_unique_terrorblade: 'terrorblade_sunder',\n    special_bonus_unique_tidehunter: 'tidehunter_gush',\n    special_bonus_unique_tinker: 'tinker_laser',\n    special_bonus_unique_tiny: 'tiny_avalanche',\n    special_bonus_unique_treant_2: 'treant_leech_seed',\n    special_bonus_unique_treant: 'treant_living_armor',\n    special_bonus_unique_tusk_2: 'tusk_snowball',\n    special_bonus_unique_undying: 'undying_tombstone',\n    special_bonus_unique_undying_2: 'undying_decay',\n    special_bonus_unique_ursa: 'ursa_fury_swipes',\n    special_bonus_unique_vengeful_spirit_1: 'vengefulspirit_magic_missile',\n    special_bonus_unique_vengeful_spirit_2: 'vengefulspirit_command_aura',\n    special_bonus_unique_vengeful_spirit_3: 'vengefulspirit_magic_missile',\n    special_bonus_unique_venomancer_2: 'venomancer_poison_sting',\n    special_bonus_unique_venomancer: 'venomancer_plague_ward',\n    special_bonus_unique_viper_1: 'viper_poison_attack',\n    special_bonus_unique_viper_2: 'viper_viper_strike',\n    special_bonus_unique_visage_3: 'visage_soul_assumption',\n    special_bonus_unique_warlock_3: 'warlock_shadow_word',\n    special_bonus_unique_warlock_1: 'warlock_rain_of_chaos',\n    special_bonus_unique_warlock_2: 'warlock_rain_of_chaos',\n    special_bonus_unique_weaver_1: 'weaver_shukuchi',\n    special_bonus_unique_weaver_2: 'weaver_shukuchi',\n    special_bonus_unique_windranger_2: 'windrunner_windrun',\n    special_bonus_unique_windranger: 'windrunner_windrun',\n    special_bonus_unique_windranger_3: 'windrunner_powershot',\n    special_bonus_unique_winter_wyvern_3: 'winter_wyvern_cold_embrace',\n    special_bonus_unique_winter_wyvern_1: 'winter_wyvern_arctic_burn',\n    special_bonus_unique_winter_wyvern_2: 'winter_wyvern_splinter_blast',\n    special_bonus_unique_wisp_2: 'wisp_tether',\n    special_bonus_unique_wisp: 'wisp_spirits',\n    special_bonus_unique_witch_doctor_1: 'witch_doctor_death_ward',\n    special_bonus_unique_witch_doctor_2: 'witch_doctor_voodoo_restoration',\n    special_bonus_unique_zeus_2: 'zuus_arc_lightning',\n    special_bonus_unique_zeus_3: 'zuus_lightning_bolt',\n    special_bonus_unique_zeus: 'zuus_static_field',\n    \n    special_bonus_unique_beastmaster_2: 'beastmaster_call_of_the_wild_boar',\n    special_bonus_unique_brewmaster_3: 'brewmaster_thunder_clap',\n    special_bonus_unique_bristleback: 'bristleback_viscous_nasal_goo',\n    special_bonus_unique_bristleback_2: 'bristleback_quill_spray',\n    special_bonus_unique_broodmother_3: 'broodmother_spawn_spiderlings',\n    //special_bonus_unique_broodmother_4: '+14 Spiders Attack Damage',\n    special_bonus_unique_broodmother_1: 'broodmother_spin_web',\n    //special_bonus_unique_broodmother_2: '+225 Spiders Health',\n    //special_bonus_unique_chen_4: '+1000 Creep Min Health',\n    special_bonus_unique_earthshaker_2: 'earthshaker_echo_slam',\n    special_bonus_unique_faceless_void: 'faceless_void_time_walk',\n    special_bonus_unique_furion_2: 'furion_force_of_nature',\n    //special_bonus_unique_furion: '2x Treant HP/Damage',\n    special_bonus_unique_invoker_1: 'invoker_forge_spirit',\n    special_bonus_unique_legion_commander_3: 'legion_commander_moment_of_courage',\n    special_bonus_unique_lich_1: 'lich_frost_armor',\n    //special_bonus_unique_lich_2: 'Attacks Apply 30% MS and AS Slow',\n    //special_bonus_unique_lone_druid_1: '+50 Spirit Bear Damage',\n    //special_bonus_unique_lone_druid_2: '+12 Spirit Bear Armor',\n    //special_bonus_unique_lone_druid_5: '+50% Spirit Bear Magic Resistance',\n    special_bonus_unique_lone_druid_3: 'lone_druid_spirit_bear_entangle',\n    special_bonus_unique_lycan_3: 'lycan_feral_impulse',\n    special_bonus_unique_lycan_2: 'lycan_summon_wolves',\n    special_bonus_unique_nevermore_1: 'nevermore_necromastery',\n    special_bonus_unique_nevermore_2: ['nevermore_shadowraze1', 'nevermore_shadowraze2', 'nevermore_shadowraze3'],\n    special_bonus_unique_pugna_4: 'pugna_nether_blast',\n    special_bonus_unique_pugna_3: 'pugna_nether_ward',\n    special_bonus_unique_riki_1: 'riki_permanent_invisibility',\n    special_bonus_unique_riki_2: 'riki_smoke_screen',\n    special_bonus_unique_shadow_shaman_4: 'shadow_shaman_mass_serpent_ward',\n    special_bonus_unique_shadow_shaman_1: 'shadow_shaman_mass_serpent_ward',\n    special_bonus_unique_silencer: 'silencer_curse_of_the_silent',\n    special_bonus_unique_slardar: 'slardar_bash',\n    special_bonus_unique_spirit_breaker_2: 'spirit_breaker_charge_of_darkness',\n    special_bonus_unique_techies: 'techies_suicide',\n    special_bonus_unique_troll_warlord: ['troll_warlord_whirling_axes_melee', 'troll_warlord_whirling_axes_ranged'],\n    special_bonus_unique_tusk: 'tusk_walrus_punch',\n    //special_bonus_unique_visage_2: '+120 Familiars Movement Speed',\n    special_bonus_unique_warlock_4: 'warlock_rain_of_chaos',\n    special_bonus_unique_witch_doctor_3: 'witch_doctor_paralyzing_cask'\n}",
    "var totalExp = [0, 200, 500, 900, 1400, 2000, 2615, 3425, 3890, 4550, 5225, 6000, 7175, 8375, 9600, 10850, 12125, 13500, 14900, 16325, 17925, 19825, 22025, 24525, 27500];\n\nmodule.exports = totalExp;",
    "var abilityData = {\n    'alchemist_acid_spray': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'armor_reduction',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -a;\n            },\n            returnProperty: 'armorReduction'\n        }\n    ],\n    'alchemist_unstable_concoction': [\n        {\n            label: 'Brew Time',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'max_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/5;\n            }\n        },\n        {\n            attributeName: 'max_stun',\n            label: 'Total Stun',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/5;\n            }\n        }\n    ],\n    'ancient_apparition_cold_feet': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'stun_duration',\n            label: 'Total Stun',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            }\n        }\n    ],\n    'ancient_apparition_ice_blast': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'dot_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')+v*a;\n            }\n        }\n    ],\n    'antimage_mana_void': [\n        {\n            label: 'Enemy Missing Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_void_damage_per_mana',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'axe_battle_hunger': [\n        {\n            label: 'Battle Hungered Enemies',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'speed_bonus',\n            label: 'Movement Speed Bonus',\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'slow',\n            label: 'Movement Speed Bonus',\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'bane_nightmare': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'bane_fiends_grip': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'fiend_grip_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (parent.inventory.hasScepter()) {\n                    return v[0]*abilityModel.getAbilityAttributeValue(ability.attributes, 'fiend_grip_damage_scepter',ability.level());\n                }\n                else {\n                    return v[0]*a;\n                }\n            }\n        },\n        {\n            attributeName: 'fiend_grip_mana_drain',\n            label: 'Total Mana Drain',\n            controlType: 'text',\n            controls: [0,1],\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (parent.inventory.hasScepter()) {\n                    return v[0]*v[1]*abilityModel.getAbilityAttributeValue(ability.attributes, 'fiend_grip_mana_drain_scepter',ability.level())/100;\n                }\n                else {\n                    return v[0]*v[1]*a/100;\n                }\n            }\n        }\n    ],\n    'batrider_sticky_napalm': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Bonus Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        },\n        {\n            attributeName: 'movement_speed_pct',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'turn_rate_pct',\n            label: 'Enemy Turn Rate Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'turnRateReduction'\n        }\n    ],\n    'batrider_firefly': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'bloodseeker_rupture': [\n        {\n            label: 'Enemy Distance Traveled',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'movement_damage_pct',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage') + v*a/100;\n            }\n        }\n    ],\n    'bristleback_viscous_nasal_goo': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'armor_per_stack',\n            label: 'Enemy Armor Reduction',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -v*a;\n            },\n            returnProperty: 'armorReduction'\n        },\n        {\n            attributeName: 'move_slow_per_stack',\n            label: '%SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -(abilityModel.getAbilityAttributeValue(ability.attributes, 'base_move_slow',0)+v*a);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'bristleback_quill_spray': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'quill_stack_damage',\n            label: 'DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var total = abilityModel.getAbilityAttributeValue(ability.attributes, 'quill_base_damage',ability.level())+v*a,\n                damage_cap = abilityModel.getAbilityAttributeValue(ability.attributes, 'max_damage',0);\n                if (total > damage_cap) {\n                    total = damage_cap;\n                }\n                return total;\n            }\n        }\n    ],\n    'bristleback_bristleback': [\n        {\n            label: 'Damage From',\n            controlType: 'radio',\n            controlValueType: 'string',\n            controlOptions: [\n                {text: 'Back', value: 'back'},\n                {text: 'Side', value: 'side'}\n            ]\n        },\n        {\n            attributeName: 'back_damage_reduction',\n            label: '%DAMAGE REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var ability = abilityModel.abilities().find(function(b) {\n                    return b.name == 'bristleback_bristleback';\n                });\n                if (v == 'back') {\n                    var total = abilityModel.getAbilityAttributeValue(ability.attributes, 'back_damage_reduction', ability.level());\n                }\n                else {\n                    var total = abilityModel.getAbilityAttributeValue(ability.attributes, 'side_damage_reduction', ability.level());\n                }\n                return -total;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'bristleback_warpath': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_stack',\n            label: 'BONUS DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v < 1) {\n                    return 0;\n                }\n                else {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'base_damage',ability.level())+(v-1)*a;\n                }\n            }\n        },\n        {\n            attributeName: 'move_speed_per_stack',\n            label: '%MOVEMENT:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v < 1) {\n                    return 0;\n                }\n                else {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'base_move_speed',ability.level())+(v-1)*a;\n                }\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'centaur_return': [\n        {\n            label: 'Strength',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'strength_pct',\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'return_damage',ability.level()) + v*a/100;\n            }\n        }\n    ],\n    'centaur_stampede': [\n        {\n            label: 'Strength',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'strength_damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'clinkz_death_pact': [\n        {\n            label: 'Consumed Unit HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_gain_pct',\n            label: 'BASE DAMAGE GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/100;\n            },\n            returnProperty: 'baseDamage'\n        },\n        {\n            attributeName: 'health_gain_pct',\n            label: 'HEALTH GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusHealth'\n        }\n    ],\n    'crystal_maiden_frostbite': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'dark_seer_ion_shell': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'dazzle_shadow_wave': [\n        {\n            label: 'Targets',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'dazzle_weave': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'armor_per_second',\n            label: 'ARMOR',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'armor'\n        },\n        {\n            attributeName: 'armor_per_second',\n            label: 'ARMOR REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -v*a;\n            },\n            returnProperty: 'armorReduction'\n        }\n    ],\n    'death_prophet_exorcism': [\n        {\n            label: 'Damage Dealt',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal_percent',\n            label: 'Total Armor',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/100;\n            }\n        }\n    ],\n    'disruptor_static_storm': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var damagevalue = 0.25 * (130 + 40 * ability.level()) * (1/20),\n                mult = (v*4)*((v*4)+1)/2;\n                return damagevalue * mult;\n            }\n        }\n    ],\n    'doom_bringer_scorched_earth': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'HP REGEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'healthregen'\n        }\n    ],\n    'doom_bringer_doom': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (parent.inventory.hasScepter()) {\n                    return v*abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_scepter',ability.level());\n                }\n                else {\n                    return v*a;\n                }\n            }\n        }\n    ],\n    'dragon_knight_elder_dragon_form': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_attack_range',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'attackrange'\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedFlat'\n        }\n    ],\n    'drow_ranger_trueshot': [\n        {\n            label: 'Drow\\'s Agility',\n            controlType: 'input',\n            display: 'buff'\n        },\n        {\n            attributeName: 'trueshot_ranged_damage',\n            label: 'DAMAGE BONUS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            display: 'buff',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusDamagePrecisionAura'\n        }\n    ],\n    'earth_spirit_rolling_boulder': [\n        {\n            label: 'Using Stone',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'move_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v) {\n                    return -a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'earthshaker_enchant_totem': [\n        {\n            label: 'Activated',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'totem_damage_percentage',\n            label: 'DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'baseDamageMultiplier'\n        }\n    ],\n    'earthshaker_echo_slam': [\n        {\n            label: 'Enemies in Range',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'echo_slam_echo_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'elder_titan_ancestral_spirit': [\n        {\n            label: 'HEROES PASSED THROUGH',\n            controlType: 'input'\n        },\n        {\n            label: 'CREEPS PASSED THROUGH',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_creeps',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[0]*abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_heroes',ability.level()) + v[1]*a;\n            },\n            returnProperty: 'bonusDamage'\n        },\n        {\n            attributeName: 'move_pct_creeps',\n            label: '%BONUS SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[0]*abilityModel.getAbilityAttributeValue(ability.attributes, 'move_pct_heroes',ability.level()) + v[1]*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'elder_titan_earth_splitter': [\n        {\n            label: 'Enemy Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/100;\n            }\n        },\n        {\n            attributeName: 'slow_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'enchantress_natures_attendants': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal',\n            label: 'HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'wisp_count',ability.level())*v*a;\n            }\n        }\n    ],\n    'enigma_malefice': [\n        {\n            label: 'Hits',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'stun_duration',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'enigma_midnight_pulse': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_percent',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[0]*v[1]*a/100;\n            }\n        }\n    ],\n    'enigma_black_hole': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'far_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'near_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'faceless_void_time_lock': [\n        {\n            attributeName: 'bonus_damage',\n            label: '%MOVESPEED AS DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'bashBonusDamage'\n        },\n        {\n            attributeName: 'duration',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            }\n        },\n        {\n            attributeName: 'chance_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'bash'\n        }\n    ],\n    'gyrocopter_rocket_barrage': [\n        {\n            label: 'Rockets',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'rockets_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            }\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n/*        'gyrocopter_homing_missile': [\n        {\n            label: 'Distance Traveled',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'gyrocopter_flak_cannon': [\n        {\n            label: 'Attacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],*/\n    'huskar_burning_spear': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_cost',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'huskar_berserkers_blood': [\n        {\n            label: '%HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hp_threshold_max',\n            label: 'Health at given %HP:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return parent.health()*v/100;\n            }\n        },\n        {\n            attributeName: 'hp_threshold_max',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            }\n        },\n        {\n            attributeName: 'maximum_resistance',\n            label: 'MAGIC RESISTANCE BONUS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var v = Math.min(v, 100);\n                v = Math.max(v, 10);\n                var hp_threshold_max = abilityModel.getAbilityAttributeValue(ability.attributes, 'hp_threshold_max',0);\n                var d = 100 - hp_threshold_max;\n                var c = (v - hp_threshold_max) / d;\n                c = 1 - c;\n                return c*a;\n            },\n            returnProperty: 'magicResist'\n        },\n        {\n            attributeName: 'maximum_attack_speed',\n            label: 'ATTACK SPEED BONUS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var v = Math.min(v, 100);\n                v = Math.max(v, 10);\n                var hp_threshold_max = abilityModel.getAbilityAttributeValue(ability.attributes, 'hp_threshold_max',0);\n                var d = 100 - hp_threshold_max;\n                var c = (v - hp_threshold_max) / d;\n                c = 1 - c;\n                return c*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'huskar_life_break': [\n        {\n            label: 'Enemy Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            label: 'Huskar Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_cost_percent',\n            label: 'DAMAGE TAKEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'movespeed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'invoker_quas': [\n        {\n            label: 'Instances',\n            controlType: 'input'\n        },\n        /*{\n            attributeName: 'bonus_strength',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'bonusStrength'\n        },*/\n        {\n            attributeName: 'health_regen_per_instance',\n            label: 'HP REGEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'healthregen'\n        }\n    ],\n    'invoker_wex': [\n        {\n            label: 'Instances',\n            controlType: 'input'\n        },\n        /*{\n            attributeName: 'bonus_agility',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'bonusAgility'\n        },*/\n        {\n            attributeName: 'move_speed_per_instance',\n            label: '%MOVE SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'attack_speed_per_instance',\n            label: '%ATTACK SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'invoker_exort': [\n        {\n            label: 'Instances',\n            controlType: 'input'\n        },\n        /*{\n            attributeName: 'bonus_intelligence',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'bonusInt'\n        },*/\n        {\n            attributeName: 'bonus_damage_per_instance',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'invoker_ghost_walk': [\n        {\n            label: 'Quas Level',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'enemy_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'enemy_slow',v);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            label: 'Wex Level',\n            controlType: 'input',\n            display: 'ability'\n        },\n        {\n            attributeName: 'self_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            display: 'ability',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'self_slow',v);\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'invoker_alacrity': [\n        {\n            label: 'Wex Level',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'bonus_attack_speed',v);\n            },\n            returnProperty: 'attackspeed'\n        },\n        {\n            label: 'Exort Level',\n            controlType: 'input',\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'bonus_damage',v);\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'invoker_ice_wall': [\n        {\n            label: 'Quas Level',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'slow',v);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            label: 'Exort Level',\n            controlType: 'input',\n            display: 'ability'\n        },\n        {\n            label: 'Duration',\n            controlType: 'input',\n            display: 'ability'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            display: 'ability',\n            controls: [1,2],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v[0] == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_per_second',v[0])*v[1];\n            }\n        }\n    ],\n    'jakiro_dual_breath': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*2 + \n                abilityModel.getAbilityAttributeValue(ability.attributes, 'burn_damage',ability.level())*v;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'slow_attack_speed_pct',\n            label: '%ATTACK SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'jakiro_liquid_fire': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_attack_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'jakiro_macropyre': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'juggernaut_blade_fury': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'juggernaut_healing_ward': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'healing_ward_heal_amount',\n            label: 'HEAL OVER TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[0]*v[1]*a/100;\n            }\n        }\n    ],\n    'juggernaut_omni_slash': [\n        {\n            label: 'Jumps',\n            controlType: 'input'\n        },\n        {\n            label: 'MIN DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'omni_slash_damage',1)*v;\n            }\n        },\n        {\n            label: 'MAX DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'omni_slash_damage',2)*v;\n            }\n        }\n    ],\n    'keeper_of_the_light_illuminate': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'keeper_of_the_light_mana_leak': [\n        {\n            label: 'Distance Moved',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_leak_pct',\n            label: 'MANA LEAKED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[0]/100*v[1]*a/100;\n            }\n        }\n    ],\n    'legion_commander_duel': [\n        {\n            label: 'Duel Wins',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'reward_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'leshrac_pulse_nova': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_cost_per_second',\n            label: 'MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'lich_chain_frost': [\n        {\n            label: 'Bounce Hits',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'slow_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'life_stealer_feast': [\n        {\n            label: 'Enemy Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hp_leech_percent',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'life_stealer_open_wounds': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal_percent',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'lifesteal'\n        },\n        {\n            attributeName: 'slow_steps',\n            label: '%SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'slow_steps',v+1);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'lina_fiery_soul': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'fiery_soul_move_speed_bonus',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'fiery_soul_attack_speed_bonus',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'lion_mana_drain': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_per_second',\n            label: 'MANA DRAINED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'luna_moon_glaive': [\n        {\n            label: 'Damage',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_reduction_percent',\n            label: 'BOUNCE DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var result = [];\n                for (var i = 1; i < 6; i++) {\n                    result.push((v*Math.pow(a/100,i)).toFixed(2))\n                }\n                return result.join('<br>');\n            }\n        }\n    ],\n    'luna_eclipse': [\n        {\n            label: 'Beam Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'beams',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var lucentBeamAbility = abilityModel.abilities().find(function(b) {\n                    return b.name == 'luna_lucent_beam';\n                });\n                if (lucentBeamAbility.level() == 0) return 0;\n                var damage = abilityModel.getAbilityPropertyValue(lucentBeamAbility, 'damage');\n                return v*damage;\n            }\n        }\n    ],\n    'lycan_howl': [\n        {\n            label: 'Is Night',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'hero_bonus_damage',\n            label: '%CHANCE TO MISS:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v) {\n                    return a*2;\n                }\n                else {\n                    return a;\n                }\n            },\n            returnProperty: 'bonusDamage'\n        },\n        {\n            attributeName: 'hero_bonus_hp',\n            label: '%CHANCE TO MISS:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v) {\n                    return a*2;\n                }\n                else {\n                    return a;\n                }\n            },\n            returnProperty: 'bonusHealth'\n        }\n    ],\n    'medusa_mystic_snake': [\n        {\n            label: 'Jump Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Damage Per Jump:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            display: 'none',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var snake_jumps = abilityModel.getAbilityAttributeValue(ability.attributes, 'snake_jumps',ability.level());\n                var snake_scale = abilityModel.getAbilityAttributeValue(ability.attributes, 'snake_scale',0);\n                var damage = [];\n                for (var i = 0; i < snake_jumps; i++) {\n                    damage.push(a + a * i * snake_scale/100);\n                }\n                return damage;\n            }\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Damage Per Jump:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[1].join(' / ');\n            }\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[1].slice(0, v[0]).reduce(function (memo, o) { return memo + o }, 0);\n            }\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Max Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[1].reduce(function (memo, o) { return memo + o }, 0);\n            }\n        }\n    ],\n    'medusa_mana_shield': [\n        {\n            label: 'Damage',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_mana',\n            label: 'MANA USED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return (v/a).toFixed(2);\n            }\n        },\n        {\n            attributeName: 'absorption_tooltip',\n            label: '%DAMAGE REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -a;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'meepo_poof': [\n        {\n            label: 'Meepo Count',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'meepo_geostrike': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            attributeName: 'slow',\n            label: '%SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'slow',ability.level())*v;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'mirana_arrow': [\n        {\n            label: 'Arrow Travel Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'arrow_max_stun',\n            label: 'STUN DURATION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var arrow_min_stun = abilityModel.getAbilityAttributeValue(ability.attributes, 'arrow_min_stun',0);\n                var arrow_max_stunrange = abilityModel.getAbilityAttributeValue(ability.attributes, 'arrow_max_stunrange',0);\n                var scale = Math.min(v, arrow_max_stunrange) / arrow_max_stunrange;\n                return Math.max(arrow_min_stun, Math.floor(a * scale / 0.1) * 0.1);\n            }\n        },\n        {\n            attributeName: 'arrow_bonus_damage',\n            label: 'TOTAL DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var ability = ability;\n                var damage = ko.utils.unwrapObservable(ability.damage)[ability.level()-1];\n                var arrow_max_stunrange = abilityModel.getAbilityAttributeValue(ability.attributes, 'arrow_max_stunrange',0);\n                var scale = Math.min(v, arrow_max_stunrange) / arrow_max_stunrange;\n                var bonus_damage = Math.floor(a * scale / 2.8) * 2.8;\n                return damage + ' + ' + bonus_damage + ' = ' + (damage + bonus_damage);\n            }\n        }\n    ],\n    'morphling_morph_agi': [\n        {\n            label: 'Shifts',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'AGI SHIFT GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'STR SHIFT LOSS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -v*a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'bonus_attributes',\n            label: 'SHIFT TIME:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'bonusAgility2'\n        },\n        {\n            attributeName: 'morph_cooldown',\n            label: 'SHIFT TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_cost',\n            label: 'SHIFT MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a*abilityModel.getAbilityAttributeValue(ability.attributes, 'morph_cooldown',ability.level());\n            }\n        }\n    ],\n    'morphling_morph_str': [\n        {\n            label: 'Shifts',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'STR SHIFT GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'AGI SHIFT LOSS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -v*a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'bonus_attributes',\n            label: 'SHIFT TIME:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'bonusStrength2'\n        },\n        {\n            attributeName: 'morph_cooldown',\n            label: 'SHIFT TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_cost',\n            label: 'SHIFT MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a*abilityModel.getAbilityAttributeValue(ability.attributes, 'morph_cooldown',ability.level());\n            }\n        }\n    ],\n    'furion_wrath_of_nature': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'necrolyte_heartstopper_aura': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'aura_damage',\n            label: 'HEALTH LOST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[0]*v[1]*a/100;\n            }\n        }\n    ],\n    'necrolyte_sadist': [\n        {\n            label: 'Unit Kills',\n            controlType: 'input'\n        },\n        {\n            label: 'Hero Kills',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_regen',\n            label: 'Total Damage',\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var hero_multiplier = abilityModel.getAbilityAttributeValue(ability.attributes, 'hero_multiplier',0)\n                return (v[0]+v[1]*hero_multiplier)*a;\n            },\n            returnProperty: 'healthregen'\n        },\n        {\n            attributeName: 'mana_regen',\n            label: 'Total Damage',\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var hero_multiplier = abilityModel.getAbilityAttributeValue(ability.attributes, 'hero_multiplier',0)\n                return (v[0]+v[1]*hero_multiplier)*a;\n            },\n            returnProperty: 'manaregen'\n        }\n    ],\n    'night_stalker_crippling_fear': [\n        {\n            label: 'Is Night',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'miss_rate_night',\n            label: '%CHANCE TO MISS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v) {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'miss_rate_night',ability.level());\n                }\n                else {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'miss_rate_day',ability.level());\n                }\n            },\n            returnProperty: 'missChance'\n        }\n    ],    \n    'night_stalker_hunter_in_the_night': [\n        {\n            label: 'Is Night',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'bonus_attack_speed_night',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'attackspeed'\n        },\n        {\n            attributeName: 'bonus_movement_speed_pct_night',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],    \n    'obsidian_destroyer_arcane_orb': [\n        {\n            label: 'Current Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_pool_damage_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusDamageOrb'\n        }\n    ],\n    'ogre_magi_ignite': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'burn_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'pudge_rot': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            attributeName: 'rot_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'pudge_flesh_heap': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'flesh_heap_strength_buff_amount',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'flesh_heap_magic_resist',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'magicResist'\n        }\n    ],\n    'pudge_dismember': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'dismember_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'pugna_nether_ward': [\n        {\n            label: 'Enemy Mana Spent',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_multiplier',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_regen',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'manaregenreduction'\n        }\n    ],\n    'pugna_life_drain': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_drain',\n            label: 'HEALTH DRAINED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'queenofpain_shadow_strike': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'movement_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'strike_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var duration_damage = abilityModel.getAbilityAttributeValue(ability.attributes, 'duration_damage',ability.level());\n                var ticks = Math.floor(v/3);\n                return a + duration_damage * ticks;\n            }\n        }\n    ],\n    'razor_plasma_field': [\n        {\n            label: 'Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'radius',\n            label: 'MIN DISTANCE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return 200;\n            }\n        },\n        {\n            attributeName: 'radius',\n            label: 'MAX DISTANCE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return 200 + a;\n            }\n        },\n        {\n            attributeName: 'radius',\n            label: 'Instance Damage',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var max_radius = a + 200;\n                var scale = (Math.min(Math.max(v, 200), max_radius) - 200) / (max_radius - 200);\n                var damage_min = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_min',ability.level());\n                var damage_max = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_max',ability.level());\n                return damage_min + (damage_max - damage_min) * scale;\n            }\n        }\n    ],\n    'razor_static_link': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'drain_length',\n            label: 'Damage Drained:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var tick_duration = Math.floor(v * 4) + 1;\n                var ticks = Math.min(a * 4 + 1, tick_duration);\n                var drain_rate = abilityModel.getAbilityAttributeValue(ability.attributes, 'drain_rate',ability.level());\n                return ticks * drain_rate/4;\n            },\n            returnProperty: 'bonusDamage'\n        },\n        {\n            attributeName: 'drain_length',\n            label: 'Enemy Damage Lost:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            display: 'hidden',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var tick_duration = Math.floor(v * 4) + 1;\n                var ticks = Math.min(a * 4 + 1, tick_duration);\n                var drain_rate = abilityModel.getAbilityAttributeValue(ability.attributes, 'drain_rate',ability.level());\n                return ticks * drain_rate/4;\n            },\n            returnProperty: 'bonusDamageReduction'\n        }\n    ],\n    'razor_eye_of_the_storm': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'rubick_fade_bolt': [\n        {\n            label: 'Jumps',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a * (1 - v*abilityModel.getAbilityAttributeValue(ability.attributes, 'jump_damage_reduction_pct',ability.level())/100);\n            }\n        },\n        {\n            attributeName: 'hero_attack_damage_reduction',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'bonusDamageReduction'\n        }\n    ],\n    'sandking_sand_storm': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'sandking_epicenter': [\n        {\n            label: 'Pulses',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'epicenter_damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'epicenter_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'epicenter_slow_as',\n            label: '%ATTACK SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'shadow_demon_shadow_poison': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'stack_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var stackmult = [1,2,4,8];\n                if (v > 4) {\n                    return a * stackmult[3] + 50 * (v - 4);\n                }\n                else if (v <= 0) {\n                    return 0\n                }\n                else {\n                    return a * stackmult[v-1]\n                }\n            }\n        }\n    ],\n    'nevermore_necromastery': [\n        {\n            label: 'Souls',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'necromastery_damage_per_soul',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var talent = TalentController.getTalentById(parent.selectedTalents(), 'special_bonus_unique_nevermore_1');\n                if (talent) {\n                    return v * (a + talent.attributes[0].value[0]);\n                }\n                else {\n                    return v * a;\n                }\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'nevermore_requiem': [\n        {\n            label: 'Line Hit Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'requiem_reduction_damage',\n            label: 'Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            label: 'Return Line Hit Count (Scepter)',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'requiem_damage_pct_scepter',\n            label: 'Damage/Heal:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v*a/100;\n            }\n        },\n        {\n            attributeName: 'requiem_damage_pct_scepter',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return damage*v[0] + damage*v[1]*a/100;\n            }\n        },\n        {\n            attributeName: 'requiem_reduction_damage',\n            label: '%DAMAGE REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'baseDamageReductionPct'\n        },\n        {\n            attributeName: 'requiem_reduction_ms',\n            label: '%DAMAGE REDUCTION:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'shadow_shaman_shackles': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'silencer_curse_of_the_silent': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return Math.floor(v)*a;\n            }\n        },\n        {\n            attributeName: 'movespeed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n/*        'silencer_glaives_of_wisdom': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],*/\n    'skywrath_mage_mystic_flare': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'slark_essence_shift': [\n        {\n            label: 'Attacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'agi_gain',\n            label: 'Total Damage',\n            controlType: 'text',\n            display: 'ability',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'stat_loss',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -v*a;\n            },\n            returnProperty: 'bonusAllStatsReduction'\n        }\n    ],\n    'slark_shadow_dance': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_regen_pct',\n            label: 'TOTAL HEALTH REGENERATED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*parent.health()*a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_regen_pct',\n            label: 'HEALTH GAINED PER SECOND:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return parent.health()*a/100;\n            },\n            returnProperty: 'healthregen'\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: '%MOVE SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'sniper_shrapnel': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'shrapnel_damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'spectre_desolate': [\n        {\n            label: 'Enemy Alone',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'spectre_dispersion': [\n        {\n            label: 'Damage Taken',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_reflection_pct',\n            label: 'DAMAGE REFLECTED:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -a;\n            },\n            returnProperty: 'damageReduction'\n        },\n        {\n            attributeName: 'damage_reflection_pct',\n            label: 'DAMAGE REFLECTED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/100;\n            }\n        }\n    ],\n    'storm_spirit_ball_lightning': [\n        {\n            label: 'MAX MANA',\n            controlType: 'input'\n        },\n        {\n            label: 'Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_base',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0, 1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')/100*v[1];\n            }\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_base',\n            label: 'FLAT MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var distance_intervals = Math.floor(v[1]/100);\n                var travel_cost_base = abilityModel.getAbilityAttributeValue(ability.attributes, 'ball_lightning_travel_cost_base',0);\n                return a + distance_intervals * travel_cost_base;\n            }\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_percentage',\n            label: '%MAX MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var distance_intervals = Math.floor(v[1]/100);\n                var travel_cost_percent = abilityModel.getAbilityAttributeValue(ability.attributes, 'ball_lightning_travel_cost_percent',0);\n                return a + distance_intervals * travel_cost_percent;\n            }\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_base',\n            label: 'TOTAL MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0, 1, 2, 3],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[2] + ' + ' + (v[3]/100 * v[0]) + ' (' + v[3] + '% of max) = ' + (v[2] + v[3]/100 * v[0]);\n            }\n        }\n    ],\n    'templar_assassin_psionic_trap': [\n        {\n            label: 'Charge Time',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'movement_speed_min_tooltip',\n            label: '%MOVE SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var max_slow = abilityModel.getAbilityAttributeValue(ability.attributes, 'movement_speed_max_tooltip',0);\n                var slow_per_tick = (max_slow - a)/40;\n                return -(a + slow_per_tick * Math.min(Math.max(0, v), 4) * 10);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'shredder_reactive_armor': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_armor',\n            label: 'Total Armor Bonus',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'armor'\n        },\n        {\n            attributeName: 'bonus_hp_regen',\n            label: 'Total HP Regen Bonus',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'healthregen'\n        }\n    ],\n    'shredder_chakram': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_interval',0);\n                var ticks = Math.floor(v / interval);\n                return a*interval*ticks;\n            }\n        },\n        {\n            attributeName: 'mana_per_second',\n            label: 'MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_interval',0);\n                var ticks = Math.floor(v / interval);\n                return a*interval*ticks;\n            }\n        },\n        {\n            label: 'ENEMY %HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'slow',\n            label: 'MANA COST:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var ticks = 20 - Math.floor(Math.min(Math.max(v-1, 0), 99) / 5);\n                return -a*ticks;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'spirit_breaker_greater_bash': [\n        {\n            label: 'Bash Proc',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'damage',\n            label: '%MOVESPEED AS DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'bashBonusDamage'\n        },\n        {\n            attributeName: 'bonus_movespeed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'chance_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a\n            },\n            returnProperty: 'bash'\n        }\n    ],\n    'techies_land_mines': [\n        {\n            label: 'Number of Mines',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'damage',\n            label: 'AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var phys_reduction = parent.enemy().totalArmorPhysicalReduction(),\n                    magic_reduction = parent.enemy().totalMagicResistance();\n                return (v * a * (1 - phys_reduction / 100) * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        }\n    ],\n    'techies_suicide': [\n        {\n            attributeName: 'damage',\n            label: 'FULL DAMAGE AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var phys_reduction = parent.enemy().totalArmorPhysicalReduction(),\n                    magic_reduction = parent.enemy().totalMagicResistance();\n                return (a * (1 - phys_reduction / 100) * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        },\n        {\n            attributeName: 'partial_damage',\n            label: 'PARTIAL DAMAGE AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var phys_reduction = parent.enemy().totalArmorPhysicalReduction(),\n                    magic_reduction = parent.enemy().totalMagicResistance();\n                return (a * (1 - phys_reduction / 100) * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        },\n        {\n            attributeName: 'damage',\n            label: 'RESPAWN TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return (parent.respawnTime() / 2).toFixed(0) + ' seconds';\n            }\n        }\n    ],\n    'techies_remote_mines': [\n        {\n            label: 'Number of Mines',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'damage',\n            label: 'AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var magic_reduction = parent.enemy().totalMagicResistance();\n                return (v * a * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        }\n    ],\n    'tinker_march_of_the_machines': [\n        {\n            label: 'Robot Explosions',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'machines_per_sec',\n            label: 'TOTAL DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'treant_leech_seed': [\n        {\n            label: 'Pulses',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'leech_damage',\n            label: 'DAMAGE/HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'movement_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'troll_warlord_fervor': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'attack_speed',\n            label: 'ATTACK SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'undying_decay': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'str_steal',\n            label: 'STRENGTH STOLEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                if (parent.inventory.hasScepter()) {\n                    var str_steal_scepter = abilityModel.getAbilityAttributeValue(ability.attributes, 'str_steal_scepter',0);\n                    return v*str_steal_scepter;\n                }\n                else {\n                    return v*a;\n                }\n            },\n            returnProperty: 'bonusStrength'\n        },\n    ],\n    'undying_soul_rip': [\n        {\n            label: 'Units',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_unit',\n            label: 'DAMAGE/HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'undying_flesh_golem': [\n        {\n            label: 'Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'max_speed_slow',\n            label: '%MOVE SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var min_speed_slow = abilityModel.getAbilityAttributeValue(ability.attributes, 'min_speed_slow', 0);\n                var radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'radius', 0);\n                var full_power_radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'full_power_radius', 0);\n                var distance = Math.min(Math.max(v, full_power_radius), radius);\n                var scale = 1 - (distance - full_power_radius) / (radius - full_power_radius);\n                return -Math.max(scale * a, min_speed_slow);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'max_damage_amp',\n            label: '%DAMAGE AMP:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var min_damage_amp = abilityModel.getAbilityAttributeValue(ability.attributes, 'min_damage_amp', 0);\n                var radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'radius', 0);\n                var full_power_radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'full_power_radius', 0);\n                var distance = Math.min(Math.max(v, full_power_radius), radius);\n                var scale = 1 - (distance - full_power_radius) / (radius - full_power_radius);\n                return Math.max(scale * a, min_damage_amp);\n            },\n            returnProperty: 'damageAmplification'\n        },\n        {\n            label: 'MAX HP',\n            controlType: 'input'\n        },\n        {\n            label: 'Hero Death Count',\n            controlType: 'input'\n        },\n        {\n            label: 'Creep Death Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'death_heal',\n            label: 'DEATH HEAL (HEROES):',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [1, 2],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[0]*v[1]*a/100;\n            }\n        },\n        {\n            attributeName: 'death_heal_creep',\n            label: 'DEATH HEAL (CREEPS):',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [1, 3],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[0]*v[1]*a/100;\n            }\n        },\n        {\n            attributeName: 'death_heal_creep',\n            label: 'TOTAL DEATH HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [4, 5],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v[0]+v[1];\n            }\n        }\n    ],\n    'ursa_fury_swipes': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_stack',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var enrageAbility = abilityModel.abilities().find(function(b) {\n                    return b.name == 'ursa_enrage';\n                });\n                if (enrageAbility.isActive() && enrageAbility.level() > 0) {\n                    var enrage_multiplier = abilityModel.getAbilityAttributeValue(enrageAbility.attributes, 'enrage_multiplier', enrageAbility.level());\n                    return v*a*enrage_multiplier;\n                }\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'ursa_enrage': [\n        {\n            attributeName: 'damage_reduction',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -a;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'venomancer_venomous_gale': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'tick_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'strike_damage',ability.level()) + Math.floor(v/3)*a;\n            }\n        },\n        {\n            attributeName: 'movement_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'venomancer_poison_sting': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'venomancer_poison_nova': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'viper_poison_attack': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'viper_corrosive_skin': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        },\n        {\n            attributeName: 'bonus_magic_resistance',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'magicResist'\n        }\n    ],\n    'viper_viper_strike': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'visage_soul_assumption': [\n        {\n            label: 'Charges',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'soul_charge_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var soul_base_damage = abilityModel.getAbilityAttributeValue(ability.attributes, 'soul_base_damage',0);\n                var stack_limit = abilityModel.getAbilityAttributeValue(ability.attributes, 'stack_limit', ability.level());\n                stack_limit = Math.max(Math.min(v, stack_limit), 0);\n                return soul_base_damage + stack_limit*a;\n            }\n        }\n    ],\n    'visage_gravekeepers_cloak': [\n        {\n            label: 'Layers',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_reduction',\n            label: 'DAMAGE REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -v*a;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'warlock_shadow_word': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'warlock_upheaval': [\n        {\n            label: 'Channel Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'slow_rate_duration',\n            label: '%MOVE SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var max_slow = abilityModel.getAbilityAttributeValue(ability.attributes, 'max_slow',0);\n                var slow_per_tick = max_slow / (a - 0.5) / 2;\n                var ticks = Math.max(Math.floor(v * 2) - 1, 0);\n                return -Math.min(ticks * slow_per_tick, max_slow);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'weaver_the_swarm': [\n        {\n            label: 'Attacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'armor_reduction',\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return -v*a;\n            },\n            returnProperty: 'armorReduction'\n        }\n    ],\n    'windrunner_powershot': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'winter_wyvern_cold_embrace': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Ally Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal_percentage',\n            label: 'TOTAL HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var base_heal = abilityModel.getAbilityAttributeValue(ability.attributes, 'heal_additive',ability.level());\n                return (base_heal + v[1] * a/100) * v[0];\n            }\n        }\n    ],\n    'wisp_spirits': [\n        {\n            label: 'Collision Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hero_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'creep_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'wisp_overcharge': [\n        {\n            label: 'Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'drain_pct',\n            label: 'HP DRAINED:',\n            ignoreTooltip: true, \n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            label: 'Current MP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'drain_pct',\n            label: 'MP DRAINED:',\n            ignoreTooltip: true, \n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'attackspeed'\n        },\n        {\n            attributeName: 'bonus_damage_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return a;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'witch_doctor_paralyzing_cask': [\n        {\n            label: 'Hero Bounce Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hero_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var bounces = abilityModel.getAbilityAttributeValue(ability.attributes, 'bounces',ability.level());\n                return Math.min(Math.max(v, 0), bounces)*a;\n            }\n        },\n        {\n            label: 'Creep Bounce Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hero_damage',\n            label: 'CREEP DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var bounces = abilityModel.getAbilityAttributeValue(ability.attributes, 'bounces',ability.level());\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return Math.min(Math.max(v, 0), bounces)*damage;\n            }\n        }\n    ],\n    'witch_doctor_voodoo_restoration': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'heal_interval',ability.level());\n                var heal_per_tick = a * interval;\n                var ticks = Math.max(Math.floor(v / interval) - 1, 0);\n                return heal_per_tick * ticks;\n            }\n        },\n        {\n            attributeName: 'mana_per_second',\n            label: 'MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'heal_interval',ability.level());\n                var mana_per_tick = a * interval;\n                var ticks = Math.max(Math.floor(v / interval) - 1, 0);\n                return mana_per_tick * ticks;\n            }\n        }\n    ],\n    'witch_doctor_maledict': [\n        {\n            label: 'damage 0-4s',\n            controlType: 'input'\n        },\n        {\n            label: 'damage 4-8s',\n            controlType: 'input'\n        },\n        {\n            label: 'damage 8-12s',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Dot Damage after 3s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return 3*damage;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Burst Damage at 4s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 3],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                var d = v.reduce(function (memo, o) { return memo + o }, 0);\n                return Math.max(d, 0) * a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Dot Damage after 7s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return 7*damage;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Burst Damage at 8s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1, 4, 5],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                var d = v.reduce(function (memo, o) { return memo + o }, 0);\n                return Math.max(d, 0) * a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Dot Damage after 11s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return 11*damage;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Burst Damage at 12s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1, 2, 4, 6, 7],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                var d = v.reduce(function (memo, o) { return memo + o }, 0);\n                return Math.max(d, 0) * a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Burst Damage:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [4, 6, 8],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v.reduce(function (memo, o) { return memo + o }, 0);\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Maledict Damage:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [9],\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var duration = abilityModel.getAbilityAttributeValue(ability.attributes, 'duration_tooltip',0);\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return damage * duration + v[0];\n            }\n        },\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'DOT Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                var duration = abilityModel.getAbilityAttributeValue(ability.attributes, 'duration_tooltip',0);\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*Math.min(Math.max(v, 0), duration);\n            }\n        }\n    ],\n    'witch_doctor_death_ward': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a;\n            }\n        }\n    ],\n    'zuus_static_field': [\n        {\n            label: 'Enemy HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_health_pct',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability, TalentController) {\n                return v*a/100;\n            }\n        }\n    ]\n}\n\nmodule.exports = abilityData;",
    "'use strict';\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\n\nko.mapping = require('./lib/knockout.mapping');\nko.wrap = require('./lib/knockout.wrap');\n\nko.extenders.numeric = function(target, opts) {\n    //create a writable computed observable to intercept writes to our observable\n    var result = ko.pureComputed({\n        read: target,  //always return the original observables value\n        write: function(newValue) {\n            var current = target(),\n                roundingMultiplier = Math.pow(10, (opts === Object(opts) ? opts.precision : opts) || 0),\n                newValueAsNum = isNaN(newValue) ? (opts.defaultValue || 0) : +newValue,\n                valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\n \n            //only write if it changed\n            if (valueToWrite !== current) {\n                target(valueToWrite);\n            } else {\n                //if the rounded value is the same, but a different value was written, force a notification for the current field\n                if (newValue !== current) {\n                    target.notifySubscribers(valueToWrite);\n                }\n            }\n        }\n    }).extend({ notify: 'always' });\n \n    //initialize with current value to make sure it is rounded appropriately\n    result(target());\n \n    //return the new computed observable\n    return result;\n};\n\nmodule.exports = ko;",
    "var IllusionOption = function (name, displayname, baseHero) {\n    this.illusionName = name;\n    this.illusionDisplayName = displayname;\n    this.baseHero = baseHero;\n};\n\nmodule.exports = IllusionOption;",
    "var illusionData = {\n    chaos_knight_phantasm: {\n        hero: 'chaos_knight',\n        displayName: 'Chaos Knight Phantasm',\n        use_selected_hero: false,\n        max_level: 3,\n        outgoing_damage: 'outgoing_damage',\n        incoming_damage: 'incoming_damage'\n    },\n    naga_siren_mirror_image: {\n        hero: 'naga_siren',\n        displayName: 'Naga Siren Mirror Image',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'outgoing_damage',\n        incoming_damage: 'incoming_damage'\n    },\n    dark_seer_wall_of_replica: {\n        hero: 'dark_seer',\n        displayName: 'Dark Seer Wall of Replica',\n        use_selected_hero: true,\n        max_level: 3,\n        outgoing_damage: 'replica_damage_outgoing',\n        incoming_damage: 'replica_damage_incoming',\n        outgoing_damage_scepter: 'replica_damage_outgoing_scepter'\n    },\n    morphling_replicate: {\n        hero: 'morphling',\n        displayName: 'Morphling Replicate',\n        use_selected_hero: true,\n        max_level: 3,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'\n    },\n    phantom_lancer_doppelwalk: {\n        hero: 'phantom_lancer',\n        displayName: 'Phantom Lancer Doppelwalk',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'        \n    },\n    phantom_lancer_juxtapose: {\n        hero: 'phantom_lancer',\n        displayName: 'Phantom Lancer Juxtapose',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'        \n    },\n    phantom_lancer_spirit_lance: {\n        hero: 'phantom_lancer',\n        displayName: 'Phantom Lancer Spirit Lance',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'        \n    },\n    shadow_demon_disruption: {\n        hero: 'shadow_demon',\n        displayName: 'Shadow Demon Disruption',\n        use_selected_hero: true,\n        max_level: 4,\n        outgoing_damage: 'illusion_outgoing_damage',\n        incoming_damage: 'illusion_incoming_damage'        \n    },\n    spectre_haunt: {\n        hero: 'spectre',\n        displayName: 'Spectre Haunt',\n        use_selected_hero: false,\n        max_level: 3,\n        outgoing_damage: 'illusion_damage_outgoing',\n        incoming_damage: 'illusion_damage_incoming'        \n    },\n    terrorblade_conjure_image: {\n        hero: 'terrorblade',\n        displayName: 'Terrorblade Conjure Image',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_outgoing_damage',\n        incoming_damage: 'illusion_incoming_damage'        \n    },\n    terrorblade_reflection: {\n        hero: 'terrorblade',\n        displayName: 'Terrorblade Reflection',\n        use_selected_hero: true,\n        max_level: 4,\n        outgoing_damage: 'illusion_outgoing_damage'     \n    },\n    item_manta: {\n        hero: '',\n        is_item: true,\n        displayName: 'Manta Style Illusion',\n        use_selected_hero: true,\n        max_level: 1,\n        outgoing_damage_melee: 'images_do_damage_percent_melee',\n        incoming_damage_melee: 'images_take_damage_percent_melee',\n        outgoing_damage_ranged: 'images_do_damage_percent_ranged',\n        incoming_damage_ranged: 'images_take_damage_percent_ranged'\n    }\n}\n\nmodule.exports = illusionData;",
    "var IllusionOption = require(\"./IllusionOption\");\nvar illusionData = require(\"./illusionData\");\n\nvar illusionOptionsArray = [];\nfor (var h in illusionData) {\n    illusionOptionsArray.push(new IllusionOption(h, illusionData[h].displayName, illusionData[h].hero));\n}\n\nmodule.exports = illusionOptionsArray;",
    "var ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\nvar stackableItems = require(\"./stackableItems\");\nvar levelItems = require(\"./levelItems\");\nvar itemsWithActive = require(\"./itemsWithActive\");\n\nvar BasicInventoryViewModel = function (h) {\n    var self = this;\n    self.items = ko.observableArray([]);\n    self.activeItems = ko.observableArray([]);\n    self.addItem = function (data, event) {\n        if (data.selectedItem() != undefined) {\n            var new_item = {\n                item: data.selectedItem().split('|')[0],\n                state: ko.observable(0),\n                size: data.itemInputValue(),\n                enabled: ko.observable(true)\n            }\n            switch (new_item.item) {\n                case 'dagon':\n                    new_item.size = Math.min(new_item.size, 5);\n                break;\n                break;\n                case 'travel_boots':\n                case 'diffusal_blade':\n                    new_item.size = Math.min(new_item.size, 2);\n                break;\n                case 'necronomicon':\n                    new_item.size = Math.min(new_item.size, 3);\n                break;\n            }\n            this.items.push(new_item);\n            if (data.selectedItem() === 'ring_of_aquila' || data.selectedItem() === 'ring_of_basilius' || data.selectedItem() === 'heart') {\n                this.toggleItem(undefined, new_item, undefined);\n            }\n        }\n    }.bind(this);\n    self.toggleItem = function (index, data, event) {\n        if (itemsWithActive.indexOf(data.item) >= 0) {\n            if (this.activeItems.indexOf(data) < 0) {\n                this.activeItems.push(data);\n            }\n            else {\n                this.activeItems.remove(data);\n            }\n            switch (data.item) {\n                case 'power_treads':\n                    if (data.state() < 2) {\n                        data.state(data.state() + 1);\n                    }\n                    else {\n                        data.state(0);\n                    }                \n                break;\n                default:\n                    if (data.state() == 0) {\n                        data.state(1);\n                    }\n                    else {\n                        data.state(0);\n                    }                \n                break;\n            }\n        }\n    }.bind(this);\n    self.removeItem = function (item) {\n        this.activeItems.remove(item);\n        this.items.remove(item);\n    }.bind(this);\n    self.toggleMuteItem = function (item) {\n        item.enabled(!item.enabled());\n    }.bind(this);\n    self.removeAll = function () {\n        this.activeItems.removeAll();\n        this.items.removeAll();\n    }.bind(this);\n}\nBasicInventoryViewModel.prototype.getItemImage = function (data) {\n    var state = ko.utils.unwrapObservable(data.state);\n    switch (data.item) {\n        case 'power_treads':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '_str.png';\n            }\n            else if (state == 1) {\n                return '/media/images/items/' + data.item + '_int.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '_agi.png';\n            }\n        break;\n        case 'tranquil_boots':\n        case 'ring_of_basilius':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '_active.png';\n            }\n        break;\n        case 'armlet':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '_active.png';\n            }\n        break;\n        case 'ring_of_aquila':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '_active.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '.png';\n            }\n        break;\n        case 'dagon':\n        case 'diffusal_blade':\n        case 'travel_boots':\n        case 'necronomicon':\n            if (data.size > 1) {\n                return '/media/images/items/' + data.item + '_' + data.size + '.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '.png';\n            }\n        break;\n        default:\n            return '/media/images/items/' + data.item + '.png';            \n        break;\n    }\n};\nBasicInventoryViewModel.prototype.getItemSizeLabel = function (data) {\n    if (stackableItems.indexOf(data.item) != -1) {\n        return '<span style=\"font-size:10px\">Qty: </span>' + data.size;\n    }\n    else if (levelItems.indexOf(data.item) != -1) {\n        return '<span style=\"font-size:10px\">Lvl: </span>' + data.size;\n    }\n    else if (data.item == 'bloodstone') {\n        return '<span style=\"font-size:10px\">Charges: </span>' + data.size;\n    }\n    else {\n        return '';\n    }\n};\nBasicInventoryViewModel.prototype.getActiveBorder = function (data) {\n    switch (data.item) {\n        case 'power_treads':\n        case 'tranquil_boots':\n        case 'ring_of_basilius':\n        case 'ring_of_aquila':\n        case 'armlet':\n            return 0;\n        break;\n        default:\n            return ko.utils.unwrapObservable(data.state);    \n        break;\n    }\n}\nBasicInventoryViewModel.prototype.getItemAttributeValue = function (attributes, attributeName, level) {\n    for (var i = 0; i < attributes.length; i++) {\n        if (attributes[i].name == attributeName) {\n            if (level == 0) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else if (level > attributes[i].value.length) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else {\n                return parseFloat(attributes[i].value[level - 1]);\n            }\n        }\n    }\n}\n\nmodule.exports = BasicInventoryViewModel;",
    "'use strict';\nvar ko = require('../herocalc_knockout');\n\nvar stackableItems = require(\"./stackableItems\");\nvar levelItems = require(\"./levelItems\");\nvar BasicInventoryViewModel = require(\"./BasicInventoryViewModel\");\nvar itemOptionsArray = require(\"./itemOptionsArray\");\nvar itemBuffOptions = require(\"./itemBuffOptions\");\nvar itemDebuffOptions = require(\"./itemDebuffOptions\");\n\nvar InventoryViewModel = function (itemData, h) {\n    var self = this;\n    BasicInventoryViewModel.call(this, h);\n    self.hero = h;\n    self.hasInventory = ko.observable(true);\n    self.items = ko.observableArray([]);\n    self.activeItems = ko.observableArray([]);\n    self.hasScepter = ko.computed(function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (item === 'ultimate_scepter' && self.items()[i].enabled()) {\n                return true;\n            }\n            \n        }\n        return false;\n    }, this);\n    self.isEthereal = ko.computed(function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if ((item === 'ghost' || item === 'ethereal_blade') && self.items()[i].enabled() && isActive) {\n                return true;\n            }\n        }\n        return false;\n    }, this);\n    self.isSheeped = ko.computed(function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (item === 'sheepstick' && self.items()[i].enabled() && isActive) {\n                return true;\n            }\n        }\n        return false;\n    }, this);\n    self.totalCost = ko.computed(function () {\n        var c = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            if (stackableItems.indexOf(item) != -1) {\n                c += itemData['item_' + item].itemcost * self.items()[i].size;\n            }\n            else if (levelItems.indexOf(item) != -1) {\n                switch(item) {\n                    case 'travel_boots':\n                    case 'diffusal_blade':\n                    case 'necronomicon':\n                    case 'dagon':\n                        c += itemData['item_' + item].itemcost + (self.items()[i].size - 1) * itemData['item_recipe_' + item].itemcost;\n                    break;\n                    default:\n                        c += itemData['item_' + item].itemcost;\n                    break;\n                }\n            }\n            else {\n                c += itemData['item_' + item].itemcost;\n            }\n            \n        }\n        return c;\n    }, this);\n    self.addItemBuff = function (data, event) {\n        if (self.hasInventory() && self.selectedItemBuff() != undefined) {\n            var new_item = {\n                item: self.selectedItemBuff(),\n                state: ko.observable(0),\n                size: 1,\n                enabled: ko.observable(true)\n            }\n            self.items.push(new_item);\n            if (self.selectedItemBuff() === 'ring_of_aquila' || self.selectedItemBuff() === 'ring_of_basilius') {\n                self.toggleItem(undefined, new_item, undefined);\n            }\n        }\n    };\n    self.addItemDebuff = function (data, event) {\n        if (self.hasInventory() && self.selectedItemDebuff() != undefined) {\n            var new_item = {\n                item: self.selectedItemDebuff().split('|')[0],\n                state: ko.observable(0),\n                size: 1,\n                enabled: ko.observable(true)\n            }\n            if (self.selectedItemDebuff().split('|').length == 2) {\n                new_item.debuff = self.selectedItemDebuff().split('|')[1]\n            }\n            self.items.push(new_item);\n            if (self.selectedItemDebuff() === 'ring_of_aquila' || self.selectedItemDebuff() === 'ring_of_basilius') {\n                self.toggleItem(undefined, new_item, undefined);\n            }\n        }\n    };\n    \n    self.getAttributes = function (attributetype) {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            var size = self.items()[i].size;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_all_stats':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'bonus_stats':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                }\n                switch(attributetype) {\n                    case 'agi':\n                        if (attribute.name == 'bonus_agility') {\n                            if (item == 'diffusal_blade') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        if (attribute.name == 'bonus_stat' && self.items()[i].state() == 2) {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_agi') {totalAttribute += parseInt(attribute.value[0]);};\n                    break;\n                    case 'int':\n                        if (attribute.name == 'bonus_intellect') {\n                            if (item == 'necronomicon') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else if (item == 'diffusal_blade') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else if (item == 'dagon') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        if (attribute.name == 'bonus_intelligence') {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_int') {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_stat' && self.items()[i].state() == 1) {totalAttribute += parseInt(attribute.value[0]);};\n                    break;\n                    case 'str':\n                        if (attribute.name == 'bonus_strength') {\n                            if (item == 'necronomicon') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        if (attribute.name == 'bonus_stat' && self.items()[i].state() == 0) {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_str') {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'unholy_bonus_strength' && isActive) {totalAttribute += parseInt(attribute.value[0]);};\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getBash = function (attacktype) {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bash_chance':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                    case 'bash_chance_melee':\n                        if (attacktype == 'DOTA_UNIT_CAP_MELEE_ATTACK') { totalAttribute *= (1 - parseInt(attribute.value[0]) / 100); };\n                    break;\n                    case 'bash_chance_ranged':\n                        if (attacktype == 'DOTA_UNIT_CAP_RANGED_ATTACK') { totalAttribute *= (1 - parseInt(attribute.value[0]) / 100); };\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getCritChance = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'crit_chance':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getCritSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'lesser_crit':\n                case 'greater_crit':\n                case 'bloodthorn':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'chance': self.getItemAttributeValue(itemData['item_' + item].attributes, 'crit_chance', 0) / 100,\n                            'multiplier': self.getItemAttributeValue(itemData['item_' + item].attributes, 'crit_multiplier', 0) / 100,\n                            'count': 1,\n                            'displayname': itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n            if (item === 'bloodthorn' && isActive) {\n                if (sources['soul_rend'] == undefined) {\n                    sources['soul_rend'] = {\n                        'chance': 1,\n                        'multiplier': self.getItemAttributeValue(itemData['item_' + item].attributes, 'target_crit_multiplier', 0) / 100,\n                        'count': 1,\n                        'displayname': 'Soul Rend'\n                    }\n                }\n                else {\n                    sources['soul_rend'].count += 1;\n                }\n            }\n        }\n        return sources;\n    };\n\n    self.getCleaveSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'bfury':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'radius': self.getItemAttributeValue(itemData['item_' + item].attributes, 'cleave_radius', 0),\n                            'magnitude': self.getItemAttributeValue(itemData['item_' + item].attributes, 'cleave_damage_percent', 0) / 100,\n                            'count': 1,\n                            'displayname': itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n    \n    self.getBashSource = function (attacktype) {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'javelin':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'damage': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bonus_chance_damage', 1),\n                            'damageType': 'magic',\n                            'count': 1,\n                            'chance': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bonus_chance', 1) / 100,\n                            'displayname': itemData['item_' + item].displayname + ' Pierce'\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n                case 'monkey_king_bar':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'item': item,\n                            'chance': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bash_chance', 0) / 100,\n                            'damage': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bash_damage', 0),\n                            'duration': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bash_stun', 0),\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': 'Mini-Bash' //itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n                case 'abyssal_blade':\n                case 'basher':\n                    if (!sources.hasOwnProperty('bash')) {\n                        sources['bash'] = {\n                            'item': item,\n                            'chance': self.getItemAttributeValue(itemData['item_' + item].attributes, (attacktype == 'DOTA_UNIT_CAP_MELEE_ATTACK') ?'bash_chance_melee' : 'bash_chance_ranged', 0) / 100,\n                            'damage': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bonus_chance_damage', 0),\n                            'duration': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bash_duration', 0),\n                            'count': 1,\n                            'damageType': 'physical',\n                            'displayname': 'Bash' //itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        //sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n    \n    self.getOrbProcSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'maelstrom':\n                case 'mjollnir':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'chance': self.getItemAttributeValue(itemData['item_' + item].attributes, 'chain_chance', 0) / 100,\n                            'damage': self.getItemAttributeValue(itemData['item_' + item].attributes, 'chain_damage', 0),\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n\n    self.getOrbSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'diffusal_blade':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'chance': 1,\n                            'damage': self.getItemAttributeValue(itemData['item_' + item].attributes, 'feedback_mana_burn', self.items()[i].size),\n                            'count': 1,\n                            'damageType': 'physical',\n                            'displayname': itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n    \n    self.getHealth = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_health':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getHealthRegen = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'health_regen':\n                    case 'bonus_regen':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'bonus_health_regen':\n                        if (item == 'tranquil_boots' && !isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                        else if (item != 'tranquil_boots') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'hp_regen':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'health_regen_rate':\n                        if (item == 'heart' && isActive) {\n                            totalAttribute += (parseInt(attribute.value[0]) / 100) * self.hero.health();\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getHealthRegenAura = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(item + attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'aura_health_regen':\n                    case 'hp_regen_aura':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(item + attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    \n    self.getMana = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_mana':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getManaRegen = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'aura_mana_regen':\n                    case 'mana_regen_aura':\n                        totalAttribute += parseFloat(attribute.value[0]);\n                    break;\n                    case 'mana_regen':\n                        if (item == 'infused_raindrop') totalAttribute += parseFloat(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;    \n    };\n    self.getManaRegenPercent = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_mana_regen':\n                    case 'mana_regen':\n                    case 'bonus_mana_regen_pct':\n                        if (item != 'infused_raindrop') totalAttribute += parseFloat(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute / 100;    \n    };\n    self.getManaRegenBloodstone = function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            if (item.indexOf('bloodstone') != -1) {\n                return parseInt(self.items()[i].size);\n            }\n        }\n        return 0;\n    };\n    \n    self.getArmor = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_armor':\n                        if (!isActive || (item != 'medallion_of_courage' && item != 'solar_crest')) { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                    case 'unholy_bonus_armor':\n                        if (isActive && item == 'armlet') { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getArmorAura = function (aList) {\n        var totalAttribute = 0,\n            attributeList = aList || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0;j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (attributeList.find(function (a) { return attribute.name == a.name; })) continue;\n                switch(attribute.name) {\n                    // buckler\n                    case 'bonus_aoe_armor':\n                        if (isActive) {\n                            attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                        }\n                    break;\n                    // assault\n                    case 'aura_positive_armor':\n                        attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                    break;\n                    // ring_of_aquila,ring_of_basilius\n                    case 'aura_bonus_armor':\n                        if (isActive) {\n                            attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                        }\n                    break;\n                    // vladmir\n                    case 'armor_aura':\n                        attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                    break;\n                    // mekansm\n                    case 'heal_bonus_armor':\n                        if (isActive) {\n                            attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                        }\n                    break;\n                }\n            }\n        }\n        // remove buckler if there is a mekansm\n        if (attributeList.find(function (attribute) { return attribute.name == 'heal_bonus_armor'; })) {\n            attributeList = attributeList.filter(function (attribute) {\n                return attribute.name !== 'bonus_aoe_armor';\n            });\n        }\n        // remove ring_of_aquila,ring_of_basilius if there is a vladmir\n        if (attributeList.find(function (attribute) { return attribute.name == 'armor_aura'; })) {\n            attributeList = attributeList.filter(function (attribute) {\n                return attribute.name !== 'aura_bonus_armor';\n            });\n        }\n        \n        totalAttribute = attributeList.reduce(function (memo, attribute) {\n            return memo += attribute.value;\n        }, 0);\n        return {value: totalAttribute, attributes: attributeList};\n    };\n    self.getArmorReduction = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [],\n            selfExcludeList = [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1 || excludeList.indexOf(item + '_' + attribute.name) > -1) continue;\n                // self exclusion check only for hero items, not buff items\n                if (self.hero && (selfExcludeList.indexOf(attribute.name) > -1 || selfExcludeList.indexOf(item + '_' + attribute.name) > -1)) continue;\n                switch(attribute.name) {\n                    case 'armor_reduction':\n                        if (isActive || (item != 'medallion_of_courage' && item != 'solar_crest')) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(item + '_' + attribute.name);\n                        }\n                    break;\n                    case 'aura_negative_armor':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                    case 'corruption_armor':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        // allow blight_stone and desolator corruption_armor stacking from different sources, but not from same source\n                        excludeList.push(item + '_' + attribute.name);\n                        selfExcludeList.push(attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getEvasion = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_evasion':\n                        if (!isActive || (item != 'butterfly' && item != 'solar_crest')) { totalAttribute *= (1 - parseInt(attribute.value[0]) / 100); }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getMovementSpeedFlat = function (e) {\n        var totalAttribute = 0,\n        excludeList = e || [],\n        hasBoots = false,\n        hasEuls = false,\n        hasWindLace = false,\n        hasDrums = false,\n        bootItems = ['boots','phase_boots','arcane_boots','travel_boots','power_treads','tranquil_boots','guardian_greaves'];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'bonus_movement_speed':\n                        if (!hasBoots && bootItems.indexOf(item) >= 0) {\n                            if (item != 'tranquil_boots' || (item == 'tranquil_boots' && !isActive)) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                                hasBoots = true;\n                            }\n                        }\n                        //else if (!hasEuls && item == 'cyclone') {\n                        else if (item == 'cyclone') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasEuls = true;\n                        }\n                    break;\n                    case 'broken_movement_speed':\n                        if (!hasBoots && bootItems.indexOf(item) >= 0) {\n                            if (item == 'tranquil_boots' && isActive) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                                hasBoots = true;\n                            }\n                        }\n                    break;\n                    case 'bonus_movement':\n                        if (!hasBoots && bootItems.indexOf(item) >= 0) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasBoots = true;\n                        }\n                    break;\n                    case 'movement_speed':\n                        if (!hasWindLace && item == 'wind_lace') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasWindLace = true;\n                        }\n                    break;\n                    case 'bonus_aura_movement_speed':\n                        if (!hasDrums && item == 'ancient_janggo') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasDrums = true;\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getMovementSpeedPercent = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [],\n            hasYasha = false,\n            hasDrumsActive = false,\n            hasPhaseActive = false,\n            hasShadowBladeActive = false,\n            hasButterflyActive = false,\n            hasMoMActive = false,\n            yashaItems = ['manta','yasha','sange_and_yasha'];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'movement_speed_percent_bonus':\n                        if (!hasYasha && yashaItems.indexOf(item) >= 0) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasYasha = true;\n                        }\n                    break;\n                    case 'phase_movement_speed':\n                        if (isActive && !hasPhaseActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasPhaseActive = true;\n                        }\n                    break;\n                    case 'bonus_movement_speed_pct':\n                        if (isActive && !hasDrumsActive && item == 'ancient_janggo') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasDrumsActive = true;\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'windwalk_movement_speed':\n                        if (isActive && !hasShadowBladeActive && (item == 'invis_sword' || item == 'silver_edge')) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasShadowBladeActive = true;\n                        }\n                    break;\n                    case 'berserk_bonus_movement_speed':\n                        if (isActive && !hasMoMActive && item == 'mask_of_madness') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasMoMActive = true;\n                        }\n                    break;\n                    case 'bonus_movement_speed': //manta\n                        if (!hasYasha && item == 'manta') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasYasha = true;\n                        }\n                        else if (item == 'smoke_of_deceit' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'bonus_move_speed':\n                        if (isActive && !hasButterflyActive && item == 'butterfly') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasButterflyActive = true;\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute/100, excludeList: excludeList};\n    };\n    \n    self.getMovementSpeedPercentReduction = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'movespeed':\n                        if (item == 'dust' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    case 'blast_movement_speed':\n                        if (item == 'shivas_guard' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    case 'cold_movement_speed':\n                        if (item == 'skadi') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'maim_movement_speed':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'maim') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute/100, excludeList: excludeList};\n    };\n    \n    self.getBonusDamage = function () {\n        var totalAttribute = 0;\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_damage':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        if (sources[item] == undefined) {\n                            sources[item] = {\n                                'damage': parseInt(attribute.value[0]),\n                                'damageType': 'physical',\n                                'count':1,\n                                'displayname': itemData['item_' + item].displayname\n                            }                            \n                        }\n                        else {\n                            sources[item].count += 1;\n                        }\n                    break;\n                    case 'unholy_bonus_damage':\n                        if (isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            if (sources[item + '_active'] == undefined) {\n                                sources[item + '_active'] = {\n                                    'damage': parseInt(attribute.value[0]),\n                                    'damageType': 'physical',\n                                    'count':1,\n                                    'displayname': itemData['item_' + item].displayname + ' Unholy Strength'\n                                }                            \n                            }\n                            else {\n                                sources[item].count += 1;\n                            }\n                        }\n                    break;\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    };\n    self.getBonusDamagePercent = function (s) {\n        s = s || {sources:{},total:0};\n        var totalAttribute = s.total || 0;\n        var sources = s.sources || {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'damage_aura':\n                        if (sources[item] == undefined) {\n                            totalAttribute += parseInt(attribute.value[0]) / 100;\n                            sources[item] = {\n                                'damage': parseInt(attribute.value[0]) / 100,\n                                'damageType': 'physical',\n                                'count':1,\n                                'displayname': itemData['item_' + item].displayname\n                            }\n                        }\n                        // else {\n                            // sources[item].count += 1;\n                        // }\n                    break;\n                    case 'bottle_doubledamage':\n                        if (sources[item] == undefined) {\n                            totalAttribute += parseInt(attribute.value[0]) / 100;\n                            sources[item] = {\n                                'damage': parseInt(attribute.value[0]) / 100,\n                                'damageType': 'physical',\n                                'count':1,\n                                'displayname': itemData['item_' + item].displayname\n                            }\n                        }\n                    break;\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    };\n    self.getAttackSpeed = function (e) {\n        var totalAttribute = 0,\n            hasPowerTreads = false,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'bonus_attack_speed':\n                        if (item == 'power_treads') {\n                            if (!hasPowerTreads) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                                hasPowerTreads = true;\n                            }\n                        }\n                        else if (item == 'moon_shard') {\n                            if (!isActive) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        else if (item == 'hurricane_pike') {\n                            if (isActive) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        else {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'consumed_bonus':\n                        if (item == 'moon_shard' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    break;\n                    case 'bonus_speed':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    // helm_of_the_dominator\n                    case 'attack_speed':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                    case 'unholy_bonus_attack_speed':\n                        if (isActive) { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                    case 'berserk_bonus_attack_speed':\n                        if (isActive) { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    \n    self.getAttackSpeedAura = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(item + attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    // helm_of_the_dominator\n                    case 'attack_speed_aura':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(item + attribute.name);\n                    break;\n                    // assault_cuirass\n                    case 'aura_attack_speed':\n                        if (item != 'shivas_guard') { totalAttribute += parseInt(attribute.value[0]); };\n                        excludeList.push(item + attribute.name);\n                    break;\n                    // ancient_janggo\n                    case 'bonus_attack_speed_pct':\n                        if (isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    \n    self.getAttackSpeedReduction = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'aura_attack_speed':\n                        if (item == 'shivas_guard') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'cold_attack_speed':\n                        if (item == 'skadi') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'maim_attack_speed':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'maim') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getLifesteal = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'lifesteal_percent':\n                        if (item == 'satanic') {\n                            if (!isActive) { return parseInt(attribute.value[0]); };\n                        }\n                        else {\n                            return parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'unholy_lifesteal_percent':\n                        if (isActive) { return parseInt(attribute.value[0]); };\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getLifestealAura = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'vampiric_aura':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getSpellAmp = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'spell_amp':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    self.getCooldownReductionFlat = ko.computed(function () {\n        var totalAttribute = 0;\n        /*for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_night_vision':\n                        if (item != 'moon_shard' || !isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                }\n            }\n        }*/\n        return totalAttribute;\n    });\n    self.getCooldownReductionPercent = function (aList) {        \n        var totalAttribute = 1,\n            attributeList = aList || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0;j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (attributeList.find(function (a) { return attribute.name == a.name; })) continue;\n                switch(attribute.name) {\n                    // octarine_core\n                    case 'bonus_cooldown':\n                        attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                    break;\n                }\n            }\n        }\n        \n        totalAttribute = attributeList.reduce(function (memo, attribute) {\n            return memo *= (1 - attribute.value / 100);\n        }, 1);\n        return {value: totalAttribute, attributes: attributeList};\n    };\n    self.getCooldownIncreaseFlat = ko.computed(function () {\n        var totalAttribute = 0;\n        return totalAttribute;\n    });\n    self.getCooldownIncreasePercent = function () {\n        var totalAttribute = 1;\n        return totalAttribute;\n    };\n    self.getMagicResist = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_magical_armor':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                    case 'bonus_spell_resist':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                    case 'magic_resistance':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getMagicResistReductionSelf = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            if (isActive) {\n                for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                    var attribute = itemData['item_' + item].attributes[j];\n                    switch(attribute.name) {\n                        case 'extra_spell_damage_percent':\n                        case 'ethereal_damage_bonus':\n                            return (1 - parseInt(attribute.value[0]) / 100);\n                        break;\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    };   \n    self.getMagicResistReduction = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            if (isActive) {\n                for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                    var attribute = itemData['item_' + item].attributes[j];\n                    switch(attribute.name) {\n                        case 'ethereal_damage_bonus':\n                            if (!self.isEthereal()) totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                        case 'resist_debuff':\n                            totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                        break;\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    };        \n\n    self.getVisionRangeNight = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_night_vision':\n                        if (item != 'moon_shard' || !isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    // moon_shard\n                    case 'consumed_bonus_night_vision':\n                        if (item == 'moon_shard' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAttackRange = function (attacktype, aList) {\n        var totalAttribute = 0,\n            attributeList = aList || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0;j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (attributeList.find(function (a) { return attribute.name == a.name; })) continue;\n                switch(attribute.name) {\n                    // dragon_lance\n                    case 'base_attack_range':\n                        if (attacktype == 'DOTA_UNIT_CAP_RANGED_ATTACK') attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                    break;\n                }\n            }\n        }\n        \n        totalAttribute = attributeList.reduce(function (memo, attribute) {\n            return memo += attribute.value;\n        }, 0);\n        return {value: totalAttribute, attributes: attributeList};\n    };\n    \n    self.getMissChance = function (e) {\n        var totalAttribute = 1,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'miss_chance':\n                        if (item === 'solar_crest' && isActive) {\n                            totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'blind_pct':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                        excludeList.push(attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    \n    self.getBaseDamageReductionPct = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'backstab_reduction':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'shadow_walk') {\n                            totalAttribute *= (1 + parseInt(attribute.value[0]) / 100);\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };    \n    self.getBonusDamageReductionPct = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'backstab_reduction':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'shadow_walk') {\n                            totalAttribute *= (1 + parseInt(attribute.value[0]) / 100);\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.itemOptions = ko.observableArray(itemOptionsArray.items);\n    \n    self.itemBuffOptions = ko.observableArray(itemBuffOptions.items);\n    self.selectedItemBuff = ko.observable('assault');\n\n    self.itemDebuffOptions = ko.observableArray(itemDebuffOptions.items);\n    self.selectedItemDebuff = ko.observable('assault');\n    \n    return self;\n};\nInventoryViewModel.prototype = Object.create(BasicInventoryViewModel.prototype);\nInventoryViewModel.prototype.constructor = InventoryViewModel;\n\nmodule.exports = InventoryViewModel;",
    "var ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\n\nvar ItemInput = function (itemData, value, name, debuff) {\n    if (itemData['item_' + value].ItemAliases instanceof Array) {\n        var itemAlias = itemData['item_' + value].ItemAliases.join(' ');\n    }\n    else {\n        var itemAlias = itemData['item_' + value].ItemAliases;\n    }\n    this.value = ko.observable(value);\n    this.debuff = ko.observable(debuff);\n    if (this.debuff()) {\n        this.value = ko.observable(value + '|' + debuff.id);\n        this.name = ko.observable(name + ' (' + debuff.name + ')');\n        this.displayname = ko.observable(name + ' (' + debuff.name + ') <span style=\"display:none\">' + ';' + itemAlias + '</span>');\n    }\n    else {\n        this.value = ko.observable(value);\n        this.name = ko.observable(name);\n        this.displayname = ko.observable(name + ' <span style=\"display:none\">' + ';' + itemAlias + '</span>');\n    }\n};\n\nmodule.exports = ItemInput;",
    "var ItemInput = require(\"./ItemInput\");\nvar itemBuffs = ['assault', 'ancient_janggo', 'headdress', 'mekansm', 'pipe', 'ring_of_aquila', 'vladmir', 'ring_of_basilius', 'buckler', 'solar_crest', 'bottle_doubledamage', 'helm_of_the_dominator'];\nvar itemBuffOptions = {};\n\nvar init = function (itemData) {\n    itemBuffOptions.items = itemBuffs.map(function(item) {\n        return new ItemInput(itemData, item, itemData['item_' + item].displayname);\n    }).sort(function (a, b) {\n        if (a.displayname() < b.displayname()) return -1;\n        if (a.displayname() > b.displayname()) return 1;\n        return 0;\n    });\n    return itemBuffOptions.items;\n}\n\nitemBuffOptions.init = init;\n\nmodule.exports = itemBuffOptions;",
    "var ItemInput = require(\"./ItemInput\");\nvar itemDebuffs = [\n    {item: 'assault', debuff: null},\n    {item: 'shivas_guard', debuff: null},\n    {item: 'desolator', debuff: null},\n    {item: 'blight_stone', debuff: null},\n    {item: 'medallion_of_courage', debuff: null},\n    {item: 'radiance', debuff: null},\n    {item: 'sheepstick', debuff: null},\n    {item: 'veil_of_discord', debuff: null},\n    {item: 'solar_crest', debuff: null},\n    {item: 'silver_edge', debuff: {id: 'shadow_walk', name: 'Shadow Walk'}},\n    {item: 'silver_edge', debuff: {id: 'maim', name: 'Lesser Maim'}}\n]\nvar itemDebuffOptions = {};\n\nvar init = function (itemData) {\n    itemDebuffOptions.items = itemDebuffs.map(function(item) {\n        return new ItemInput(itemData, item.item, itemData['item_' + item.item].displayname, item.debuff);\n    }).sort(function (a, b) {\n        if (a.displayname() < b.displayname()) return -1;\n        if (a.displayname() > b.displayname()) return 1;\n        return 0;\n    });\n    return itemDebuffOptions.items;\n}\n\nitemDebuffOptions.init = init;\n\nmodule.exports = itemDebuffOptions;",
    "var validItems = require(\"./validItems\");\nvar ItemInput = require(\"./ItemInput\");\n\nvar itemOptionsArray = {};\n\nvar init = function (itemData) {\n    itemOptionsArray.items = [];\n    for (var i = 0; i < validItems.length; i++) {\n        itemOptionsArray.items.push(new ItemInput(itemData, validItems[i], itemData['item_' + validItems[i]].displayname));\n    }\n    return itemOptionsArray.items;\n}\n\nitemOptionsArray.init = init;\n\nmodule.exports = itemOptionsArray;",
    "module.exports = ['solar_crest', 'heart','smoke_of_deceit','dust','ghost','tranquil_boots','phase_boots','power_treads','buckler','medallion_of_courage','ancient_janggo','mekansm','pipe','veil_of_discord','rod_of_atos','orchid','sheepstick','armlet','invis_sword','ethereal_blade','shivas_guard','manta','mask_of_madness','diffusal_blade','mjollnir','satanic','ring_of_basilius','ring_of_aquila', 'butterfly', 'moon_shard', 'silver_edge','bloodthorn','hurricane_pike'];",
    "module.exports = ['necronomicon','dagon','diffusal_blade','travel_boots'];",
    "module.exports = ['clarity','flask','dust','ward_observer','ward_sentry','tango','tpscroll','smoke_of_deceit'];",
    "module.exports = [\"abyssal_blade\",\"ultimate_scepter\",\"courier\",\"arcane_boots\",\"armlet\",\"assault\",\"boots_of_elves\",\"bfury\",\"belt_of_strength\",\"black_king_bar\",\"blade_mail\",\"blade_of_alacrity\",\"blades_of_attack\",\"blink\",\"bloodstone\",\"boots\",\"travel_boots\",\"bottle\",\"bracer\",\"broadsword\",\"buckler\",\"butterfly\",\"chainmail\",\"circlet\",\"clarity\",\"claymore\",\"cloak\",\"lesser_crit\",\"greater_crit\",\"dagon\",\"demon_edge\",\"desolator\",\"diffusal_blade\",\"rapier\",\"ancient_janggo\",\"dust\",\"eagle\",\"energy_booster\",\"ethereal_blade\",\"cyclone\",\"skadi\",\"flying_courier\",\"force_staff\",\"gauntlets\",\"gem\",\"ghost\",\"gloves\",\"hand_of_midas\",\"headdress\",\"flask\",\"heart\",\"heavens_halberd\",\"helm_of_iron_will\",\"helm_of_the_dominator\",\"hood_of_defiance\",\"hyperstone\",\"branches\",\"javelin\",\"sphere\",\"maelstrom\",\"magic_stick\",\"magic_wand\",\"manta\",\"mantle\",\"mask_of_madness\",\"medallion_of_courage\",\"mekansm\",\"mithril_hammer\",\"mjollnir\",\"monkey_king_bar\",\"lifesteal\",\"mystic_staff\",\"necronomicon\",\"null_talisman\",\"oblivion_staff\",\"ward_observer\",\"ogre_axe\",\"orb_of_venom\",\"orchid\",\"pers\",\"phase_boots\",\"pipe\",\"platemail\",\"point_booster\",\"poor_mans_shield\",\"power_treads\",\"quarterstaff\",\"quelling_blade\",\"radiance\",\"reaver\",\"refresher\",\"ring_of_aquila\",\"ring_of_basilius\",\"ring_of_health\",\"ring_of_protection\",\"ring_of_regen\",\"robe\",\"rod_of_atos\",\"relic\",\"sobi_mask\",\"sange\",\"sange_and_yasha\",\"satanic\",\"sheepstick\",\"ward_sentry\",\"shadow_amulet\",\"invis_sword\",\"shivas_guard\",\"basher\",\"slippers\",\"smoke_of_deceit\",\"soul_booster\",\"soul_ring\",\"staff_of_wizardry\",\"stout_shield\",\"talisman_of_evasion\",\"tango\",\"tpscroll\",\"tranquil_boots\",\"ultimate_orb\",\"urn_of_shadows\",\"vanguard\",\"veil_of_discord\",\"vitality_booster\",\"vladmir\",\"void_stone\",\"wraith_band\",\"yasha\",\"crimson_guard\",\"enchanted_mango\",\"lotus_orb\",\"glimmer_cape\",\"guardian_greaves\",\"moon_shard\",\"silver_edge\",\"solar_crest\",\"octarine_core\",\"aether_lens\",\"faerie_fire\",\"iron_talon\",\"dragon_lance\",\"echo_sabre\",\"infused_raindrop\",\"blight_stone\",\"wind_lace\",\"tome_of_knowledge\",\"bloodthorn\",\"hurricane_pike\"];",
    "(function (factory) {\n\t// Module systems magic dance.\n\n\tif (typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\") {\n\t\t// CommonJS or Node: hard-coded dependency on \"knockout\"\n\t\tfactory((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null), exports);\n\t} else if (typeof define === \"function\" && define[\"amd\"]) {\n\t\t// AMD anonymous module with hard-coded dependency on \"knockout\"\n\t\tdefine([\"knockout\", \"exports\"], factory);\n\t} else {\n\t\t// <script> tag: use the global `ko` object, attaching a `mapping` property\n\t\tfactory(ko, ko.mapping = {});\n\t}\n}(function (ko, exports) {\n\tvar DEBUG=true;\n\tvar mappingProperty = \"__ko_mapping__\";\n\tvar realKoDependentObservable = ko.dependentObservable;\n\tvar mappingNesting = 0;\n\tvar dependentObservables;\n\tvar visitedObjects;\n\tvar recognizedRootProperties = [\"create\", \"update\", \"key\", \"arrayChanged\"];\n\tvar emptyReturn = {};\n\n\tvar _defaultOptions = {\n\t\tinclude: [\"_destroy\"],\n\t\tignore: [],\n\t\tcopy: [],\n\t\tobserve: []\n\t};\n\tvar defaultOptions = _defaultOptions;\n\n\t// Author: KennyTM @ StackOverflow\n\tfunction unionArrays (x, y) {\n\t\tvar obj = {};\n\t\tfor (var i = x.length - 1; i >= 0; -- i) obj[x[i]] = x[i];\n\t\tfor (var i = y.length - 1; i >= 0; -- i) obj[y[i]] = y[i];\n\t\tvar res = [];\n\n\t\tfor (var k in obj) {\n\t\t\tres.push(obj[k]);\n\t\t};\n\n\t\treturn res;\n\t}\n\n\tfunction extendObject(destination, source) {\n\t\tvar destType;\n\n\t\tfor (var key in source) {\n\t\t\tif (source.hasOwnProperty(key) && source[key]) {\n\t\t\t\tdestType = exports.getType(destination[key]);\n\t\t\t\tif (key && destination[key] && destType !== \"array\" && destType !== \"string\") {\n\t\t\t\t\textendObject(destination[key], source[key]);\n\t\t\t\t} else {\n\t\t\t\t\tvar bothArrays = exports.getType(destination[key]) === \"array\" && exports.getType(source[key]) === \"array\";\n\t\t\t\t\tif (bothArrays) {\n\t\t\t\t\t\tdestination[key] = unionArrays(destination[key], source[key]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction merge(obj1, obj2) {\n\t\tvar merged = {};\n\t\textendObject(merged, obj1);\n\t\textendObject(merged, obj2);\n\n\t\treturn merged;\n\t}\n\n\texports.isMapped = function (viewModel) {\n\t\tvar unwrapped = ko.utils.unwrapObservable(viewModel);\n\t\treturn unwrapped && unwrapped[mappingProperty];\n\t}\n\n\texports.fromJS = function (jsObject /*, inputOptions, target*/ ) {\n\t\tif (arguments.length == 0) throw new Error(\"When calling ko.fromJS, pass the object you want to convert.\");\n\n\t\ttry {\n\t\t\tif (!mappingNesting++) {\n\t\t\t\tdependentObservables = [];\n\t\t\t\tvisitedObjects = new objectLookup();\n\t\t\t}\n\n\t\t\tvar options;\n\t\t\tvar target;\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tif (arguments[1][mappingProperty]) {\n\t\t\t\t\ttarget = arguments[1];\n\t\t\t\t} else {\n\t\t\t\t\toptions = arguments[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (arguments.length == 3) {\n\t\t\t\toptions = arguments[1];\n\t\t\t\ttarget = arguments[2];\n\t\t\t}\n\n\t\t\tif (target) {\n\t\t\t\toptions = merge(options, target[mappingProperty]);\n\t\t\t}\n\t\t\toptions = fillOptions(options);\n\n\t\t\tvar result = updateViewModel(target, jsObject, options);\n\t\t\tif (target) {\n\t\t\t\tresult = target;\n\t\t\t}\n\n\t\t\t// Evaluate any dependent observables that were proxied.\n\t\t\t// Do this after the model's observables have been created\n\t\t\tif (!--mappingNesting) {\n\t\t\t\twhile (dependentObservables.length) {\n\t\t\t\t\tvar DO = dependentObservables.pop();\n\t\t\t\t\tif (DO) {\n\t\t\t\t\t\tDO();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Move this magic property to the underlying dependent observable\n\t\t\t\t\t\tDO.__DO[\"throttleEvaluation\"] = DO[\"throttleEvaluation\"];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save any new mapping options in the view model, so that updateFromJS can use them later.\n\t\t\tresult[mappingProperty] = merge(result[mappingProperty], options);\n\n\t\t\treturn result;\n\t\t} catch(e) {\n\t\t\tmappingNesting = 0;\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\texports.fromJSON = function (jsonString /*, options, target*/ ) {\n\t\tvar parsed = ko.utils.parseJson(jsonString);\n\t\targuments[0] = parsed;\n\t\treturn exports.fromJS.apply(this, arguments);\n\t};\n\n\texports.updateFromJS = function (viewModel) {\n\t\tthrow new Error(\"ko.mapping.updateFromJS, use ko.mapping.fromJS instead. Please note that the order of parameters is different!\");\n\t};\n\n\texports.updateFromJSON = function (viewModel) {\n\t\tthrow new Error(\"ko.mapping.updateFromJSON, use ko.mapping.fromJSON instead. Please note that the order of parameters is different!\");\n\t};\n\n\texports.toJS = function (rootObject, options) {\n\t\tif (!defaultOptions) exports.resetDefaultOptions();\n\n\t\tif (arguments.length == 0) throw new Error(\"When calling ko.mapping.toJS, pass the object you want to convert.\");\n\t\tif (exports.getType(defaultOptions.ignore) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().ignore should be an array.\");\n\t\tif (exports.getType(defaultOptions.include) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().include should be an array.\");\n\t\tif (exports.getType(defaultOptions.copy) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().copy should be an array.\");\n\n\t\t// Merge in the options used in fromJS\n\t\toptions = fillOptions(options, rootObject[mappingProperty]);\n\n\t\t// We just unwrap everything at every level in the object graph\n\t\treturn exports.visitModel(rootObject, function (x) {\n\t\t\treturn ko.utils.unwrapObservable(x)\n\t\t}, options);\n\t};\n\n\texports.toJSON = function (rootObject, options) {\n\t\tvar plainJavaScriptObject = exports.toJS(rootObject, options);\n\t\treturn ko.utils.stringifyJson(plainJavaScriptObject);\n\t};\n\n\texports.defaultOptions = function () {\n\t\tif (arguments.length > 0) {\n\t\t\tdefaultOptions = arguments[0];\n\t\t} else {\n\t\t\treturn defaultOptions;\n\t\t}\n\t};\n\n\texports.resetDefaultOptions = function () {\n\t\tdefaultOptions = {\n\t\t\tinclude: _defaultOptions.include.slice(0),\n\t\t\tignore: _defaultOptions.ignore.slice(0),\n\t\t\tcopy: _defaultOptions.copy.slice(0)\n\t\t};\n\t};\n\n\texports.getType = function(x) {\n\t\tif ((x) && (typeof (x) === \"object\")) {\n\t\t\tif (x.constructor === Date) return \"date\";\n\t\t\tif (x.constructor === Array) return \"array\";\n\t\t}\n\t\treturn typeof x;\n\t}\n\n\tfunction fillOptions(rawOptions, otherOptions) {\n\t\tvar options = merge({}, rawOptions);\n\n\t\t// Move recognized root-level properties into a root namespace\n\t\tfor (var i = recognizedRootProperties.length - 1; i >= 0; i--) {\n\t\t\tvar property = recognizedRootProperties[i];\n\t\t\t\n\t\t\t// Carry on, unless this property is present\n\t\t\tif (!options[property]) continue;\n\t\t\t\n\t\t\t// Move the property into the root namespace\n\t\t\tif (!(options[\"\"] instanceof Object)) options[\"\"] = {};\n\t\t\toptions[\"\"][property] = options[property];\n\t\t\tdelete options[property];\n\t\t}\n\n\t\tif (otherOptions) {\n\t\t\toptions.ignore = mergeArrays(otherOptions.ignore, options.ignore);\n\t\t\toptions.include = mergeArrays(otherOptions.include, options.include);\n\t\t\toptions.copy = mergeArrays(otherOptions.copy, options.copy);\n\t\t\toptions.observe = mergeArrays(otherOptions.observe, options.observe);\n\t\t}\n\t\toptions.ignore = mergeArrays(options.ignore, defaultOptions.ignore);\n\t\toptions.include = mergeArrays(options.include, defaultOptions.include);\n\t\toptions.copy = mergeArrays(options.copy, defaultOptions.copy);\n\t\toptions.observe = mergeArrays(options.observe, defaultOptions.observe);\n\n\t\toptions.mappedProperties = options.mappedProperties || {};\n\t\toptions.copiedProperties = options.copiedProperties || {};\n\t\treturn options;\n\t}\n\n\tfunction mergeArrays(a, b) {\n\t\tif (exports.getType(a) !== \"array\") {\n\t\t\tif (exports.getType(a) === \"undefined\") a = [];\n\t\t\telse a = [a];\n\t\t}\n\t\tif (exports.getType(b) !== \"array\") {\n\t\t\tif (exports.getType(b) === \"undefined\") b = [];\n\t\t\telse b = [b];\n\t\t}\n\n\t\treturn ko.utils.arrayGetDistinctValues(a.concat(b));\n\t}\n\n\t// When using a 'create' callback, we proxy the dependent observable so that it doesn't immediately evaluate on creation.\n\t// The reason is that the dependent observables in the user-specified callback may contain references to properties that have not been mapped yet.\n\tfunction withProxyDependentObservable(dependentObservables, callback) {\n\t\tvar localDO = ko.dependentObservable;\n\t\tko.dependentObservable = function (read, owner, options) {\n\t\t\toptions = options || {};\n\n\t\t\tif (read && typeof read == \"object\") { // mirrors condition in knockout implementation of DO's\n\t\t\t\toptions = read;\n\t\t\t}\n\n\t\t\tvar realDeferEvaluation = options.deferEvaluation;\n\n\t\t\tvar isRemoved = false;\n\n\t\t\t// We wrap the original dependent observable so that we can remove it from the 'dependentObservables' list we need to evaluate after mapping has\n\t\t\t// completed if the user already evaluated the DO themselves in the meantime.\n\t\t\tvar wrap = function (DO) {\n\t\t\t\t// Temporarily revert ko.dependentObservable, since it is used in ko.isWriteableObservable\n\t\t\t\tvar tmp = ko.dependentObservable;\n\t\t\t\tko.dependentObservable = realKoDependentObservable;\n\t\t\t\tvar isWriteable = ko.isWriteableObservable(DO);\n\t\t\t\tko.dependentObservable = tmp;\n\n\t\t\t\tvar wrapped = realKoDependentObservable({\n\t\t\t\t\tread: function () {\n\t\t\t\t\t\tif (!isRemoved) {\n\t\t\t\t\t\t\tko.utils.arrayRemoveItem(dependentObservables, DO);\n\t\t\t\t\t\t\tisRemoved = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn DO.apply(DO, arguments);\n\t\t\t\t\t},\n\t\t\t\t\twrite: isWriteable && function (val) {\n\t\t\t\t\t\treturn DO(val);\n\t\t\t\t\t},\n\t\t\t\t\tdeferEvaluation: true\n\t\t\t\t});\n\t\t\t\tif (DEBUG) wrapped._wrapper = true;\n\t\t\t\twrapped.__DO = DO;\n\t\t\t\treturn wrapped;\n\t\t\t};\n\t\t\t\n\t\t\toptions.deferEvaluation = true; // will either set for just options, or both read/options.\n\t\t\tvar realDependentObservable = new realKoDependentObservable(read, owner, options);\n\n\t\t\tif (!realDeferEvaluation) {\n\t\t\t\trealDependentObservable = wrap(realDependentObservable);\n\t\t\t\tdependentObservables.push(realDependentObservable);\n\t\t\t}\n\n\t\t\treturn realDependentObservable;\n\t\t}\n\t\tko.dependentObservable.fn = realKoDependentObservable.fn;\n\t\tko.computed = ko.dependentObservable;\n\t\tvar result = callback();\n\t\tko.dependentObservable = localDO;\n\t\tko.computed = ko.dependentObservable;\n\t\treturn result;\n\t}\n\n\tfunction updateViewModel(mappedRootObject, rootObject, options, parentName, parent, parentPropertyName, mappedParent) {\n\t\tvar isArray = exports.getType(ko.utils.unwrapObservable(rootObject)) === \"array\";\n\n\t\tparentPropertyName = parentPropertyName || \"\";\n\n\t\t// If this object was already mapped previously, take the options from there and merge them with our existing ones.\n\t\tif (exports.isMapped(mappedRootObject)) {\n\t\t\tvar previousMapping = ko.utils.unwrapObservable(mappedRootObject)[mappingProperty];\n\t\t\toptions = merge(previousMapping, options);\n\t\t}\n\n\t\tvar callbackParams = {\n\t\t\tdata: rootObject,\n\t\t\tparent: mappedParent || parent\n\t\t};\n\n\t\tvar hasCreateCallback = function () {\n\t\t\treturn options[parentName] && options[parentName].create instanceof Function;\n\t\t};\n\n\t\tvar createCallback = function (data) {\n\t\t\treturn withProxyDependentObservable(dependentObservables, function () {\n\t\t\t\t\n\t\t\t\tif (ko.utils.unwrapObservable(parent) instanceof Array) {\n\t\t\t\t\treturn options[parentName].create({\n\t\t\t\t\t\tdata: data || callbackParams.data,\n\t\t\t\t\t\tparent: callbackParams.parent,\n\t\t\t\t\t\tskip: emptyReturn\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn options[parentName].create({\n\t\t\t\t\t\tdata: data || callbackParams.data,\n\t\t\t\t\t\tparent: callbackParams.parent\n\t\t\t\t\t});\n\t\t\t\t}\t\t\t\t\n\t\t\t});\n\t\t};\n\n\t\tvar hasUpdateCallback = function () {\n\t\t\treturn options[parentName] && options[parentName].update instanceof Function;\n\t\t};\n\n\t\tvar updateCallback = function (obj, data) {\n\t\t\tvar params = {\n\t\t\t\tdata: data || callbackParams.data,\n\t\t\t\tparent: callbackParams.parent,\n\t\t\t\ttarget: ko.utils.unwrapObservable(obj)\n\t\t\t};\n\n\t\t\tif (ko.isWriteableObservable(obj)) {\n\t\t\t\tparams.observable = obj;\n\t\t\t}\n\n\t\t\treturn options[parentName].update(params);\n\t\t}\n\n\t\tvar alreadyMapped = visitedObjects.get(rootObject);\n\t\tif (alreadyMapped) {\n\t\t\treturn alreadyMapped;\n\t\t}\n\n\t\tparentName = parentName || \"\";\n\n\t\tif (!isArray) {\n\t\t\t// For atomic types, do a direct update on the observable\n\t\t\tif (!canHaveProperties(rootObject)) {\n\t\t\t\tswitch (exports.getType(rootObject)) {\n\t\t\t\tcase \"function\":\n\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\tif (ko.isWriteableObservable(rootObject)) {\n\t\t\t\t\t\t\trootObject(updateCallback(rootObject));\n\t\t\t\t\t\t\tmappedRootObject = rootObject;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmappedRootObject = updateCallback(rootObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappedRootObject = rootObject;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (ko.isWriteableObservable(mappedRootObject)) {\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\tvar valueToWrite = updateCallback(mappedRootObject);\n\t\t\t\t\t\t\tmappedRootObject(valueToWrite);\n\t\t\t\t\t\t\treturn valueToWrite;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar valueToWrite = ko.utils.unwrapObservable(rootObject);\n\t\t\t\t\t\t\tmappedRootObject(valueToWrite);\n\t\t\t\t\t\t\treturn valueToWrite;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar hasCreateOrUpdateCallback = hasCreateCallback() || hasUpdateCallback();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasCreateCallback()) {\n\t\t\t\t\t\t\tmappedRootObject = createCallback();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmappedRootObject = ko.observable(ko.utils.unwrapObservable(rootObject));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\tmappedRootObject(updateCallback(mappedRootObject));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasCreateOrUpdateCallback) return mappedRootObject;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tmappedRootObject = ko.utils.unwrapObservable(mappedRootObject);\n\t\t\t\tif (!mappedRootObject) {\n\t\t\t\t\tif (hasCreateCallback()) {\n\t\t\t\t\t\tvar result = createCallback();\n\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\tresult = updateCallback(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\treturn updateCallback(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmappedRootObject = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\tmappedRootObject = updateCallback(mappedRootObject);\n\t\t\t\t}\n\n\t\t\t\tvisitedObjects.save(rootObject, mappedRootObject);\n\t\t\t\tif (hasUpdateCallback()) return mappedRootObject;\n\n\t\t\t\t// For non-atomic types, visit all properties and update recursively\n\t\t\t\tvisitPropertiesOrArrayEntries(rootObject, function (indexer) {\n\t\t\t\t\tvar fullPropertyName = parentPropertyName.length ? parentPropertyName + \".\" + indexer : indexer;\n\n\t\t\t\t\tif (ko.utils.arrayIndexOf(options.ignore, fullPropertyName) != -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ko.utils.arrayIndexOf(options.copy, fullPropertyName) != -1) {\n\t\t\t\t\t\tmappedRootObject[indexer] = rootObject[indexer];\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(typeof rootObject[indexer] != \"object\" && typeof rootObject[indexer] != \"array\" && options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tmappedRootObject[indexer] = rootObject[indexer];\n\t\t\t\t\t\toptions.copiedProperties[fullPropertyName] = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// In case we are adding an already mapped property, fill it with the previously mapped property value to prevent recursion.\n\t\t\t\t\t// If this is a property that was generated by fromJS, we should use the options specified there\n\t\t\t\t\tvar prevMappedProperty = visitedObjects.get(rootObject[indexer]);\n\t\t\t\t\tvar retval = updateViewModel(mappedRootObject[indexer], rootObject[indexer], options, indexer, mappedRootObject, fullPropertyName, mappedRootObject);\n\t\t\t\t\tvar value = prevMappedProperty || retval;\n\t\t\t\t\t\n\t\t\t\t\tif(options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tmappedRootObject[indexer] = value();\n\t\t\t\t\t\toptions.copiedProperties[fullPropertyName] = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (ko.isWriteableObservable(mappedRootObject[indexer])) {\n\t\t\t\t\t\tvalue = ko.utils.unwrapObservable(value);\n\t\t\t\t\t\tif (mappedRootObject[indexer]() !== value) {\n\t\t\t\t\t\t\tmappedRootObject[indexer](value);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = mappedRootObject[indexer] === undefined ? value : ko.utils.unwrapObservable(value);\n\t\t\t\t\t\tmappedRootObject[indexer] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\toptions.mappedProperties[fullPropertyName] = true;\n\t\t\t\t});\n\t\t\t}\n\t\t} else { //mappedRootObject is an array\n\t\t\tvar changes = [];\n\n\t\t\tvar hasKeyCallback = false;\n\t\t\tvar keyCallback = function (x) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\tif (options[parentName] && options[parentName].key) {\n\t\t\t\tkeyCallback = options[parentName].key;\n\t\t\t\thasKeyCallback = true;\n\t\t\t}\n\n\t\t\tif (!ko.isObservable(mappedRootObject)) {\n\t\t\t\t// When creating the new observable array, also add a bunch of utility functions that take the 'key' of the array items into account.\n\t\t\t\tmappedRootObject = ko.observableArray([]);\n\n\t\t\t\tmappedRootObject.mappedRemove = function (valueOrPredicate) {\n\t\t\t\t\tvar predicate = typeof valueOrPredicate == \"function\" ? valueOrPredicate : function (value) {\n\t\t\t\t\t\t\treturn value === keyCallback(valueOrPredicate);\n\t\t\t\t\t\t};\n\t\t\t\t\treturn mappedRootObject.remove(function (item) {\n\t\t\t\t\t\treturn predicate(keyCallback(item));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedRemoveAll = function (arrayOfValues) {\n\t\t\t\t\tvar arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);\n\t\t\t\t\treturn mappedRootObject.remove(function (item) {\n\t\t\t\t\t\treturn ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedDestroy = function (valueOrPredicate) {\n\t\t\t\t\tvar predicate = typeof valueOrPredicate == \"function\" ? valueOrPredicate : function (value) {\n\t\t\t\t\t\t\treturn value === keyCallback(valueOrPredicate);\n\t\t\t\t\t\t};\n\t\t\t\t\treturn mappedRootObject.destroy(function (item) {\n\t\t\t\t\t\treturn predicate(keyCallback(item));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedDestroyAll = function (arrayOfValues) {\n\t\t\t\t\tvar arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);\n\t\t\t\t\treturn mappedRootObject.destroy(function (item) {\n\t\t\t\t\t\treturn ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedIndexOf = function (item) {\n\t\t\t\t\tvar keys = filterArrayByKey(mappedRootObject(), keyCallback);\n\t\t\t\t\tvar key = keyCallback(item);\n\t\t\t\t\treturn ko.utils.arrayIndexOf(keys, key);\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedGet = function (item) {\n\t\t\t\t\treturn mappedRootObject()[mappedRootObject.mappedIndexOf(item)];\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedCreate = function (value) {\n\t\t\t\t\tif (mappedRootObject.mappedIndexOf(value) !== -1) {\n\t\t\t\t\t\tthrow new Error(\"There already is an object with the key that you specified.\");\n\t\t\t\t\t}\n\n\t\t\t\t\tvar item = hasCreateCallback() ? createCallback(value) : value;\n\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\tvar newValue = updateCallback(item, value);\n\t\t\t\t\t\tif (ko.isWriteableObservable(item)) {\n\t\t\t\t\t\t\titem(newValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\titem = newValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmappedRootObject.push(item);\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar currentArrayKeys = filterArrayByKey(ko.utils.unwrapObservable(mappedRootObject), keyCallback).sort();\n\t\t\tvar newArrayKeys = filterArrayByKey(rootObject, keyCallback);\n\t\t\tif (hasKeyCallback) newArrayKeys.sort();\n\t\t\tvar editScript = ko.utils.compareArrays(currentArrayKeys, newArrayKeys);\n\n\t\t\tvar ignoreIndexOf = {};\n\t\t\t\n\t\t\tvar i, j;\n\n\t\t\tvar unwrappedRootObject = ko.utils.unwrapObservable(rootObject);\n\t\t\tvar itemsByKey = {};\n\t\t\tvar optimizedKeys = true;\n\t\t\tfor (i = 0, j = unwrappedRootObject.length; i < j; i++) {\n\t\t\t\tvar key = keyCallback(unwrappedRootObject[i]);\n\t\t\t\tif (key === undefined || key instanceof Object) {\n\t\t\t\t\toptimizedKeys = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\titemsByKey[key] = unwrappedRootObject[i];\n\t\t\t}\n\n\t\t\tvar newContents = [];\n\t\t\tvar passedOver = 0;\n\t\t\tfor (i = 0, j = editScript.length; i < j; i++) {\n\t\t\t\tvar key = editScript[i];\n\t\t\t\tvar mappedItem;\n\t\t\t\tvar fullPropertyName = parentPropertyName + \"[\" + i + \"]\";\n\t\t\t\tswitch (key.status) {\n\t\t\t\tcase \"added\":\n\t\t\t\t\tvar item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);\n\t\t\t\t\tmappedItem = updateViewModel(undefined, item, options, parentName, mappedRootObject, fullPropertyName, parent);\n\t\t\t\t\tif(!hasCreateCallback()) {\n\t\t\t\t\t\tmappedItem = ko.utils.unwrapObservable(mappedItem);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);\n\t\t\t\t\t\n\t\t\t\t\tif (mappedItem === emptyReturn) {\n\t\t\t\t\t\tpassedOver++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewContents[index - passedOver] = mappedItem;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tignoreIndexOf[index] = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"retained\":\n\t\t\t\t\tvar item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);\n\t\t\t\t\tmappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);\n\t\t\t\t\tupdateViewModel(mappedItem, item, options, parentName, mappedRootObject, fullPropertyName, parent);\n\n\t\t\t\t\tvar index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);\n\t\t\t\t\tnewContents[index] = mappedItem;\n\t\t\t\t\tignoreIndexOf[index] = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"deleted\":\n\t\t\t\t\tmappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tchanges.push({\n\t\t\t\t\tevent: key.status,\n\t\t\t\t\titem: mappedItem\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tmappedRootObject(newContents);\n\n\t\t\tif (options[parentName] && options[parentName].arrayChanged) {\n\t\t\t\tko.utils.arrayForEach(changes, function (change) {\n\t\t\t\t\toptions[parentName].arrayChanged(change.event, change.item);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn mappedRootObject;\n\t}\n\n\tfunction ignorableIndexOf(array, item, ignoreIndices) {\n\t\tfor (var i = 0, j = array.length; i < j; i++) {\n\t\t\tif (ignoreIndices[i] === true) continue;\n\t\t\tif (array[i] === item) return i;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction mapKey(item, callback) {\n\t\tvar mappedItem;\n\t\tif (callback) mappedItem = callback(item);\n\t\tif (exports.getType(mappedItem) === \"undefined\") mappedItem = item;\n\n\t\treturn ko.utils.unwrapObservable(mappedItem);\n\t}\n\n\tfunction getItemByKey(array, key, callback) {\n\t\tarray = ko.utils.unwrapObservable(array);\n\t\tfor (var i = 0, j = array.length; i < j; i++) {\n\t\t\tvar item = array[i];\n\t\t\tif (mapKey(item, callback) === key) return item;\n\t\t}\n\n\t\tthrow new Error(\"When calling ko.update*, the key '\" + key + \"' was not found!\");\n\t}\n\n\tfunction filterArrayByKey(array, callback) {\n\t\treturn ko.utils.arrayMap(ko.utils.unwrapObservable(array), function (item) {\n\t\t\tif (callback) {\n\t\t\t\treturn mapKey(item, callback);\n\t\t\t} else {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n\t\tif (exports.getType(rootObject) === \"array\") {\n\t\t\tfor (var i = 0; i < rootObject.length; i++)\n\t\t\tvisitorCallback(i);\n\t\t} else {\n\t\t\tfor (var propertyName in rootObject)\n\t\t\tvisitorCallback(propertyName);\n\t\t}\n\t};\n\n\tfunction canHaveProperties(object) {\n\t\tvar type = exports.getType(object);\n\t\treturn ((type === \"object\") || (type === \"array\")) && (object !== null);\n\t}\n\n\t// Based on the parentName, this creates a fully classified name of a property\n\n\tfunction getPropertyName(parentName, parent, indexer) {\n\t\tvar propertyName = parentName || \"\";\n\t\tif (exports.getType(parent) === \"array\") {\n\t\t\tif (parentName) {\n\t\t\t\tpropertyName += \"[\" + indexer + \"]\";\n\t\t\t}\n\t\t} else {\n\t\t\tif (parentName) {\n\t\t\t\tpropertyName += \".\";\n\t\t\t}\n\t\t\tpropertyName += indexer;\n\t\t}\n\t\treturn propertyName;\n\t}\n\n\texports.visitModel = function (rootObject, callback, options) {\n\t\toptions = options || {};\n\t\toptions.visitedObjects = options.visitedObjects || new objectLookup();\n\n\t\tvar mappedRootObject;\n\t\tvar unwrappedRootObject = ko.utils.unwrapObservable(rootObject);\n\n\t\tif (!canHaveProperties(unwrappedRootObject)) {\n\t\t\treturn callback(rootObject, options.parentName);\n\t\t} else {\n\t\t\toptions = fillOptions(options, unwrappedRootObject[mappingProperty]);\n\n\t\t\t// Only do a callback, but ignore the results\n\t\t\tcallback(rootObject, options.parentName);\n\t\t\tmappedRootObject = exports.getType(unwrappedRootObject) === \"array\" ? [] : {};\n\t\t}\n\n\t\toptions.visitedObjects.save(rootObject, mappedRootObject);\n\n\t\tvar parentName = options.parentName;\n\t\tvisitPropertiesOrArrayEntries(unwrappedRootObject, function (indexer) {\n\t\t\tif (options.ignore && ko.utils.arrayIndexOf(options.ignore, indexer) != -1) return;\n\n\t\t\tvar propertyValue = unwrappedRootObject[indexer];\n\t\t\toptions.parentName = getPropertyName(parentName, unwrappedRootObject, indexer);\n\n\t\t\t// If we don't want to explicitly copy the unmapped property...\n\t\t\tif (ko.utils.arrayIndexOf(options.copy, indexer) === -1) {\n\t\t\t\t// ...find out if it's a property we want to explicitly include\n\t\t\t\tif (ko.utils.arrayIndexOf(options.include, indexer) === -1) {\n\t\t\t\t\t// The mapped properties object contains all the properties that were part of the original object.\n\t\t\t\t\t// If a property does not exist, and it is not because it is part of an array (e.g. \"myProp[3]\"), then it should not be unmapped.\n\t\t\t\t    if (unwrappedRootObject[mappingProperty]\n\t\t\t\t        && unwrappedRootObject[mappingProperty].mappedProperties && !unwrappedRootObject[mappingProperty].mappedProperties[indexer]\n\t\t\t\t        && unwrappedRootObject[mappingProperty].copiedProperties && !unwrappedRootObject[mappingProperty].copiedProperties[indexer]\n\t\t\t\t        && !(exports.getType(unwrappedRootObject) === \"array\")) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar outputProperty;\n\t\t\tswitch (exports.getType(ko.utils.unwrapObservable(propertyValue))) {\n\t\t\tcase \"object\":\n\t\t\tcase \"array\":\n\t\t\tcase \"undefined\":\n\t\t\t\tvar previouslyMappedValue = options.visitedObjects.get(propertyValue);\n\t\t\t\tmappedRootObject[indexer] = (exports.getType(previouslyMappedValue) !== \"undefined\") ? previouslyMappedValue : exports.visitModel(propertyValue, callback, options);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmappedRootObject[indexer] = callback(propertyValue, options.parentName);\n\t\t\t}\n\t\t});\n\n\t\treturn mappedRootObject;\n\t}\n\n\tfunction simpleObjectLookup() {\n\t\tvar keys = [];\n\t\tvar values = [];\n\t\tthis.save = function (key, value) {\n\t\t\tvar existingIndex = ko.utils.arrayIndexOf(keys, key);\n\t\t\tif (existingIndex >= 0) values[existingIndex] = value;\n\t\t\telse {\n\t\t\t\tkeys.push(key);\n\t\t\t\tvalues.push(value);\n\t\t\t}\n\t\t};\n\t\tthis.get = function (key) {\n\t\t\tvar existingIndex = ko.utils.arrayIndexOf(keys, key);\n\t\t\tvar value = (existingIndex >= 0) ? values[existingIndex] : undefined;\n\t\t\treturn value;\n\t\t};\n\t};\n\t\n\tfunction objectLookup() {\n\t\tvar buckets = {};\n\t\t\n\t\tvar findBucket = function(key) {\n\t\t\tvar bucketKey;\n\t\t\ttry {\n\t\t\t\tbucketKey = key;//JSON.stringify(key);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tbucketKey = \"$$$\";\n\t\t\t}\n\n\t\t\tvar bucket = buckets[bucketKey];\n\t\t\tif (bucket === undefined) {\n\t\t\t\tbucket = new simpleObjectLookup();\n\t\t\t\tbuckets[bucketKey] = bucket;\n\t\t\t}\n\t\t\treturn bucket;\n\t\t};\n\t\t\n\t\tthis.save = function (key, value) {\n\t\t\tfindBucket(key).save(key, value);\n\t\t};\n\t\tthis.get = function (key) {\n\t\t\treturn findBucket(key).get(key);\n\t\t};\n\t};\n}));",
    "// Knockout Fast Mapping v0.1\n// License: MIT (http://www.opensource.org/licenses/mit-license.php)\n\n(function (factory) {\n\t// Module systems magic dance.\n\n\tif (typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\") {\n\t\t// CommonJS or Node: hard-coded dependency on \"knockout\"\n\t\tfactory((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null), exports);\n\t} else if (typeof define === \"function\" && define[\"amd\"]) {\n\t\t// AMD anonymous module with hard-coded dependency on \"knockout\"\n\t\tdefine([\"knockout\", \"exports\"], factory);\n\t} else {\n\t\t// <script> tag: use the global `ko` object, attaching a `wrap` property\n\t\tfactory(ko, ko.wrap = {});\n\t}\n}(function (ko, exports) {\n    \n    // this function mimics ko.mapping\n    exports.fromJS = function(jsObject, computedFunctions)\n    {\n        reset();\n\treturn wrap(jsObject, computedFunctions);\n    }\n\n    // this function unwraps the outer for assigning the result to an observable\n    // see https://github.com/SteveSanderson/knockout/issues/517\n    exports.updateFromJS = function(observable, jsObject, computedFunctions)\n    {\n        reset();\n\treturn observable(ko.utils.unwrapObservable(wrap(jsObject, computedFunctions)));\n    }\n\n    exports.fromJSON = function (jsonString, computedFunctions) {\n\tvar parsed = ko.utils.parseJson(jsonString);\n\targuments[0] = parsed;\n\treturn exports.fromJS.apply(this, computedFunctions);\n    };\n    \n    exports.toJS = function (observable) {\n\treturn unwrap(observable);\n    }\n\n    exports.toJSON = function (observable) {\n\tvar plainJavaScriptObject = exports.toJS(observable);\n\treturn ko.utils.stringifyJson(plainJavaScriptObject);\n    };\n\n    function typeOf(value) {\n\tvar s = typeof value;\n\tif (s === 'object') {\n            if (value) {\n                if (value.constructor == Date)\n                    s = 'date';\n\t\telse if (Object.prototype.toString.call(value) == '[object Array]')\n                    s = 'array';\n            } else {\n\t\ts = 'null';\n            }\n\t}\n\treturn s;\n    }\n\n    // unwrapping\n    function unwrapObject(o)\n    {\n\tvar t = {};\n\n\tfor (var k in o)\n\t{\n\t    var v = o[k];\n\n\t    if (ko.isComputed(v))\n\t\tcontinue;\n\n\t    t[k] = unwrap(v);\n\t}\n\n\treturn t;\n    }\n\n    function unwrapArray(a)\n    {\n\tvar r = [];\n\n\tif (!a || a.length == 0)\n\t    return r;\n\t\n\tfor (var i = 0, l = a.length; i < l; ++i)\n\t    r.push(unwrap(a[i]));\n\n\treturn r;\n    }\n\n    function unwrap(v)\n    {\n\tvar isObservable = ko.isObservable(v);\n\n\tif (isObservable)\n\t{\n\t    var val = v();\n\n\t    return unwrap(val);\n\t}\n\telse\n\t{\n\t    if (typeOf(v) == \"array\")\n\t    {\n\t\treturn unwrapArray(v);\n\t    }\n\t    else if (typeOf(v) == \"object\")\n\t    {\n\t\treturn unwrapObject(v);\n\t    }\n\t    else\n\t    {\n\t\treturn v;\n\t    }\n\t}\n    }\n\n    function reset()\n    {\n        parents = [{obj: null, wrapped: null, lvl: \"\"}];\n    }    \n    \n    // wrapping\n\n    function wrapObject(o, computedFunctions)\n    {\n        // check for infinite recursion\n        for (var i = 0; i < parents.length; ++i) {\n            if (parents[i].obj === o) {\n                return parents[i].wrapped;\n            }\n        }\n\n\tvar t = {};\n\n\tfor (var k in o)\n\t{\n\t    var v = o[k];\n\n            parents.push({obj: o, wrapped: t, lvl: currentLvl() + \"/\" + k});\n\n\t    t[k] = wrap(v, computedFunctions);\n\n            parents.pop();\n\t}\n\n\tif (computedFunctions && computedFunctions[currentLvl()])\n\t    t = computedFunctions[currentLvl()](t);\n\n        if (hasES5Plugin())\n            ko.track(t);\n\n\treturn t;\n    }\n\n    function wrapArray(a, computedFunctions)\n    {\n\tvar r = ko.observableArray();\n\n\tif (!a || a.length == 0)\n\t    return r;\n\n\tfor (var i = 0, l = a.length; i < l; ++i)\n\t    r.push(wrap(a[i], computedFunctions));\n\n\treturn r;\n    }\n\n    // a stack, used for two purposes:\n    //  - circular reference checking\n    //  - computed functions\n    var parents;\n\n    function currentLvl()\n    {\n\treturn parents[parents.length-1].lvl;\n    }\n\n    function wrap(v, computedFunctions)\n    {\n\tif (typeOf(v) == \"array\")\n\t{\n\t    return wrapArray(v, computedFunctions);\n\t}\n\telse if (typeOf(v) == \"object\")\n\t{\n\t    return wrapObject(v, computedFunctions);\n\t}\n\telse\n\t{\n            if (!hasES5Plugin() && typeof v !== 'function')\n            {\n\t        var t = ko.observable();\n\t        t(v);\n\t        return t;\n            } else\n                return v;\n\t}\n    }\n\n    function hasES5Plugin()\n    {\n        return ko.track != null;\n    }\n}));",
    "'use strict';\n\nvar core = {};\ncore.InventoryViewModel = require(\"./inventory/InventoryViewModel\");\ncore.AbilityModel = require(\"./AbilityModel\");\ncore.BuffViewModel = require(\"./BuffViewModel\");\ncore.HeroModel = require(\"./hero/HeroModel\");\ncore.CloneModel = require(\"./hero/CloneModel\");\ncore.UnitModel = require(\"./hero/UnitModel\");\ncore.IllusionModel = require(\"./hero/IllusionModel\");\ncore.Data = require(\"./data/main\");\ncore.Util = require(\"./util/main\");\n\ncore.init = function (HERODATA_PATH, ITEMDATA_PATH, UNITDATA_PATH, callback) {\n    core.Data.init(HERODATA_PATH, ITEMDATA_PATH, UNITDATA_PATH, function () {\n        core.HeroOptions = require(\"./hero/heroOptionsArray\").init(core.Data.heroData);\n        core.BuffOptions = require(\"./buffs/buffOptionsArray\").init(core.Data.heroData, core.Data.unitData);\n        core.DebuffOptions = require(\"./buffs/debuffOptionsArray\").init(core.Data.heroData, core.Data.unitData);\n        core.ItemOptions = require(\"./inventory/itemOptionsArray\").init(core.Data.itemData);\n        core.ItemBuffOptions = require(\"./inventory/itemBuffOptions\").init(core.Data.itemData);\n        core.ItemDebuffOptions = require(\"./inventory/itemDebuffOptions\").init(core.Data.itemData);\n        callback();\n    });\n}\n\nmodule.exports = core;",
    "var extend = function (out) {\n    out = out || {};\n\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n\n        if (!obj)\n            continue;\n\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                if (typeof obj[key] === 'object')\n                    out[key] = extend(out[key], obj[key]);\n                else\n                    out[key] = obj[key];\n            }\n        }\n    }\n\n    return out;\n};\n\nmodule.exports = extend;",
    "var findWhere = function (arr, obj) {\n    arrLoop: for (var i = 0; i < arr.length; i++) {\n        objLoop: for (var key in obj) {\n            if (arr[i][key] != obj[key]) {\n                continue arrLoop;\n            }\n        }\n        return arr[i];\n    }\n}\n\nmodule.exports = findWhere;",
    "\"use strict\";\n\nvar getJSON = function (url, successCallback, errorCallback) {\n    var request = new XMLHttpRequest();\n    request.open('GET', url, true);\n\n    request.onload = function() {\n        if (request.status >= 200 && request.status < 400) {\n            // Success!\n            var data = JSON.parse(request.responseText);\n            successCallback(data);\n        } else {\n            // We reached our target server, but it returned an error\n            errorCallback();\n        }\n    };\n\n    request.onerror = function() {\n        // There was a connection error of some sort\n        errorCallback();\n    };\n\n    request.send();\n}\n\nmodule.exports = getJSON;",
    "var isEmpty = function (obj) {\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n}\n\nmodule.exports = isEmpty;",
    "var isString = function (myVar) {\n    return typeof myVar === 'string' || myVar instanceof String;\n}\n\nmodule.exports = isString;",
    "'use strict';\n\nvar util = {};\nutil.extend = require(\"./extend\");\nutil.findWhere = require(\"./findWhere\");\nutil.getJSON = require(\"./getJSON\");\nutil.union = require(\"./union\");\nutil.uniqueId = require(\"./uniqueId\");\nutil.uniques = require(\"./uniques\");\n\nmodule.exports = util;",
    "\"use strict\";\nvar uniques = require(\"./uniques\");\n\nvar union = function (a, b) {\n    var arr = a.concat(b);\n    return uniques(arr);\n}\n\nmodule.exports = union;",
    "\"use strict\";\n\nvar idCounter = 0;\nvar uniqueId = function (prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n};\n\nmodule.exports = uniqueId;",
    "\"use strict\";\nvar uniques = function (arr) {\n    var a = [];\n    for (var i=0, l=arr.length; i<l; i++)\n        if (a.indexOf(arr[i]) === -1 && arr[i] !== '')\n            a.push(arr[i]);\n    return a;\n}\n\nmodule.exports = uniques;",
    "require(\"./app/polyfill\");\nvar $ = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\nvar getParameterByName = require(\"./app/getParameterByName\");\nvar HeroCalc = require(\"./herocalc/main\");\nvar HeroCalculatorViewModel;\nvar viewModel;\n\nvar App = function (appConfig) {\n    \n    HeroCalc.init(HeroCalcData.heroData, HeroCalcData.itemData, HeroCalcData.unitData, function () {\n        HeroCalculatorViewModel = require('./app/HeroCalculatorViewModel');\n        viewModel = new HeroCalculatorViewModel(appConfig.abilityTooltipPath);\n        ko.options.deferUpdates = true;\n        ko.applyBindings(viewModel);\n        $('#spinner').hide();\n        $('.initial-hidden').css('display', 'inline-block');\n        $('#popHero0').addClass('active');\n        $('#heroPane0').addClass('active');\n        $('[data-toggle=\"tooltip\"]').tooltip();\n        var saveId = getParameterByName('id');\n        if (saveId) {\n            $.get('save/' + saveId + '.json', function (data) {\n                viewModel.load(data);\n            });\n        }\n    });\n\n    var lastUpdate = \"2017-07-14 13:21:46 UTC\";\n    $('#last-update').text(lastUpdate);\n\n    var rollbar = require('./rollbar');\n\n    $('.error-warning-view, .error-warning-close').click(function () {\n        $('.error-warning').fadeOut(200);\n    });\n\n    var userActions = [];\n    function addUserAction(o) {\n        if (userActions.length > 10) {\n            userActions.shift();\n        }\n        userActions.push(o);\n    }\n\n    function actionTrackWrapper(func, eventName) {\n        return function() {\n            var el = this;\n            var data = {\n                eventName: eventName\n            };\n            if (el.id) data.id = el.id;\n            if (el.src) data.src = el.src;\n            if (el.className) data.className = el.className;\n            if (el.textContent) data.textContent = el.textContent;\n            if (el.nodeName) data.nodeName = el.nodeName;\n            if (el.getAttribute('data-bind')) data['data-bind'] = el.getAttribute('data-bind');\n            \n            for (var property in data) {\n                if (data.hasOwnProperty(property)) {\n                    data[property] = data[property].substring(0, Math.min(200, data[property].length));\n                }\n            }\n            addUserAction(data);\n            return func.apply(this, arguments);\n        }\n    }\n\n    function callbackWrap(object, property, argumentIndex, wrapperFactory, eventFilter) {\n        var original = object[property];\n        object[property] = function() {\n            if (eventFilter.indexOf(arguments[0]) != -1) {\n                arguments[argumentIndex] = wrapperFactory(arguments[argumentIndex], arguments[0]);\n            }\n            return original.apply(this, arguments);\n        }\n        return original;\n    }\n\n    callbackWrap(Element.prototype, \"addEventListener\", 1, actionTrackWrapper, ['click', 'focus', 'blur', 'change', 'dblclick'])\n\n    window.onerror = (function (old) {\n        return function () {\n            var payload = {};\n            var logEl = document.querySelector('#log');\n\n            if (logEl) {\n                try {\n                    var msg = arguments[0];\n                    var el = document.createElement('div');\n                    el.classList.add('alert');\n                    el.classList.add('alert-danger');\n                    el.classList.add('error-log');\n                    el.classList.add('col-md-12');\n                    el.textContent = 'error: ' + msg;\n                    \n                    var closeBtn = document.createElement('div');\n                    closeBtn.classList.add('error-log-close');\n                    closeBtn.innerHTML = \"&times;\";\n                    closeBtn.onclick = function () {\n                        logEl.removeChild(el);\n                    }\n                    el.appendChild(closeBtn);\n                    \n                    var reportEl = document.createElement('a');\n                    reportEl.classList.add('error-log-link');\n                    reportEl.innerHTML = \"Send error report\";\n                    reportEl.href = \"#\"\n                    reportEl.onclick = function () {\n                        $('#myModal').modal('show');\n                        $('#BugReportFormText').text('error: ' + msg + '\\n\\nDescribe what you were doing. Try to be as detailed as possible.');\n                    }\n                    el.appendChild(reportEl);\n                    \n                    logEl.appendChild(el);\n                    \n                    $('.error-warning').fadeOut(200).fadeIn(100);\n                }\n                catch (e) {\n                    rollbar.error(\"window.onerror create error log failed.\", e);\n                }\n            }\n            else {\n                payload.clientLogCreated = false;\n            }\n\n            if (HeroCalculatorViewModel && viewModel) {\n                try {\n                    payload.heroCalcState = viewModel.getSaveData();\n                }\n                catch (e) {\n                    rollbar.error(\"window.onerror getSaveData failed.\", e);\n                }\n                try {\n                    payload.appState = viewModel.getAppState();\n                }\n                catch (e) {\n                    rollbar.error(\"window.onerror getAppState failed.\", e);\n                }\n            }\n            else {\n                payload.appState = \"load failed\"\n            }\n            payload.userActions = userActions;\n            rollbar.configure({\n              payload: {custom: payload}\n            });\n            \n            return old.apply(this, arguments);\n        }\n    })(window.onerror);\n    \n};\n\nmodule.exports = App;",
    "var Chart = require('chart.js');\nChart.types.Line.extend({\n    // Passing in a name registers this chart in the Chart namespace in the same way\n    name: \"Scatter\",\n    draw : function(ease){\n            var easingDecimal = ease || 1;\n            this.clear();\n\n            var ctx = this.chart.ctx;\n\n            // Some helper methods for getting the next/prev points\n            var hasValue = function(item){\n                return item.value !== null;\n            },\n            nextPoint = function(point, collection, index){\n                return Chart.helpers.findNextWhere(collection, hasValue, index) || point;\n            },\n            previousPoint = function(point, collection, index){\n                return Chart.helpers.findPreviousWhere(collection, hasValue, index) || point;\n            };\n\n            this.scale.draw(easingDecimal);\n\n\n            Chart.helpers.each(this.datasets,function(dataset){\n                var pointsWithValues = Chart.helpers.where(dataset.points, hasValue);\n\n                //Transition each point first so that the line and point drawing isn't out of sync\n                //We can use this extra loop to calculate the control points of this dataset also in this loop\n\n                Chart.helpers.each(dataset.points, function(point, index){\n                    if (point.hasValue()){\n                        point.transition({\n                            y : this.scale.calculateY(point.value),\n                            x : this.scale.calculateX(index)\n                        }, easingDecimal);\n                    }\n                },this);\n\n\n                // Control points need to be calculated in a seperate loop, because we need to know the current x/y of the point\n                // This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n                if (this.options.bezierCurve){\n                    Chart.helpers.each(pointsWithValues, function(point, index){\n                        var tension = (index > 0 && index < pointsWithValues.length - 1) ? this.options.bezierCurveTension : 0;\n                        point.controlPoints = Chart.helpers.splineCurve(\n                            previousPoint(point, pointsWithValues, index),\n                            point,\n                            nextPoint(point, pointsWithValues, index),\n                            tension\n                        );\n\n                        // Prevent the bezier going outside of the bounds of the graph\n\n                        // Cap puter bezier handles to the upper/lower scale bounds\n                        if (point.controlPoints.outer.y > this.scale.endPoint){\n                            point.controlPoints.outer.y = this.scale.endPoint;\n                        }\n                        else if (point.controlPoints.outer.y < this.scale.startPoint){\n                            point.controlPoints.outer.y = this.scale.startPoint;\n                        }\n\n                        // Cap inner bezier handles to the upper/lower scale bounds\n                        if (point.controlPoints.inner.y > this.scale.endPoint){\n                            point.controlPoints.inner.y = this.scale.endPoint;\n                        }\n                        else if (point.controlPoints.inner.y < this.scale.startPoint){\n                            point.controlPoints.inner.y = this.scale.startPoint;\n                        }\n                    },this);\n                }\n\n                if (this.options.datasetFill && pointsWithValues.length > 0){\n                    //Round off the line by going to the base of the chart, back to the start, then fill.\n                    ctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n                    ctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n                    ctx.fillStyle = dataset.fillColor;\n                    ctx.closePath();\n                    ctx.fill();\n                }\n\n                //Now draw the points over the line\n                //A little inefficient double looping, but better than the line\n                //lagging behind the point positions\n                Chart.helpers.each(pointsWithValues,function(point){\n                    point.draw();\n                });\n            },this);\n        }\n});",
    "var Rollbar = require(\"rollbar-browser\");\n\nvar rollbarConfig = {\n    accessToken: \"de1980fcab4849d6a7a066cf098a6521\",\n    captureUncaught: true,\n    payload: {\n        environment: \"development\",\n        client: {\n            javascript: {\n                source_map_enabled: true,\n                code_version: \"f580a6e01930cc3500464d697f9f13b3c84343c7\",\n                // Optionally have Rollbar guess which frames the error was thrown from\n                // when the browser does not provide line and column numbers.\n                guess_uncaught_frames: true\n            }\n        }\n    }\n};\n\nvar rollbar = Rollbar.init(rollbarConfig);\n\nmodule.exports = rollbar;"
  ]
}