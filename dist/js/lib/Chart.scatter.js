define(["chartjs"],function(t){t.types.Line.extend({name:"Scatter",draw:function(e){var n=e||1;this.clear();var i=this.chart.ctx,s=function(t){return null!==t.value},o=function(e,n,i){return t.helpers.findNextWhere(n,s,i)||e},l=function(e,n,i){return t.helpers.findPreviousWhere(n,s,i)||e};this.scale.draw(n),t.helpers.each(this.datasets,function(e){var r=t.helpers.where(e.points,s);t.helpers.each(e.points,function(t,e){t.hasValue()&&t.transition({y:this.scale.calculateY(t.value),x:this.scale.calculateX(e)},n)},this),this.options.bezierCurve&&t.helpers.each(r,function(e,n){var i=n>0&&n<r.length-1?this.options.bezierCurveTension:0;e.controlPoints=t.helpers.splineCurve(l(e,r,n),e,o(e,r,n),i),e.controlPoints.outer.y>this.scale.endPoint?e.controlPoints.outer.y=this.scale.endPoint:e.controlPoints.outer.y<this.scale.startPoint&&(e.controlPoints.outer.y=this.scale.startPoint),e.controlPoints.inner.y>this.scale.endPoint?e.controlPoints.inner.y=this.scale.endPoint:e.controlPoints.inner.y<this.scale.startPoint&&(e.controlPoints.inner.y=this.scale.startPoint)},this),this.options.datasetFill&&r.length>0&&(i.lineTo(r[r.length-1].x,this.scale.endPoint),i.lineTo(r[0].x,this.scale.endPoint),i.fillStyle=e.fillColor,i.closePath(),i.fill()),t.helpers.each(r,function(t){t.draw()})},this)}})});