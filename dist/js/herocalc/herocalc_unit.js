define(["require","exports","module","herocalc_knockout","./herocalc_core"],function(e,t,i){"use strict";var a=e("herocalc_knockout"),n=e("./herocalc_core").HEROCALCULATOR;n.prototype.UnitOption=function(e,t,i,n,o){this.heroName=a.computed(function(){return i>0?e+(o()<=i?o():1):e}),this.heroDisplayName=t,this.image=n,this.levels=i},n.prototype.UnitViewModel=function(e,t){var i=new n.prototype.HeroCalculatorModel(0);return i.parent=t,i.selectedUnitLevel=a.observable(1),i.availableUnits=a.observableArray([new n.prototype.UnitOption("npc_dota_lone_druid_bear","Lone Druid Spirit Bear",4,"/media/images/units/spirit_bear.png",i.selectedUnitLevel),new n.prototype.UnitOption("npc_dota_brewmaster_earth_","Brewmaster Earth Warrior",3,"/media/images/units/npc_dota_brewmaster_earth.png",i.selectedUnitLevel),new n.prototype.UnitOption("npc_dota_brewmaster_fire_","Brewmaster Fire Warrior",3,"/media/images/units/npc_dota_brewmaster_fire.png",i.selectedUnitLevel),new n.prototype.UnitOption("npc_dota_brewmaster_storm_","Brewmaster Storm Warrior",3,"/media/images/units/npc_dota_brewmaster_storm.png",i.selectedUnitLevel),new n.prototype.UnitOption("npc_dota_necronomicon_archer_","Necronomicon Archer",3,"/media/images/units/npc_dota_necronomicon_archer.png",i.selectedUnitLevel),new n.prototype.UnitOption("npc_dota_necronomicon_warrior_","Necronomicon Warrior",3,"/media/images/units/npc_dota_necronomicon_warrior.png",i.selectedUnitLevel),new n.prototype.UnitOption("npc_dota_lycan_wolf","Lycan Wolf",4,"/media/images/units/npc_dota_lycan_wolf.png",i.selectedUnitLevel),new n.prototype.UnitOption("npc_dota_visage_familiar","Visage Familiar",3,"/media/images/units/npc_dota_visage_familiar.png",i.selectedUnitLevel)]),i.selectedUnit=a.observable(i.availableUnits()[e]),i.selectedUnit.subscribe(function(e){-1!=e.heroName().indexOf("npc_dota_lone_druid_bear")?(i.inventory.hasInventory(!0),i.inventory.items.removeAll(),i.inventory.activeItems.removeAll()):(i.inventory.hasInventory(!1),i.inventory.items.removeAll(),i.inventory.activeItems.removeAll())}),i.hero=a.computed(function(){return a.mapping.fromJS(n.prototype.unitData[i.selectedUnit().heroName()])}),i.heroData=a.computed(function(){return n.prototype.unitData[i.selectedUnit().heroName()]}),i.getAbilityLevelMax=function(e){return"DOTA_ABILITY_TYPE_ATTRIBUTES"==e.abilitytype()?10:"necronomicon_archer_mana_burn"==e.name()||"necronomicon_archer_aoe"==e.name()||"necronomicon_warrior_mana_burn"==e.name()||"necronomicon_warrior_last_will"==e.name()?3:"necronomicon_warrior_sight"==e.name()?1:4},i.ability=a.computed(function(){var e=new n.prototype.AbilityModel(a.mapping.fromJS(n.prototype.unitData[i.selectedUnit().heroName()].abilities));switch(e.hasScepter=i.inventory.hasScepter,i.selectedUnit().heroName()){case"npc_dota_necronomicon_archer_1":case"npc_dota_necronomicon_warrior_1":e.abilities()[0].level(1),e.abilities()[1].level(1);break;case"npc_dota_necronomicon_archer_2":case"npc_dota_necronomicon_warrior_2":e.abilities()[0].level(2),e.abilities()[1].level(2);break;case"npc_dota_necronomicon_archer_3":e.abilities()[0].level(3),e.abilities()[1].level(3);break;case"npc_dota_necronomicon_warrior_3":e.abilities()[0].level(3),e.abilities()[1].level(3),e.abilities()[2].level(1)}return e.levelUpAbility=function(t,i,a,n){switch(e.abilities()[t()].name()){case"necronomicon_archer_mana_burn":case"necronomicon_archer_aoe":case"necronomicon_warrior_mana_burn":case"necronomicon_warrior_last_will":case"necronomicon_warrior_sight":break;default:e.abilities()[t()].level()<n.getAbilityLevelMax(i)&&e.abilities()[t()].level(e.abilities()[t()].level()+1)}},e.levelDownAbility=function(t,i,a,n){switch(e.abilities()[t()].name()){case"necronomicon_archer_mana_burn":case"necronomicon_archer_aoe":case"necronomicon_warrior_mana_burn":case"necronomicon_warrior_last_will":case"necronomicon_warrior_sight":break;default:e.abilities()[t()].level()>0&&e.abilities()[t()].level(e.abilities()[t()].level()-1)}},e}),i.primaryAttribute=a.computed(function(){var e=0;return"DOTA_ATTRIBUTE_AGILITY"==e?"agi":"DOTA_ATTRIBUTE_INTELLECT"==e?"int":"DOTA_ATTRIBUTE_STRENGTH"==e?"str":""}),i.totalAttribute=function(e){return"agi"==e?parseFloat(i.totalAgi()):"int"==e?parseFloat(i.totalInt()):"str"==e?parseFloat(i.totalStr()):0},i.totalAgi=a.computed(function(){return(n.prototype.unitData[i.selectedUnit().heroName()].attributebaseagility+n.prototype.unitData[i.selectedUnit().heroName()].attributeagilitygain*(i.selectedHeroLevel()-1)+2*i.ability().getAttributeBonusLevel()+i.ability().getAgility()+i.enemy().ability().getAllStatsReduction()+i.debuffs.getAllStatsReduction()).toFixed(2)}),i.totalInt=a.computed(function(){return(n.prototype.unitData[i.selectedUnit().heroName()].attributebaseintelligence+n.prototype.unitData[i.selectedUnit().heroName()].attributeintelligencegain*(i.selectedHeroLevel()-1)+2*i.ability().getAttributeBonusLevel()+i.ability().getIntelligence()+i.enemy().ability().getAllStatsReduction()+i.debuffs.getAllStatsReduction()).toFixed(2)}),i.totalStr=a.computed(function(){return(n.prototype.unitData[i.selectedUnit().heroName()].attributebasestrength+n.prototype.unitData[i.selectedUnit().heroName()].attributestrengthgain*(i.selectedHeroLevel()-1)+2*i.ability().getAttributeBonusLevel()+i.ability().getStrength()+i.enemy().ability().getAllStatsReduction()+i.debuffs.getAllStatsReduction()).toFixed(2)}),i.baseDamage=a.computed(function(){return[Math.floor(n.prototype.unitData[i.selectedUnit().heroName()].attackdamagemin+i.totalAttribute(i.primaryAttribute())+i.ability().getBaseDamage().total),Math.floor(n.prototype.unitData[i.selectedUnit().heroName()].attackdamagemax+i.totalAttribute(i.primaryAttribute())+i.ability().getBaseDamage().total)]}),i.totalMagicResistanceProduct=a.computed(function(){return(1-n.prototype.unitData[i.selectedUnit().heroName()].magicalresistance/100)*(1-i.inventory.getMagicResist()/100)*(1-i.ability().getMagicResist()/100)*(1-i.buffs.getMagicResist()/100)*i.enemy().inventory.getMagicResistReduction()*i.enemy().ability().getMagicResistReduction()*i.debuffs.getMagicResistReduction()}),i.totalMagicResistance=a.computed(function(){return 1-i.totalMagicResistanceProduct()}),i.bat=a.computed(function(){var e=i.ability().getBAT();return e>0?e:n.prototype.unitData[i.selectedUnit().heroName()].attackrate}),i.attackTime=a.computed(function(){return(i.bat()/(1+i.ias()/100)).toFixed(2)}),i.attacksPerSecond=a.computed(function(){return(1+i.ias()/100)/i.bat()}),i.evasion=a.computed(function(){var e=i.ability().setEvasion();return e?(100*e).toFixed(2)+"%":(100*(1-i.inventory.getEvasion()*i.ability().getEvasion())).toFixed(2)+"%"}),i.ehpPhysical=a.computed(function(){return(i.health()*(1+.06*i.totalArmorPhysical())/(1-(1-i.inventory.getEvasion()*i.ability().getEvasion()))).toFixed(2)}),i.ehpMagical=a.computed(function(){return(i.health()/i.totalMagicResistanceProduct()).toFixed(2)}),i}});
//# sourceMappingURL=herocalc_unit.js.map