define(["require","exports","module","herocalc_knockout","./herocalc_core"],function(e,i,t){"use strict";var a=e("herocalc_knockout"),l=e("./herocalc_core").HEROCALCULATOR;l.prototype.AbilityModel=function(e,i){var t=this;t.hero=i,t.abilityData=l.prototype.abilityData,t.hasScepter=a.observable(!1),t.isShapeShiftActive=a.observable(!1),t.abilities=e;for(var s=0;s<t.abilities().length;s++)t.abilities()[s].isActive=a.observable(!1),t.abilities()[s].isDetail=a.observable(!1),t.abilities()[s].baseDamage=a.observable(0),t.abilities()[s].baseDamageReductionPct=a.observable(0),t.abilities()[s].baseDamageMultiplier=a.observable(0),t.abilities()[s].bash=a.observable(0),t.abilities()[s].bashBonusDamage=a.observable(0),t.abilities()[s].bonusDamage=a.observable(0),t.abilities()[s].bonusDamageOrb=a.observable(0),t.abilities()[s].bonusDamagePct=a.observable(0),t.abilities()[s].bonusDamagePrecisionAura=a.observable(0),t.abilities()[s].bonusDamageReduction=a.observable(0),t.abilities()[s].bonusHealth=a.observable(0),t.abilities()[s].bonusStrength=a.observable(0),t.abilities()[s].bonusStrength2=a.observable(0),t.abilities()[s].bonusAgility=a.observable(0),t.abilities()[s].bonusAgility2=a.observable(0),t.abilities()[s].bonusInt=a.observable(0),t.abilities()[s].bonusAllStatsReduction=a.observable(0),t.abilities()[s].damageAmplification=a.observable(0),t.abilities()[s].damageReduction=a.observable(0),t.abilities()[s].evasion=a.observable(0),t.abilities()[s].magicResist=a.observable(0),t.abilities()[s].manaregen=a.observable(0),t.abilities()[s].manaregenreduction=a.observable(0),t.abilities()[s].missChance=a.observable(0),t.abilities()[s].movementSpeedFlat=a.observable(0),t.abilities()[s].movementSpeedPct=a.observable(0),t.abilities()[s].movementSpeedPctReduction=a.observable(0),t.abilities()[s].turnRateReduction=a.observable(0),t.abilities()[s].attackrange=a.observable(0),t.abilities()[s].attackspeed=a.observable(0),t.abilities()[s].attackspeedreduction=a.observable(0),t.abilities()[s].armor=a.observable(0),t.abilities()[s].armorReduction=a.observable(0),t.abilities()[s].healthregen=a.observable(0),t.abilities()[s].lifesteal=a.observable(0),t.abilities()[s].visionnight=a.observable(0),t.abilities()[s].visionday=a.observable(0);t.abilityControlData={},t.abilitySettingsData=function(e,i,a){return void 0==t.abilityControlData[e]?t.processAbility(e,i,a,t.abilityData[e]):t.abilityControlData[e]},t.processAbility=function(e,i,l,s){var r={};r.data=[];for(var n,b=[],o=0;o<s.length;o++)switch(s[o].controlType){case"input":n=a.observable(0).extend({numeric:2}),n.controlValueType=s[o].controlValueType,b.push(n),r.data.push({labelName:s[o].label.toUpperCase()+":",controlVal:n,controlType:s[o].controlType,display:s[o].display});break;case"checkbox":n=a.observable(!1),n.controlValueType=s[o].controlValueType,b.push(n),r.data.push({labelName:s[o].label.toUpperCase()+"?",controlVal:n,controlType:s[o].controlType,display:s[o].display});break;case"radio":n=a.observable(s[o].controlOptions[0].value),n.controlValueType=s[o].controlValueType,b.push(n),r.data.push({labelName:s[o].label.toUpperCase()+"?",controlVal:n,controlType:s[o].controlType,display:s[o].display,controlOptions:s[o].controlOptions});break;case"method":case"text":if(void 0==s[o].controls){if(s[o].noLevel)var u=function(i){return{fn:a.computed(function(){var a=t.abilities().find(function(i){return i.name()==e});return t.getAbilityAttributeValue(a.attributes(),i,0)})}};else var u=function(i){return{fn:a.computed(function(){var a=t.abilities().find(function(i){return i.name()==e});return t.getAbilityAttributeValue(a.attributes(),i,a.level())})}};var c=u(s[o].attributeName),v=t.getComputedFunction(n,c.fn,s[o].fn,i,l,t,s[o].returnProperty,void 0,e);if(s[o].ignoreTooltip)var m=s[o].label||s[o].attributeName;else var m=t.getAbilityAttributeTooltip(t.abilities()[l].attributes(),s[o].attributeName)||s[o].label||s[o].attributeName;r.data.push({labelName:m.toUpperCase(),controlVal:v,controlType:s[o].controlType,display:s[o].display,clean:c.fn})}else{if(s[o].noLevel)var u=function(e){return{fn:a.computed(function(){return t.getAbilityAttributeValue(t.abilities()[l].attributes(),e,0)})}};else var u=function(e){return{fn:a.computed(function(){return t.getAbilityAttributeValue(t.abilities()[l].attributes(),e,t.abilities()[l].level())})}};var c=u(s[o].attributeName),v=t.getComputedFunction(b,c.fn,s[o].fn,i,l,t,s[o].returnProperty,s[o].controls,e);if(s[o].ignoreTooltip)var m=s[o].label||s[o].attributeName;else var m=t.getAbilityAttributeTooltip(t.abilities()[l].attributes(),s[o].attributeName)||s[o].label||s[o].attributeName;r.data.push({labelName:m.toUpperCase(),controlVal:v,controlType:s[o].controlType,display:s[o].display,clean:c.fn})}"method"==s[o].controlType&&b.push(v)}return t.abilityControlData[e]=r,r},t.getComputedFunction=function(e,i,t,l,s,r,n,b,o){var u=r.abilities().find(function(e){return e.name()==o});return a.pureComputed(function(){var a;if(void 0==b)a=void 0==e?e:"boolean"==typeof e()?e():void 0==e.controlValueType?parseFloat(e()):"string"==e.controlValueType?e():parseFloat(e());else{for(var o=[],c=0;c<b.length;c++)switch(typeof e[b[c]]()){case"boolean":case"object":o.push(e[b[c]]());break;default:o.push(parseFloat(e[b[c]]()))}a=o}var v=t.call(this,a,i(),l,s,r,u);return void 0!=n&&u[n](v),v},this)},t.getAbilityAttributeValue=function(e,i,t){for(var a=0;a<e.length;a++)if(e[a].name()==i)return 0==t?parseFloat(e[a].value()[0]):t>e[a].value().length?parseFloat(e[a].value()[0]):parseFloat(e[a].value()[t-1])},t.getAbilityAttributeTooltip=function(e,i){for(var t=0;t<e.length;t++)if(e[t].name()==i){if(e[t].hasOwnProperty("tooltip")){var a=e[t].tooltip().replace(/\\n/g,"");return a}return""}return""},t.getAbilityLevelByAbilityName=function(e){for(var i=0;i<t.abilities().length;i++)if(t.abilities()[i].name()==e)return t.abilities()[i].level();return-1},t.getAbilityByName=function(e){for(var i=0;i<t.abilities().length;i++)if(t.abilities()[i].name()==e)return t.abilities()[i]},t.getAbilityPropertyValue=function(e,i){return parseFloat(e[i]()[e.level()-1])},t.getAttributeBonusLevel=function(){for(var e=0;e<t.abilities().length;e++)if("attribute_bonus"==t.abilities()[e].name())return t.abilities()[e].level();return 0},t.getAllStatsReduction=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.bonusAllStatsReduction&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.bonusAllStatsReduction());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){t.abilities()[i].attributes()[l]}}return e}),t.getStrengthReduction=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.bonusStrength&&"undying_decay"==a.name()&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e-=a.bonusStrength());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){t.abilities()[i].attributes()[l]}}return e}),t.getStrength=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.bonusStrength&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")||"invoker_quas"==a.name())&&(e+=a.bonusStrength()),void 0!=a.bonusStrength2&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.bonusStrength2());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){t.abilities()[i].attributes()[l]}}return e}),t.getAgility=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.bonusAgility&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")||"invoker_wex"==a.name())&&(e+=a.bonusAgility()),void 0!=a.bonusAgility2&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.bonusAgility2());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"marksmanship_agility_bonus":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())}}}return e}),t.getIntelligence=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.bonusInt&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")||"invoker_exort"==a.name())&&(e+=a.bonusInt());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];s.name()}}return e}),t.getArmor=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.armor&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.armor());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"bonus_armor":"templar_assassin_meld"!=a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"warcry_armor":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level());break;case"armor_bonus":("lich_frost_armor"==a.name()||"ogre_magi_frost_armor"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()))}}}return e}),t.getArmorBaseReduction=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))switch(a.name()){case"elder_titan_natural_order":e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),"armor_reduction_pct",a.level())/100}}return e}),t.getArmorReduction=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.armorReduction&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.armorReduction());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))switch(a.name()){case"templar_assassin_meld":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),"bonus_armor",a.level());break;case"tidehunter_gush":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),"armor_bonus",a.level());break;case"naga_siren_rip_tide":case"slardar_amplify_damage":case"vengefulspirit_wave_of_terror":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),"armor_reduction",a.level());break;case"nevermore_dark_lord":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),"presence_armor_reduction",a.level())}}return e}),t.getHealth=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.bonusHealth&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.bonusHealth());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"bonus_hp":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level());break;case"true_form_hp_bonus":t.isTrueFormActive()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()))}}}return e}),t.isTrueFormActive=function(){for(var e=0;e<t.abilities().length;e++){var i=t.abilities()[e];if(i.isActive()&&"lone_druid_true_form"==i.name())return!0}return!1},t.getHealthRegen=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.healthregen&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.healthregen());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"bonus_health_regen":case"heath_regen":case"health_regen":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level());break;case"hp_regen":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())}}}return e}),t.getMana=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"bonus_mana":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())}}}return e}),t.getManaRegen=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.manaregen&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.manaregen());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"bonus_mana_regen":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())}}}return e}),t.getManaRegenArcaneAura=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"mana_regen":"crystal_maiden_brilliance_aura"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()))}}}return e}),t.getManaRegenReduction=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.manaregenreduction&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.manaregenreduction());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){t.abilities()[i].attributes()[l]}}return e}),t.getAttackRange=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.attackrange&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.attackrange());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))){for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"attack_range_bonus":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level());break;case"bonus_attack_range":case"bonus_range":"terrorblade_metamorphosis"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())),"troll_warlord_berserkers_rage"==a.name()&&(e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"bonus_range_scepter":"tiny_grow"==a.name()&&t.hasScepter()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"bonus_attack_range_scepter":"enchantress_impetus"==a.name()&&t.hasScepter()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()))}}"lone_druid_true_form"==a.name()&&(e-=422)}else if(a.level()>0&&"enchantress_impetus"==a.name()&&t.hasScepter())for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"bonus_attack_range_scepter":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())}}}return e}),t.getAttackSpeed=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.attackspeed&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.attackspeed());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"attack_speed":case"attackspeed_bonus":case"leap_speedbonus_as":case"attack_speed_bonus":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level());break;case"attack_speed_bonus_pct":("clinkz_strafe"==a.name()||"ursa_overpower"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"speed_bonus":("axe_culling_blade"==a.name()||"necronomicon_archer_aoe"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"attack_speed_pct":"ancient_apparition_chilling_touch"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"bonus_attack_speed":("beastmaster_inner_beast"==a.name()||"lycan_feral_impulse"==a.name()||"lone_druid_rabid"==a.name()||"tiny_grow"==a.name()||"phantom_assassin_phantom_strike"==a.name()||"windrunner_focusfire"==a.name()||"ogre_magi_bloodlust"==a.name()||"centaur_khan_endurance_aura"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()))}}}return e}),t.getAttackSpeedReduction=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.attackspeedreduction&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.attackspeedreduction());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))){for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"attackspeed_slow":case"slow_attack_speed":case"slow_attack_speed_pct":case"overload_attack_slow":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level());break;case"speed_bonus":"omniknight_degen_aura"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"attack_slow":"crystal_maiden_freezing_field"!=a.name()||t.hasScepter()?"tusk_frozen_sigil"==a.name()&&(e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())):e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level());break;case"attack_slow_scepter":"crystal_maiden_freezing_field"==a.name()&&t.hasScepter()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"attack_speed_pct":"faceless_void_time_walk"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"bonus_attackspeed":"bounty_hunter_jinada"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"attack_speed_slow":"brewmaster_thunder_clap"==a.name()&&(e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"slow":"medusa_stone_gaze"==a.name()&&(e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"attackspeed_bonus":e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level());break;case"attack_slow_tooltip":"abaddon_frostmourne"==a.name()&&(e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()))}}"enraged_wildkin_tornado"==a.name()&&(e-=15)}}return e}),t.getBash=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.bash&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e*=1-a.bash()/100);else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"chance":case"proc_chance":e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100}}}return e}),t.getBaseDamage=a.computed(function(){for(var e=0,i=1,a={},l=0;l<t.abilities().length;l++){var s=t.abilities()[l];if(s.name()in t.abilityData)void 0!=s.baseDamageMultiplier&&s.level()>0&&(s.isActive()||-1!=s.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(i+=s.baseDamageMultiplier()/100),void 0!=s.baseDamage&&s.level()>0&&(s.isActive()||-1!=s.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=s.baseDamage(),a[s.name()]={damage:s.baseDamage(),damageType:"physical",displayname:s.displayname()});else if(s.level()>0&&(s.isActive()||-1!=s.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var r=0;r<t.abilities()[l].attributes().length;r++){var n=t.abilities()[l].attributes()[r];switch(n.name()){case"bonus_damage":("tiny_grow"==s.name()||"terrorblade_metamorphosis"==s.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[l].attributes(),n.name(),s.level()),a[s.name()]={damage:t.getAbilityAttributeValue(t.abilities()[l].attributes(),n.name(),s.level()),damageType:"physical",displayname:s.displayname()})}}}return{sources:a,total:e,multiplier:i}}),t.getSelfBaseDamageReductionPct=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"damage_modifier":e*=1+t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100;break;case"focusfire_damage_reduction":t.hasScepter()||(e*=1+t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"focusfire_damage_reduction_scepter":t.hasScepter()&&(e*=1+t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100)}}}return e}),t.getBaseDamageReductionPct=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.baseDamageReductionPct&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e*=1+a.baseDamageReductionPct()/100);else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"bonus_damage_pct":"vengefulspirit_command_aura"==a.name()&&(e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100)}}}return e}),t.getBAT=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"base_attack_time":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())}}}return e}),t.getBonusDamage=a.computed(function(){for(var e=0,i={},a=0;a<t.abilities().length;a++){var l=t.abilities()[a];if(l.name()in t.abilityData)void 0!=l.bonusDamage&&0!=l.bonusDamage()&&l.level()>0&&(l.isActive()||-1!=l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=l.bonusDamage(),i[l.name()]={damage:l.bonusDamage(),damageType:"spectre_desolate"==l.name()?"pure":"physical",displayname:l.displayname()});else if(l.level()>0&&(l.isActive()||-1!=l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))){for(var s=0;s<t.abilities()[a].attributes().length;s++){var r=t.abilities()[a].attributes()[s];switch(r.name()){case"bonus_damage":("broodmother_insatiable_hunger"==l.name()||"luna_lunar_blessing"==l.name()||"templar_assassin_refraction"==l.name()||"templar_assassin_meld"==l.name()||"troll_warlord_berserkers_rage"==l.name()||"lone_druid_true_form_battle_cry"==l.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level()),i[l.name()]={damage:t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level()),damageType:"physical",displayname:l.displayname()});break;case"hero_bonus_damage":e+=t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level()),i[l.name()]={damage:t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level()),damageType:"physical",displayname:l.displayname()}}}"storm_spirit_overload"==l.name()&&(e+=t.getAbilityPropertyValue(l,"damage"),i[l.name()]={damage:t.getAbilityPropertyValue(l,"damage"),damageType:"magic",displayname:l.displayname()})}}return{sources:i,total:e}}),t.getBonusDamagePercent=a.computed(function(){for(var e=0,i={},a=0;a<t.abilities().length;a++){var l=t.abilities()[a];if(l.name()in t.abilityData)void 0!=l.bonusDamagePct&&0!=l.bonusDamagePct()&&l.level()>0&&(l.isActive()||-1!=l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"));else if(l.level()>0&&(l.isActive()||-1!=l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var s=0;s<t.abilities()[a].attributes().length;s++){var r=t.abilities()[a].attributes()[s];switch(r.name()){case"damage_increase_pct":"bloodseeker_bloodrage"==l.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level())/100,i[l.name()]={damage:t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level())/100,damageType:"physical",displayname:l.displayname()});break;case"bonus_damage_pct":("magnataur_empower"==l.name()||"vengefulspirit_command_aura"==l.name()||"alpha_wolf_command_aura"==l.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level())/100,i[l.name()]={damage:t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level())/100,damageType:"physical",displayname:l.displayname()});break;case"gods_strength_damage":"sven_gods_strength"==l.name()&&void 0!=t.hero&&"sven"==t.hero.selectedHero().heroName&&(e+=t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level())/100,i[l.name()]={damage:t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level())/100,damageType:"physical",displayname:l.displayname()});break;case"gods_strength_damage_scepter":"sven_gods_strength"==l.name()&&void 0==t.hero&&(e+=t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level())/100,i[l.name()]={damage:t.getAbilityAttributeValue(t.abilities()[a].attributes(),r.name(),l.level())/100,damageType:"physical",displayname:l.displayname()})}}}return{sources:i,total:e}}),t.getBonusDamageBackstab=a.computed(function(){for(var e=0,i=0,a=[],l=0;l<t.abilities().length;l++){var s=t.abilities()[l];if("riki_backstab"==s.name()&&s.level()>0&&(s.isActive()||-1!=s.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var r=0;r<t.abilities()[l].attributes().length;r++){var n=t.abilities()[l].attributes()[r];switch(n.name()){case"damage_multiplier":e+=t.getAbilityAttributeValue(t.abilities()[l].attributes(),n.name(),s.level()),a.push({damage:t.getAbilityAttributeValue(t.abilities()[l].attributes(),n.name(),s.level()),damageType:"physical",displayname:s.displayname()})}}}return{sources:a,total:[e,i]}}),t.getBonusDamagePrecisionAura=a.computed(function(){for(var e=0,i=0,a=[],l=0;l<t.abilities().length;l++){var s=t.abilities()[l];if("drow_ranger_trueshot"==s.name()&&s.level()>0&&(s.isActive()||-1!=s.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))){for(var r=0;r<t.abilities()[l].attributes().length;r++){var n=t.abilities()[l].attributes()[r];switch(n.name()){case"trueshot_ranged_damage":e+=t.getAbilityAttributeValue(t.abilities()[l].attributes(),n.name(),s.level())/100,a.push({damage:t.getAbilityAttributeValue(t.abilities()[l].attributes(),n.name(),s.level())/100,damageType:"physical",displayname:s.displayname()})}}void 0!=s.bonusDamagePrecisionAura&&(i+=s.bonusDamagePrecisionAura(),a.push({damage:s.bonusDamagePrecisionAura(),damageType:"physical",displayname:s.displayname()}))}}return{sources:a,total:[e,i]}}),t.getBonusDamageReduction=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.bonusDamageReduction&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.bonusDamageReduction());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"enfeeble_attack_reduction":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())}}}return e}),t.getBonusDamageReductionPct=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"damage_modifier":e*=1+t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100;break;case"focusfire_damage_reduction":t.hasScepter()||(e*=1+t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"focusfire_damage_reduction_scepter":t.hasScepter()&&(e*=1+t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100)}}}return e}),t.getDamageAmplification=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];a.name()in t.abilityData&&void 0!=a.damageAmplification&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e*=1+a.damageAmplification()/100)}return e}),t.getDamageReduction=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.damageReduction&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e*=1+a.damageReduction()/100);else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))){for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"damage_increase_pct":"bloodseeker_bloodrage"==a.name()&&(e*=1+t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100)}}"kunkka_ghostship"==a.name()&&(e*=.5)}}return e}),t.getCritSource=a.computed(function(){for(var e={},i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))switch(a.name()){case"phantom_assassin_coup_de_grace":void 0==e[a.name()]?e[a.name()]={chance:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"crit_bonus",a.level())/100,count:1,displayname:a.displayname()}:e[a.name()].count+=1;break;case"brewmaster_drunken_brawler":void 0==e[a.name()]?e[a.name()]={chance:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"crit_multiplier",a.level())/100,count:1,displayname:a.displayname()}:e[a.name()].count+=1;break;case"chaos_knight_chaos_strike":case"lycan_shapeshift":
void 0==e[a.name()]?e[a.name()]={chance:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"crit_multiplier",a.level())/100,count:1,displayname:a.displayname()}:e[a.name()].count+=1;break;case"skeleton_king_mortal_strike":void 0==e[a.name()]?e[a.name()]={chance:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"crit_mult",a.level())/100,count:1,displayname:a.displayname()}:e[a.name()].count+=1;break;case"juggernaut_blade_dance":void 0==e[a.name()]?e[a.name()]={chance:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"blade_dance_crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"blade_dance_crit_mult",a.level())/100,count:1,displayname:a.displayname()}:e[a.name()].count+=1;break;case"alpha_wolf_critical_strike":case"giant_wolf_critical_strike":void 0==e[a.name()]?e[a.name()]={chance:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"crit_mult",a.level())/100,count:1,displayname:a.displayname()}:e[a.name()].count+=1}}return e}),t.getCleaveSource=a.computed(function(){for(var e={},i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))switch(a.name()){case"magnataur_empower":void 0==e[a.name()]?e[a.name()]={radius:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"cleave_radius",a.level()),magnitude:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"cleave_damage_pct",a.level())/100,count:1,displayname:a.displayname()}:e[a.name()].count+=1;break;case"sven_great_cleave":void 0==e[a.name()]?e[a.name()]={radius:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"great_cleave_radius",a.level()),magnitude:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"great_cleave_damage",a.level())/100,count:1,displayname:a.displayname()}:e[a.name()].count+=1;break;case"kunkka_tidebringer":void 0==e[a.name()]?e[a.name()]={radius:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"radius",a.level()),magnitude:1,count:1,displayname:a.displayname()}:e[a.name()].count+=1;break;case"tiny_grow":t.hasScepter()&&(void 0==e[a.name()]?e[a.name()]={radius:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"bonus_cleave_radius_scepter",a.level()),magnitude:t.getAbilityAttributeValue(t.abilities()[i].attributes(),"bonus_cleave_damage_scepter",a.level())/100,count:1,displayname:a.displayname()}:e[a.name()].count+=1)}}return e}),t.getCritChance=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"crit_chance":e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100}}}return e}),t.getEvasion=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"bonus_evasion":case"dodge_chance":e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100}}}return e}),t.getEvasionBacktrack=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"dodge_chance_pct":e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100}}}return e}),t.getMissChance=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.missChance&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e*=1-a.missChance()/100);else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"miss_chance":case"miss_rate":e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100}}}return e}),t.getLifesteal=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.lifesteal&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.lifesteal());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"vampiric_aura":case"lifesteal_pct":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())}}}return e}),t.getMagicResist=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.magicResist&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e*=1-a.magicResist()/100);else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"spell_shield_resistance":e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100;break;case"magic_resistance_pct":"phantom_lancer_phantom_edge"==a.name()&&(e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"magic_damage_reduction_pct":"rubick_null_field"==a.name()&&(e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100)}}}return e}),t.getMagicResistReduction=a.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"spell_resist_pct":case"bonus_spell_damage_pct":case"resist_debuff":e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100;break;case"magic_resistance_pct":e*=1-t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100}}}return e}),t.getMovementSpeedFlat=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.movementSpeedFlat&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.movementSpeedFlat());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"bonus_movespeed":"alchemist_chemical_rage"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"bonus_movement_speed":"tiny_grow"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"bonus_move_speed":"troll_warlord_berserkers_rage"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level()));break;case"speed_loss":e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())}}}return e}),t.getMovementSpeedPercent=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.movementSpeedPct&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.movementSpeedPct()/100);else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"move_speed_pct":case"bonus_move_speed_pct":case"leap_speedbonus":case"warcry_movespeed":case"move_speed_bonus_pct":case"movespeed_bonus_pct":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100;break;case"bonus_movespeed":("broodmother_spin_web"==a.name()||"spectre_spectral_dagger"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"speed_bonus":("axe_culling_blade"==a.name()||"necronomicon_archer_aoe"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"movement_speed":"nyx_assassin_vendetta"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"bonus_movespeed_pct":"spirit_breaker_empowering_haste"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"bonus_movement_speed":("ogre_magi_bloodlust"==a.name()||"death_prophet_witchcraft"==a.name()||"kobold_taskmaster_speed_aura"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"movement_speed_pct":("razor_unstable_current"==a.name()||"phantom_lancer_doppelwalk"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"bonus_move_speed":("treant_natures_guise"==a.name()||"lone_druid_rabid"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"movespeed":"wisp_tether"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"movespeed_bonus":("kunkka_ghostship"==a.name()||"visage_grave_chill"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100)}}}return e}),t.getMovementSpeedPercentReduction=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.movementSpeedPctReduction&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.movementSpeedPctReduction()/100);else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))){for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"movespeed_slow":"crystal_maiden_freezing_field"!=a.name()||t.hasScepter()||(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"movespeed_slow_scepter":"crystal_maiden_freezing_field"==a.name()&&t.hasScepter()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"slow_pct":e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100;break;case"movespeed_slow":"crystal_maiden_freezing_field"!=a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"slow_movement_speed":case"slow_movement_speed_pct":case"frost_arrows_movement_speed":case"blast_slow":case"crush_extra_slow":case"overload_move_slow":case"enemy_movespeed_bonus_pct":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100;break;case"move_slow":"phantom_assassin_stifling_dagger"==a.name()?e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100:"tusk_frozen_sigil"==a.name()&&(e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"slow":"medusa_stone_gaze"==a.name()?e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100:e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100;break;case"bonus_movespeed":"broodmother_incapacitating_bite"==a.name()||"bounty_hunter_jinada"==a.name()||"winter_wyvern_arctic_burn"==a.name()||"winter_wyvern_splinter_blast"==a.name()?e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100:"spectre_spectral_dagger"==a.name()&&(e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"speed_bonus":"omniknight_degen_aura"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"movement_speed":"tidehunter_gush"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"bonus_movement_speed":("pugna_decrepify"==a.name()||"chen_penitence"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"movement_speed_pct":"ancient_apparition_ice_vortex"==a.name()||"phantom_lancer_spirit_lance"==a.name()||"faceless_void_time_walk"==a.name()?e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100:"skywrath_mage_concussive_shot"==a.name()&&(e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"slow_amount":"razor_unstable_current"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"movement_slow":"brewmaster_drunken_haze"==a.name()||"brewmaster_thunder_clap"==a.name()?e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100:("ursa_earthshock"==a.name()||"treant_leech_seed"==a.name())&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"movespeed":"skeleton_king_reincarnation"==a.name()&&(e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100);break;case"movespeed_bonus":"kunkka_torrent"==a.name()?e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100:"visage_grave_chill"==a.name()&&(e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100)}}"satyr_trickster_purge"==a.name()?e-=.8:"enraged_wildkin_tornado"==a.name()&&(e-=.15)}}return e}),t.getTurnRateReduction=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.turnRateReduction&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.turnRateReduction()/100);else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"slow":"medusa_stone_gaze"==a.name()&&(e-=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100)}}}return e}),t.getVisionRangeNight=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.visionnight&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(e+=a.visionnight());else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"night_vision_bonus":case"bonus_night_vision":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())}}}return e}),t.getVisionRangePctReduction=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(!(a.name()in t.abilityData)&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"blind_percentage":e+=t.getAbilityAttributeValue(t.abilities()[i].attributes(),s.name(),a.level())/100}}}return e}),t.setEvasion=a.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&"windrunner_windrun"==a.name())return 1}return e}),t.setMovementSpeed=a.computed(function(){for(var e=522,i=100,a=0,l=0;l<t.abilities().length;l++){var s=t.abilities()[l];if(s.level()>0&&(s.isActive()||-1!=s.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))){if("spirit_breaker_charge_of_darkness"==s.name())return t.getAbilityAttributeValue(s.attributes(),"movement_speed",s.level());if("dark_seer_surge"==s.name())return e;if("centaur_stampede"==s.name())return e;if("lycan_shapeshift"==s.name())return e;if("lion_voodoo"==s.name()||"shadow_shaman_voodoo"==s.name())return i}}return a}),t.getBashSource=function(e){for(var i={},a=0;a<t.abilities().length;a++){var l=t.abilities()[a];if(l.name()in t.abilityData)void 0!=l.bashBonusDamage&&l.level()>0&&(l.isActive()||-1!=l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&(void 0==i[l.name()]&&"faceless_void_time_lock"==l.name()&&(i[l.name()]={chance:l.bash()/100,damage:l.bashBonusDamage(),count:1,damageType:"magic",displayname:l.displayname()}),void 0==i[l.name()]&&"spirit_breaker_greater_bash"==l.name()&&(i[l.name()]={chance:l.bash()/100,damage:l.bashBonusDamage()/100,count:1,damageType:"magic",displayname:l.displayname()}));else if(l.level()>0&&(l.isActive()||-1!=l.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var s=0;s<t.abilities()[a].attributes().length;s++){var r=t.abilities()[a].attributes()[s];switch(r.name()){case"proc_chance":void 0==i[l.name()]&&"sniper_headshot"==l.name()&&(i[l.name()]={chance:t.getAbilityAttributeValue(l.attributes(),r.name(),l.level())/100,damage:t.getAbilityPropertyValue(l,"damage"),count:1,damageType:"physical",displayname:l.displayname()});break;case"chance":void 0==i[l.name()]&&"slardar_bash"==l.name()&&(i[l.name()]={chance:t.getAbilityAttributeValue(l.attributes(),r.name(),l.level())/100,damage:t.getAbilityAttributeValue(l.attributes(),"bonus_damage",l.level()),count:1,damageType:"physical",displayname:l.displayname()})}}}return i},t.getOrbSource=function(){for(var e={},i=0;i<t.abilities().length;i++){var a=t.abilities()[i];if(a.name()in t.abilityData)void 0!=a.bonusDamageOrb&&a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"))&&void 0==e[a.name()]&&"obsidian_destroyer_arcane_orb"==a.name()&&(e[a.name()]={damage:a.bonusDamageOrb(),damageType:"pure",displayname:a.displayname()});else if(a.level()>0&&(a.isActive()||-1!=a.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")))for(var l=0;l<t.abilities()[i].attributes().length;l++){var s=t.abilities()[i].attributes()[l];switch(s.name()){case"mana_per_hit":void 0==e[a.name()]&&"antimage_mana_break"==a.name()&&(e[a.name()]={damage:t.getAbilityAttributeValue(a.attributes(),s.name(),a.level())*t.getAbilityAttributeValue(a.attributes(),"damage_per_burn",a.level()),damageType:"physical",displayname:a.displayname()});break;case"damage_bonus":void 0==e[a.name()]&&"clinkz_searing_arrows"==a.name()&&(e[a.name()]={damage:t.getAbilityAttributeValue(a.attributes(),s.name(),a.level()),damageType:"physical",displayname:a.displayname()});case"intellect_damage_pct":void 0==e[a.name()]&&"silencer_glaives_of_wisdom"==a.name()&&(e[a.name()]={damage:t.getAbilityAttributeValue(a.attributes(),s.name(),a.level())/100*t.hero.totalInt(),damageType:"pure",displayname:a.displayname()})}}}return e},t.toggleAbility=function(e,i,a){t.abilities()[e()].behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")<0&&(t.abilities()[e()].isActive()?t.abilities()[e()].isActive(!1):t.abilities()[e()].isActive(!0),"lycan_shapeshift"==t.abilities()[e()].name()&&t.isShapeShiftActive(t.abilities()[e()].isActive()))}.bind(this),t.toggleAbilityDetail=function(e,i,a){t.abilities()[e()].isDetail()?t.abilities()[e()].isDetail(!1):t.abilities()[e()].isDetail(!0)}.bind(this),t.getAbilityTooltipData=function(e,i){return l.prototype.getAbilityTooltipData(e,i)},t.levelUpAbility=function(e,i,a,l){if(t.abilities()[e()].level()<l.getAbilityLevelMax(i)&&l.availableSkillPoints()>0){switch(t.abilities()[e()].abilitytype()){case"DOTA_ABILITY_TYPE_ULTIMATE":"invoker"==l.selectedHero().heroName?(0==t.abilities()[e()].level()&&parseInt(l.selectedHeroLevel())>=2||1==t.abilities()[e()].level()&&parseInt(l.selectedHeroLevel())>=7||2==t.abilities()[e()].level()&&parseInt(l.selectedHeroLevel())>=11||3==t.abilities()[e()].level()&&parseInt(l.selectedHeroLevel())>=17)&&(t.abilities()[e()].level(t.abilities()[e()].level()+1),l.skillPointHistory.push(e())):"meepo"==l.selectedHero().heroName?7*t.abilities()[e()].level()+3<=parseInt(l.selectedHeroLevel())&&(t.abilities()[e()].level(t.abilities()[e()].level()+1),l.skillPointHistory.push(e())):5*(t.abilities()[e()].level()+1)+1<=parseInt(l.selectedHeroLevel())&&(t.abilities()[e()].level(t.abilities()[e()].level()+1),l.skillPointHistory.push(e()));break;default:2*t.abilities()[e()].level()+1<=parseInt(l.selectedHeroLevel())&&(t.abilities()[e()].level(t.abilities()[e()].level()+1),l.skillPointHistory.push(e()))}switch(t.abilities()[e()].name()){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":t.abilities()[e()+1].level(t.abilities()[e()].level());break;case"morphling_morph_str":t.abilities()[e()-1].level(t.abilities()[e()].level());break;case"keeper_of_the_light_spirit_form":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()-2].level(t.abilities()[e()].level());case"nevermore_shadowraze1":t.abilities()[e()+1].level(t.abilities()[e()].level()),t.abilities()[e()+2].level(t.abilities()[e()].level());break;case"nevermore_shadowraze2":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()+1].level(t.abilities()[e()].level());break;case"nevermore_shadowraze3":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()-2].level(t.abilities()[e()].level());break;case"ember_spirit_fire_remnant":t.abilities()[e()-1].level(t.abilities()[e()].level());break;case"lone_druid_true_form":t.abilities()[e()-1].level(t.abilities()[e()].level())}}},t.levelDownAbility=function(e,i,a,l){if(t.abilities()[e()].level()>0)switch(t.abilities()[e()].level(t.abilities()[e()].level()-1),l.skillPointHistory.splice(l.skillPointHistory().lastIndexOf(e()),1),t.abilities()[e()].name()){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":t.abilities()[e()+1].level(t.abilities()[e()].level());break;case"morphling_morph_str":t.abilities()[e()-1].level(t.abilities()[e()].level());break;case"keeper_of_the_light_spirit_form":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()-2].level(t.abilities()[e()].level());case"nevermore_shadowraze1":t.abilities()[e()+1].level(t.abilities()[e()].level()),t.abilities()[e()+2].level(t.abilities()[e()].level());break;case"nevermore_shadowraze2":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()+1].level(t.abilities()[e()].level());break;case"nevermore_shadowraze3":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()-2].level(t.abilities()[e()].level());break;case"ember_spirit_fire_remnant":t.abilities()[e()-1].level(t.abilities()[e()].level());break;case"lone_druid_true_form":t.abilities()[e()-1].level(t.abilities()[e()].level())}},t.isQWER=function(e){return"Empty"!=e.displayname()&&(-1==e.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_HIDDEN")||-1!=e.name().indexOf("invoker_"))&&-1==e.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE")}}});
//# sourceMappingURL=herocalc_abilities.js.map