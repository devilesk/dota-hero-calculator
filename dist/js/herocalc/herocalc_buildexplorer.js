define(["require","exports","module","herocalc_knockout","./herocalc_core"],function(e,t,r){"use strict";var i=e("herocalc_knockout"),a=e("./herocalc_core").HEROCALCULATOR;a.prototype.GraphPropertyOption=function(e,t){this.id=e,this.label=t},a.prototype.BuildExplorerViewModel=function(e){var t=this;t.parent=e,t.itemBuild=i.observableArray([]),t.skillBuild=i.observableArray([]),t.graphDataItemRows=[];for(var r=0;25>r;r++)t.itemBuild.push(new a.prototype.BasicInventoryViewModel),t.itemBuild()[r].carryOver=i.observable(!0),t.skillBuild.push(i.observable(-1)),t.graphDataItemRows.push(i.observable(!1));return t.toggleItemBuildCarryOver=function(e){t.itemBuild()[e].carryOver(!t.itemBuild()[e].carryOver())},t.abilityMapData=[0,1,2,3,4],t.abilityMapHero=t.parent.selectedHero().heroName,t.abilityMap=i.computed(function(){if(t.abilityMapHero!=t.parent.selectedHero().heroName){t.abilityMapHero=t.parent.selectedHero().heroName;for(var e=t.parent.ability().abilities().map(function(e,r){return t.parent.ability().isQWER(e)?r:-1}).filter(function(e){return-1!=e}),r=0;25>r;r++){var i=t.skillBuild()[r]();if(-1!=i){var a=t.abilityMapData.indexOf(i),o=e[a];o!=i&&t.skillBuild()[r](o)}}t.abilityMapData=e}}),t.availableSkillBuildPoints=i.computed(function(){return t.skillBuild().reduce(function(e,t){return e+(-1==t())},0)}),t.getSkillBuildAbilityLevel=function(e){return t.skillBuild().reduce(function(t,r){return t+(r()==e)},0)},t.toggleAbilitySkillBuild=function(e,r,i,a){if(t.skillBuild()[e]()!=r){var o=t.parent.ability().abilities()[r],n=(o.abilitytype(),t.skillBuild().slice(0,e)),l=(t.skillBuild().reduce(function(e,t){return e+(t()==r)},0),n.reduce(function(e,t){return e+(t()==r)},0));if(t.IsValidAbilityLevel(o,t.parent.selectedHero().heroName,e+1,l)){t.skillBuild()[e](r);for(var p=e+1;25>p;p++)t.skillBuild()[p]()==r&&(l++,t.IsValidAbilityLevel(o,t.parent.selectedHero().heroName,p+1,l)||(t.skillBuild()[p](-1),l--))}else if(l>0&&t.IsValidAbilityLevel(o,t.parent.selectedHero().heroName,e+1,l-1))for(var p=n.length-1;p>=0;p--)if(n[p]()==r){t.skillBuild()[p](-1),t.skillBuild()[e](r);break}}else t.skillBuild()[e](-1)},t.IsValidAbilityLevel=function(e,t,r,i){var a=1,o=2,n=4;return"attribute_bonus"==e.name()?n=10:"DOTA_ABILITY_TYPE_ULTIMATE"==e.abilitytype()?"invoker"==t?(a=2,o=5):"meepo"==t?(a=3,o=7,n=3):(a=6,o=5,n=3):"invoker"==t&&(n=7),r>=a+o*i&&n>i},t.resetItemBuild=function(e){t.itemBuild()[e].removeAll()},t.resetAllItemBuilds=function(){for(var e=0;25>e;e++)t.itemBuild()[e].removeAll(),t.itemBuild()[e].carryOver(!0)},t.resetSkillBuild=function(){for(var e=0;25>e;e++)t.skillBuild()[e](-1)},t.graphData=i.observableArray([]),t.graphDataHeader=i.observable(t.parent.selectedHero().heroDisplayName),t.parent.selectedHero.subscribe(function(e){t.graphDataHeader(t.parent.selectedHero().heroDisplayName)}),t.graphDataDescription=i.observable(""),t.graphProperties=i.observableArray([new a.prototype.GraphPropertyOption("totalArmorPhysical","Armor"),new a.prototype.GraphPropertyOption("totalArmorPhysicalReduction","Physical Damage Reduction"),new a.prototype.GraphPropertyOption("totalMagicResistance","Magical Resistance"),new a.prototype.GraphPropertyOption("health","Health"),new a.prototype.GraphPropertyOption("healthregen","Health Regeneration"),new a.prototype.GraphPropertyOption("mana","Mana"),new a.prototype.GraphPropertyOption("manaregen","Mana Regeneration"),new a.prototype.GraphPropertyOption("ehpPhysical","EHP Physical"),new a.prototype.GraphPropertyOption("ehpMagical","EHP Magical"),new a.prototype.GraphPropertyOption("damage","Damage per attack"),new a.prototype.GraphPropertyOption("dps","Damage per second"),new a.prototype.GraphPropertyOption("attacksPerSecond","Attacks per second"),new a.prototype.GraphPropertyOption("attackTime","Time per attack")]),t.graph=function(){for(var e=[],r=t.parent.selectedHeroLevel(),a=t.parent.inventory.items(),o=t.parent.inventory.activeItems(),n=i.toJS(t.skillBuild),l=[],p=[],s=[],c=0;c<t.parent.ability().abilities().length;c++)e.push(t.parent.ability().abilities()[c].level());for(var c=1;26>c;c++){t.parent.selectedHeroLevel(c);for(var u=n.slice(0,c),d=0;d<t.parent.ability().abilities().length;d++){var h=t.parent.ability().abilities()[d],v=u.reduce(function(e,t){return e+(t==d)},0);h.level(v)}t.itemBuild()[c-1].carryOver()||(l=[],p=[]),l=l.concat(t.itemBuild()[c-1].items()),p=p.concat(t.itemBuild()[c-1].activeItems()),t.parent.inventory.items(l),t.parent.inventory.activeItems(p);for(var y={},d=0;d<t.graphProperties().length;d++){var m=t.graphProperties()[d];switch(m.id){case"dps":y[m.id]=t.parent.damageTotalInfo().dps.total.toFixed(2);break;case"damage":y[m.id]=t.parent.damageTotalInfo().total.toFixed(2);break;default:y[m.id]=t.parent[m.id]()}}y.items=l.map(function(e){return i.toJS(e)}),s.push(y),l>0&&t.graphDataItemRows[c-1](!0)}for(var b={header:t.graphDataHeader(),description:t.graphDataDescription(),items:t.parent.inventory.items().map(function(e){return i.toJS(e)}),skillBuild:i.toJS(t.skillBuild),data:s,abilityMap:t.abilityMapData.slice(0),cumulativeSkillBuild:[],visible:i.observable(!0)},c=0;25>c;c++){for(var g=[],f=b.skillBuild.slice(0,c+1),d=0;d<b.abilityMap.length;d++){var B=b.abilityMap[d];g.push(f.reduce(function(e,t){return e+(t==B)},0))}b.cumulativeSkillBuild.push(g)}t.graphData.push(b),t.parent.selectedHeroLevel(r);for(var c=0;c<t.parent.ability().abilities().length;c++)t.parent.ability().abilities()[c].level(e[c]);t.parent.inventory.items(a),t.parent.inventory.activeItems(o)},t.removeGraphDataSet=function(e){t.graphData.remove(e)},t.selectedGraphProperty=i.observable(t.graphProperties()[0].id),t.graphChartOptions=i.computed(function(){var e="dark"==a.prototype.theme()?"rgb(151, 154, 162)":"rgb(51, 51, 51)";return{responsive:!0,datasetStroke:!1,datasetStrokeWidth:-1,datasetFill:!1,pointHitDetectionRadius:10,scaleFontColor:e,scaleLineColor:e.replace("rgb","rgba").replace(")",", .1)"),scaleGridLineColor:e.replace("rgb","rgba").replace(")",", .1)")}}),t.graphChartData=i.computed(function(){for(var e={labels:[],datasets:[]},r=0;25>r;r++)e.labels.push((r+1).toString());for(var r=0;r<t.graphData().length;r++){var i=t.graphData()[r],a={label:i.header,fillColor:t.graphDistinctColor(t.graphData().length,r,.1),strokeColor:t.graphDistinctColor(t.graphData().length,r,1),pointColor:t.graphDistinctColor(t.graphData().length,r,1),pointStrokeColor:t.graphDistinctColor(t.graphData().length,r,1),pointHighlightFill:t.graphDistinctColor(t.graphData().length,r,.1),pointHighlightStroke:t.graphDistinctColor(t.graphData().length,r,.5),data:i.data.map(function(e){return e[t.selectedGraphProperty()]})};e.datasets.push(a)}return e}),t.graphDistinctColor=function(e,r,i){var i=i||1,a=t.hslToRgb(1/e*r%1,1,.5);return a.push(i),"rgba("+a.join()+")"},t.getDistinctColor=function(e,r,i){var i=i||1;return rgba=t.hslToRgb(1/e*r%1,1,.5),rgba.push(i),rgba},t.hslToRgb=function(e,t,r){var i,a,o;if(0==t)i=a=o=r;else{var n=function(e,t,r){return 0>r&&(r+=1),r>1&&(r-=1),1/6>r?e+6*(t-e)*r:.5>r?t:2/3>r?e+(t-e)*(2/3-r)*6:e},l=.5>r?r*(1+t):r+t-r*t,p=2*r-l;i=n(p,l,e+1/3),a=n(p,l,e),o=n(p,l,e-1/3)}return[Math.round(255*i),Math.round(255*a),Math.round(255*o)]},t.showGraphItemBuildRows=i.observable(!1),t.showGraphSkillBuildColumns=i.observable(!1),t.graphRowHasItems=function(e){return t.graphData().some(function(t){return t.visible()&&t.data[e].items.length>0})},t.selectInventory=function(e){t.parent.selectedInventory(t.parent.selectedInventory()==e?-1:e)},t.getSelectedInventory=i.pureComputed(function(){return-1==t.parent.selectedInventory()?t.parent.inventory:t.itemBuild()[t.parent.selectedInventory()]}),t.copyInventory=function(e){-1!=t.parent.selectedInventory()&&t.parent.selectedInventory()!=e&&(t.itemBuild()[t.parent.selectedInventory()].items(t.itemBuild()[t.parent.selectedInventory()].items().concat(t.itemBuild()[e].items())),t.itemBuild()[t.parent.selectedInventory()].activeItems(a.prototype.union(t.itemBuild()[t.parent.selectedInventory()].activeItems(),t.itemBuild()[e].activeItems())))},t.copyInventoryToClipBoard=function(e){-1==e?(a.prototype.inventoryClipBoard.items=t.parent.inventory.items.slice(0),a.prototype.inventoryClipBoard.activeItems=t.parent.inventory.activeItems.slice(0)):(a.prototype.inventoryClipBoard.items=t.itemBuild()[e].items.slice(0),a.prototype.inventoryClipBoard.activeItems=t.itemBuild()[e].activeItems.slice(0))},t.pasteInventoryFromClipBoard=function(e){a.prototype.inventoryClipBoard.items.length>0&&(-1==e?(t.parent.inventory.items(t.parent.inventory.items().concat(a.prototype.inventoryClipBoard.items)),t.parent.inventory.activeItems(a.prototype.union(t.parent.inventory.activeItems(),a.prototype.inventoryClipBoard.activeItems))):(t.itemBuild()[e].items(t.itemBuild()[e].items().concat(a.prototype.inventoryClipBoard.items)),t.itemBuild()[e].activeItems(a.prototype.union(t.itemBuild()[e].activeItems(),a.prototype.inventoryClipBoard.activeItems))))},t.loadGraphData=function(e){t.parent.sectionDisplay().skillbuild(!0);for(var r=0;r<e.length;r++)e[r].visible=i.observable(e[r].visible);t.graphData(e)},t.graphChartContext=i.observable(),t.exportImage=function(){var e=window.open();e.document.write('<img src="'+t.graphChartContext().canvas.toDataURL()+'"/>')},t}});
//# sourceMappingURL=herocalc_buildexplorer.js.map