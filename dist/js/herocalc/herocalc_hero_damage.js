define(["require","exports","module","herocalc_knockout","./herocalc_core"],function(e,a,t){"use strict";var r=e("herocalc_knockout"),n=e("./herocalc_core").HEROCALCULATOR;n.prototype.DamageTypeColor={physical:"#979aa2",pure:"goldenrod",magic:"#428bca","default":"#979aa2"},n.prototype.DamageDetailsRow=function(e,a,t,n){this.label=e,this.damage=a,this.damageReduced=t,this.visible=r.observable(n),this.enabled=r.observable(n)},n.prototype.HeroDamageMixin=function(e){e.critInfo=r.pureComputed(function(){function a(e,a){return e.multiplier<a.multiplier?1:e.multiplier>a.multiplier?-1:0}var t=e.inventory.getCritSource();$.extend(t,e.ability().getCritSource()),$.extend(t,e.buffs.getCritSource());var r=[];for(var n in t){var o=t[n];o.name=n,r.push(o)}r.sort(a);for(var c=[],d=0,u=0;u<r.length;u++){for(var i=1,s=0;u>s;s++)for(var m=0;m<r[s].count;m++)i*=1-r[s].chance;for(var g=1,m=0;m<r[u].count;m++)g*=1-r[u].chance;i*=1-g,d+=i,r[u].count>1?c.push({name:r[u].displayname+" x"+r[u].count,chance:r[u].chance,multiplier:r[u].multiplier,count:r[u].count,totalChance:i}):c.push({name:r[u].displayname,chance:r[u].chance,multiplier:r[u].multiplier,count:r[u].count,totalChance:i})}return{sources:c,total:d}}),e.cleaveInfo=r.pureComputed(function(){function a(e,a){return e.radius<a.radius?1:e.radius>a.radius?-1:0}var t=e.inventory.getCleaveSource();$.extend(t,e.ability().getCleaveSource()),$.extend(t,e.buffs.getCleaveSource());var r=[];for(var n in t){var o=t[n];o.name=n,r.push(o)}r.sort(a);for(var c={},d=0;d<r.length;d++){for(var u=0,i=0;i<r.length;i++)r[i].radius>=r[d].radius&&(u+=r[i].magnitude*r[i].count);c[r[d].radius]=u}var s=[];for(var n in c)s.push({radius:n,magnitude:c[n]});return s}),e.bashInfo=r.pureComputed(function(){var a=e.heroData().attacktype,t=e.inventory.getBashSource(a);$.extend(t,e.ability().getBashSource());var r=[];for(var n in t){var o=t[n];o.name=n,r.push(o)}for(var c=[],d=0,u=0;u<r.length;u++){for(var i=1,s=0;u>s;s++)for(var m=0;m<r[s].count;m++)i*=1-r[s].chance;for(var g=1,m=0;m<r[u].count;m++)g*=1-r[u].chance;if(i*=1-g,d+=i,"spirit_breaker_greater_bash"===r[u].name)var l=r[u].damage*e.totalMovementSpeed();else var l=r[u].damage;r[u].count>1?c.push({name:r[u].displayname,chance:r[u].chance,damage:l,count:r[u].count,damageType:r[u].damageType,totalChance:i}):c.push({name:r[u].displayname,chance:r[u].chance,damage:l,count:r[u].count,damageType:r[u].damageType,totalChance:i})}return{sources:c,total:d}}),e.orbProcInfo=r.pureComputed(function(){function a(e,a){return e.priority>a.priority?1:e.priority<a.priority?-1:e.damage<a.damage?1:e.damage>a.damage?-1:0}var t=(e.heroData().attacktype,e.inventory.getOrbProcSource()),r=[];for(var n in t){var o=t[n];o.name=n,r.push(o)}r.sort(a);for(var c=[],d=0,u=0;u<r.length;u++){for(var i=1,s=0;u>s;s++)for(var m=0;m<r[s].count;m++)i*=1-r[s].chance;for(var g=1,m=0;m<r[u].count;m++)g*=1-r[u].chance;i*=1-g,d+=i,r[u].count>1?c.push({name:r[u].displayname+" x"+r[u].count,chance:r[u].chance,damage:r[u].damage,count:r[u].count,damageType:r[u].damageType,totalChance:i}):c.push({name:r[u].displayname,chance:r[u].chance,damage:r[u].damage,count:r[u].count,damageType:r[u].damageType,totalChance:i})}return{sources:c,total:d}}),e.getReducedDamage=function(a,t){var r=a;switch(t){case"physical":r=a*(1-.06*e.enemy().totalArmorPhysical()/(1+.06*Math.abs(e.enemy().totalArmorPhysical())));break;case"magic":r=a*(1-e.enemy().totalMagicResistance()/100);break;case"pure":r=a;break;case"composite":r=a*(1-.06*e.enemy().totalArmorPhysical()/(1+.06*Math.abs(e.enemy().totalArmorPhysical()))),r*=1-e.enemy().totalMagicResistance()/100}return r*=e.ability().getDamageAmplification()*e.debuffs.getDamageAmplification(),r*=e.enemy().ability().getDamageReduction()*e.enemy().buffs.getDamageReduction()},e.damageTotalInfo=r.pureComputed(function(){var a=[e.ability().getBonusDamage().sources,e.buffs.getBonusDamage().sources],t=[e.ability().getBonusDamagePercent().sources,e.buffs.getBonusDamagePercent().sources],o=e.inventory.getBonusDamage().sources,c=e.buffs.itemBuffs.getBonusDamagePercent(e.inventory.getBonusDamagePercent()).sources,d=e.critInfo(),u=e.ability().getOrbSource(),i=e.inventory.getOrbSource(),s=e.orbProcInfo(),m=e.bashInfo(),g=[];if(g.push({name:"Base Attack",cooldown:1}),"weaver"===e.selectedHero().heroName){var l=e.ability().abilities().find(function(e){return"weaver_geminate_attack"===e.name()});if(l&&l.level()>0){var p=l.cooldown()[l.level()-1];g.push({name:l.displayname(),cooldown:1/p})}}var f=e.inventory.items().find(function(e){return"echo_sabre"===e.item&&e.enabled()});if(f&&"DOTA_UNIT_CAP_MELEE_ATTACK"===e.hero().attacktype()){var y=n.prototype.itemData.item_echo_sabre;g.push({name:y.displayname,cooldown:1/y.cooldown})}var h=g.map(function(g){var l=(e.baseDamage()[0]+e.baseDamage()[1])/2,p=0,f=0,y=0,h={damage:0,damageReduced:0,cooldown:6,active:!1},b=({damage:0,damageReduced:0,cooldown:n.prototype.itemData.item_echo_sabre.cooldown[0],active:!1},{pure:0,physical:0,magic:0}),v=[],R=[];v.push({name:"Base Damage",damage:l,damageType:"physical",damageReduced:e.getReducedDamage(l,"physical"),enabled:r.observable(!0)}),p+=l,f+=l,b.physical+=l;for(D in o){var T=o[D].damage*o[D].count*e.ability().getSelfBaseDamageReductionPct()*e.enemy().ability().getBaseDamageReductionPct()*e.debuffs.itemBuffs.getBaseDamageReductionPct();v.push({name:o[D].displayname+(o[D].count>1?" x"+o[D].count:""),damage:T,damageType:o[D].damageType,damageReduced:e.getReducedDamage(T,o[D].damageType),enabled:r.observable(!0)}),p+=T,f+=T,b[o[D].damageType]+=T}for(D in c){var T=l*c[D].damage;v.push({name:c[D].displayname,damage:T,damageType:c[D].damageType,damageReduced:e.getReducedDamage(T,c[D].damageType),enabled:r.observable(!0)}),p+=T,f+=T,b[c[D].damageType]+=T}for(var D=0;D<a.length;D++)for(P in a[D]){var T=a[D][P].damage;v.push({name:a[D][P].displayname,damage:T,damageType:a[D][P].damageType,damageReduced:e.getReducedDamage(T,a[D][P].damageType),enabled:r.observable(!0)}),p+=T,f+=T,b[a[D][P].damageType]+=T}for(var D=0;D<t.length;D++)for(P in t[D]){var T=l*t[D][P].damage;v.push({name:t[D][P].displayname,damage:T,damageType:t[D][P].damageType,damageReduced:e.getReducedDamage(T,t[D][P].damageType),enabled:r.observable(!0)}),p+=T,f+=T,b[t[D][P].damageType]+=T}if("DOTA_UNIT_CAP_RANGED_ATTACK"===e.hero().attacktype()){if("drow_ranger"===e.selectedHero().heroName)var k=e.ability().getBonusDamagePrecisionAura().sources,C=0;else var k=e.buffs.getBonusDamagePrecisionAura().sources,C=1;if(void 0!=k[C]){if("drow_ranger"===e.selectedHero().heroName)var T=k[C].damage*e.totalAgi();else var T=k[C].damage;v.push({name:k[C].displayname,damage:T,damageType:"physical",damageReduced:e.getReducedDamage(T,"physical"),enabled:r.observable(!0)}),p+=T,f+=T,b.physical+=T}}if("riki"===e.selectedHero().heroName)var k=e.ability().getBonusDamageBackstab().sources,C=0;else var k=e.buffs.getBonusDamageBackstab().sources,C=1;if(void 0!=k[C]){if("riki"===e.selectedHero().heroName)var T=k[C].damage*e.totalAgi();else var T=k[C].damage;v.push({name:k[C].displayname,damage:T,damageType:"physical",damageReduced:e.getReducedDamage(T,"physical"),enabled:r.observable(!0)}),p+=T,b.physical+=T}for(var D=0;D<m.sources.length;D++){var w=m.sources[D],T=m.sources[D].damage,A=e.attacksPerSecond();w.cooldown&&(A=Math.max(1/w.cooldown,A));for(var P=0;P<m.sources[D].count;P++)v.push({name:m.sources[D].name,damage:T,damageType:m.sources[D].damageType,damageReduced:e.getReducedDamage(T,m.sources[D].damageType),dps:T*A*m.sources[D].chance,dpsReduced:e.getReducedDamage(T,m.sources[D].damageType)*A*m.sources[D].chance,enabled:r.observable(!0)}),p+=T,b[m.sources[D].damageType]+=T}for(var D=0;D<s.sources.length;D++){var T=s.sources[D].damage*(1-Math.pow(1-s.sources[D].chance,s.sources[D].count));v.push({name:s.sources[D].name,damage:T,damageType:s.sources[D].damageType,damageReduced:e.getReducedDamage(T,s.sources[D].damageType),enabled:r.observable(!0)}),p+=T,b[s.sources[D].damageType]+=T}for(var _ in u){var T=u[_].damage*(1-s.total);v.push({name:u[_].displayname,damage:T,damageType:u[_].damageType,damageReduced:e.getReducedDamage(T,u[_].damageType),enabled:r.observable(!0)}),p+=T,b[u[_].damageType]+=T}if(0===Object.keys(u).length)for(var _ in i){var T=i[_].damage*(1-s.total);v.push({name:i[_].displayname,damage:T,damageType:i[_].damageType,damageReduced:e.getReducedDamage(T,i[_].damageType),enabled:r.observable(!0)}),p+=T,b[i[_].damageType]+=T}for(var D=0;D<d.sources.length;D++){var T=f*(d.sources[D].multiplier-1);R.push({name:d.sources[D].name+", "+d.sources[D].multiplier+"x, "+(100*d.sources[D].totalChance).toFixed(1)+"%",damage:T,damageType:"physical",damageReduced:e.getReducedDamage(T,"physical"),enabled:r.observable(!0),chance:d.sources[D].totalChance}),y+=T}var S=e.getReducedDamage(b.pure,"pure")+e.getReducedDamage(b.physical,"physical")+e.getReducedDamage(b.magic,"magic"),B=e.getReducedDamage(y,"physical"),x={base:p*e.attacksPerSecond(),crit:y*e.attacksPerSecond(),geminateAttack:h.active?h.damage/h.cooldown:0,reduced:{base:S*e.attacksPerSecond(),crit:B*e.attacksPerSecond(),geminateAttack:h.active?e.getReducedDamage(h.damage,"physical")/h.cooldown:0}};R.forEach(function(a){a.dps||(a.dps=a.damage*(a.cooldown||e.attacksPerSecond())*a.chance),a.dpsReduced||(a.dpsReduced=a.damageReduced*(a.cooldown||e.attacksPerSecond())*a.chance)}),v.forEach(function(a){a.dps||(a.dps=a.damage*(a.cooldown||e.attacksPerSecond())),a.dpsReduced||(a.dpsReduced=a.damageReduced*(a.cooldown||e.attacksPerSecond()))});var I=R.reduce(function(e,a){return e+a.chance},0),M=r.computed(function(){var e=R.find(function(e){return e.enabled()});return e?e.damage:0}),N=r.computed(function(){var e=R.find(function(e){return e.enabled()});return e?e.damageReduced:0}),O=r.computed(function(){return R.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.dps},0)}),E=r.computed(function(){return R.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.dpsReduced},0)}),H=r.computed(function(){return v.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.damage},0)+M()}),$=r.computed(function(){return v.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.damageReduced},0)+N()}),G=r.computed(function(){return(v.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.dps},0)+O())*g.cooldown}),L=r.computed(function(){return(v.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.dpsReduced},0)+E())*g.cooldown}),U=[M,N,O,E],K=[H,$,G,L];return{name:g.name+" Subtotal",cooldown:g.cooldown,enabled:r.observable(!0),visible:r.observable(!0),totalCritChance:I,totalCritRow:U,totalRow:K,sources:v,sourcesCrit:R,total:p,totalCrit:y,totalGeminateAttack:p+h.damage,totalGeminateAttackReduced:S+h.damageReduced,geminateAttack:h,totalCritReduced:B,totalReduced:S,sumTotal:p+y,sumTotalReduced:S+B,dps:{base:x.base,crit:x.base+x.crit,geminateAttack:x.base+x.geminateAttack,total:x.base+x.crit+x.geminateAttack,reduced:{base:x.reduced.base,crit:x.reduced.base+x.reduced.crit,geminateAttack:x.reduced.base+x.reduced.geminateAttack,total:x.reduced.base+x.reduced.crit+x.reduced.geminateAttack}}}}),b=r.computed(function(){return h.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.totalRow[0]()},0)}),v=r.computed(function(){return h.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.totalRow[1]()},0)}),R=r.computed(function(){return h.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.totalRow[2]()},0)}),T=r.computed(function(){return h.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.totalRow[3]()},0)});return{attacks:h,totalRow:[b,v,R,T]}}),e.getDamageTypeColor=function(e){return n.prototype.DamageTypeColor[e]||n.prototype.DamageTypeColor["default"]}}});
//# sourceMappingURL=herocalc_hero_damage.js.map