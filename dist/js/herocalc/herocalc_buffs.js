define(["require","exports","module","herocalc_knockout","./herocalc_core"],function(e,t,o){"use strict";var i=e("herocalc_knockout"),a=e("./herocalc_core").HEROCALCULATOR;a.prototype.BuffOption=function(e,t){this.buffName=t,void 0==a.prototype.heroData["npc_dota_hero_"+e]?(this.hero=e,this.abilityData=a.prototype.findWhere(a.prototype.unitData[e].abilities,{name:t}),this.buffDisplayName=a.prototype.unitData[e].displayname+" - "+this.abilityData.displayname):(this.hero="npc_dota_hero_"+e,this.abilityData=a.prototype.findWhere(a.prototype.heroData["npc_dota_hero_"+e].abilities,{name:t}),this.buffDisplayName=a.prototype.heroData["npc_dota_hero_"+e].displayname+" - "+this.abilityData.displayname,"sven_gods_strength"==t&&(this.buffDisplayName+=" (Aura for allies)"))},a.prototype.ItemBuffOption=function(e){this.buffName=e,void 0==a.prototype.heroData["npc_dota_hero_"+hero]?(this.hero=hero,this.abilityData=a.prototype.findWhere(a.prototype.unitData[hero].abilities,{name:e}),this.buffDisplayName=a.prototype.unitData[hero].displayname+" - "+this.abilityData.displayname):(this.hero="npc_dota_hero_"+hero,this.abilityData=a.prototype.findWhere(a.prototype.heroData["npc_dota_hero_"+hero].abilities,{name:e}),this.buffDisplayName=a.prototype.heroData["npc_dota_hero_"+hero].displayname+" - "+this.abilityData.displayname)},a.prototype.BuffViewModel=function(e){var t=new a.prototype.AbilityModel(i.observableArray([]));return t.availableBuffs=i.observableArray([new a.prototype.BuffOption("abaddon","abaddon_frostmourne"),new a.prototype.BuffOption("axe","axe_culling_blade"),new a.prototype.BuffOption("beastmaster","beastmaster_inner_beast"),new a.prototype.BuffOption("bloodseeker","bloodseeker_bloodrage"),new a.prototype.BuffOption("bounty_hunter","bounty_hunter_track"),new a.prototype.BuffOption("centaur","centaur_stampede"),new a.prototype.BuffOption("crystal_maiden","crystal_maiden_brilliance_aura"),new a.prototype.BuffOption("dark_seer","dark_seer_surge"),new a.prototype.BuffOption("dazzle","dazzle_weave"),new a.prototype.BuffOption("drow_ranger","drow_ranger_trueshot"),new a.prototype.BuffOption("invoker","invoker_alacrity"),new a.prototype.BuffOption("wisp","wisp_tether"),new a.prototype.BuffOption("wisp","wisp_overcharge"),new a.prototype.BuffOption("kunkka","kunkka_ghostship"),new a.prototype.BuffOption("lich","lich_frost_armor"),new a.prototype.BuffOption("life_stealer","life_stealer_open_wounds"),new a.prototype.BuffOption("luna","luna_lunar_blessing"),new a.prototype.BuffOption("lycan","lycan_howl"),new a.prototype.BuffOption("magnataur","magnataur_empower"),new a.prototype.BuffOption("mirana","mirana_leap"),new a.prototype.BuffOption("ogre_magi","ogre_magi_bloodlust"),new a.prototype.BuffOption("omniknight","omniknight_guardian_angel"),new a.prototype.BuffOption("rubick","rubick_null_field"),new a.prototype.BuffOption("skeleton_king","skeleton_king_vampiric_aura"),new a.prototype.BuffOption("spirit_breaker","spirit_breaker_empowering_haste"),new a.prototype.BuffOption("sven","sven_warcry"),new a.prototype.BuffOption("sven","sven_gods_strength"),new a.prototype.BuffOption("treant","treant_living_armor"),new a.prototype.BuffOption("troll_warlord","troll_warlord_battle_trance"),new a.prototype.BuffOption("vengefulspirit","vengefulspirit_command_aura"),new a.prototype.BuffOption("npc_dota_neutral_alpha_wolf","alpha_wolf_critical_strike"),new a.prototype.BuffOption("npc_dota_neutral_alpha_wolf","alpha_wolf_command_aura"),new a.prototype.BuffOption("npc_dota_neutral_polar_furbolg_ursa_warrior","centaur_khan_endurance_aura"),new a.prototype.BuffOption("npc_dota_neutral_giant_wolf","giant_wolf_critical_strike"),new a.prototype.BuffOption("npc_dota_neutral_kobold_taskmaster","kobold_taskmaster_speed_aura"),new a.prototype.BuffOption("npc_dota_neutral_ogre_magi","ogre_magi_frost_armor"),new a.prototype.BuffOption("npc_dota_neutral_satyr_hellcaller","satyr_hellcaller_unholy_aura"),new a.prototype.BuffOption("npc_dota_neutral_enraged_wildkin","enraged_wildkin_toughness_aura"),new a.prototype.BuffOption("npc_dota_necronomicon_archer_1","necronomicon_archer_aoe")]),t.availableDebuffs=i.observableArray([new a.prototype.BuffOption("abaddon","abaddon_frostmourne"),new a.prototype.BuffOption("alchemist","alchemist_acid_spray"),new a.prototype.BuffOption("ancient_apparition","ancient_apparition_ice_vortex"),new a.prototype.BuffOption("axe","axe_battle_hunger"),new a.prototype.BuffOption("bane","bane_enfeeble"),new a.prototype.BuffOption("batrider","batrider_sticky_napalm"),new a.prototype.BuffOption("beastmaster","beastmaster_primal_roar"),new a.prototype.BuffOption("bounty_hunter","bounty_hunter_jinada"),new a.prototype.BuffOption("brewmaster","brewmaster_thunder_clap"),new a.prototype.BuffOption("brewmaster","brewmaster_drunken_haze"),new a.prototype.BuffOption("bristleback","bristleback_viscous_nasal_goo"),new a.prototype.BuffOption("broodmother","broodmother_incapacitating_bite"),new a.prototype.BuffOption("centaur","centaur_stampede"),new a.prototype.BuffOption("chen","chen_penitence"),new a.prototype.BuffOption("crystal_maiden","crystal_maiden_crystal_nova"),new a.prototype.BuffOption("crystal_maiden","crystal_maiden_freezing_field"),new a.prototype.BuffOption("dazzle","dazzle_weave"),new a.prototype.BuffOption("drow_ranger","drow_ranger_frost_arrows"),new a.prototype.BuffOption("earth_spirit","earth_spirit_rolling_boulder"),new a.prototype.BuffOption("elder_titan","elder_titan_natural_order"),new a.prototype.BuffOption("elder_titan","elder_titan_earth_splitter"),new a.prototype.BuffOption("enchantress","enchantress_untouchable"),new a.prototype.BuffOption("enchantress","enchantress_enchant"),new a.prototype.BuffOption("faceless_void","faceless_void_time_walk"),new a.prototype.BuffOption("huskar","huskar_life_break"),new a.prototype.BuffOption("invoker","invoker_ghost_walk"),new a.prototype.BuffOption("invoker","invoker_ice_wall"),new a.prototype.BuffOption("wisp","wisp_tether"),new a.prototype.BuffOption("jakiro","jakiro_dual_breath"),new a.prototype.BuffOption("jakiro","jakiro_liquid_fire"),new a.prototype.BuffOption("keeper_of_the_light","keeper_of_the_light_blinding_light"),new a.prototype.BuffOption("kunkka","kunkka_torrent"),new a.prototype.BuffOption("lich","lich_frost_nova"),new a.prototype.BuffOption("lich","lich_frost_armor"),new a.prototype.BuffOption("lich","lich_chain_frost"),new a.prototype.BuffOption("life_stealer","life_stealer_open_wounds"),new a.prototype.BuffOption("lion","lion_voodoo"),new a.prototype.BuffOption("magnataur","magnataur_skewer"),new a.prototype.BuffOption("medusa","medusa_stone_gaze"),new a.prototype.BuffOption("meepo","meepo_geostrike"),new a.prototype.BuffOption("naga_siren","naga_siren_rip_tide"),new a.prototype.BuffOption("night_stalker","night_stalker_void"),new a.prototype.BuffOption("night_stalker","night_stalker_crippling_fear"),new a.prototype.BuffOption("night_stalker","night_stalker_darkness"),new a.prototype.BuffOption("ogre_magi","ogre_magi_ignite"),new a.prototype.BuffOption("omniknight","omniknight_degen_aura"),new a.prototype.BuffOption("phantom_assassin","phantom_assassin_stifling_dagger"),new a.prototype.BuffOption("phantom_lancer","phantom_lancer_spirit_lance"),new a.prototype.BuffOption("pudge","pudge_rot"),new a.prototype.BuffOption("pugna","pugna_decrepify"),new a.prototype.BuffOption("queenofpain","queenofpain_shadow_strike"),new a.prototype.BuffOption("riki","riki_smoke_screen"),new a.prototype.BuffOption("rubick","rubick_fade_bolt"),new a.prototype.BuffOption("sand_king","sandking_epicenter"),new a.prototype.BuffOption("nevermore","nevermore_dark_lord"),new a.prototype.BuffOption("shadow_shaman","shadow_shaman_voodoo"),new a.prototype.BuffOption("skeleton_king","skeleton_king_hellfire_blast"),new a.prototype.BuffOption("skeleton_king","skeleton_king_reincarnation"),new a.prototype.BuffOption("skywrath_mage","skywrath_mage_concussive_shot"),new a.prototype.BuffOption("skywrath_mage","skywrath_mage_ancient_seal"),new a.prototype.BuffOption("slardar","slardar_slithereen_crush"),new a.prototype.BuffOption("slardar","slardar_amplify_damage"),new a.prototype.BuffOption("slark","slark_essence_shift"),new a.prototype.BuffOption("sniper","sniper_shrapnel"),new a.prototype.BuffOption("spectre","spectre_spectral_dagger"),new a.prototype.BuffOption("storm_spirit","storm_spirit_overload"),new a.prototype.BuffOption("templar_assassin","templar_assassin_meld"),new a.prototype.BuffOption("tidehunter","tidehunter_gush"),new a.prototype.BuffOption("tinker","tinker_laser"),new a.prototype.BuffOption("treant","treant_leech_seed"),new a.prototype.BuffOption("tusk","tusk_frozen_sigil"),new a.prototype.BuffOption("undying","undying_flesh_golem"),new a.prototype.BuffOption("ursa","ursa_earthshock"),new a.prototype.BuffOption("vengefulspirit","vengefulspirit_wave_of_terror"),new a.prototype.BuffOption("vengefulspirit","vengefulspirit_command_aura"),new a.prototype.BuffOption("venomancer","venomancer_venomous_gale"),new a.prototype.BuffOption("venomancer","venomancer_poison_sting"),new a.prototype.BuffOption("viper","viper_poison_attack"),new a.prototype.BuffOption("viper","viper_corrosive_skin"),new a.prototype.BuffOption("viper","viper_viper_strike"),new a.prototype.BuffOption("visage","visage_grave_chill"),new a.prototype.BuffOption("warlock","warlock_upheaval"),new a.prototype.BuffOption("weaver","weaver_the_swarm"),new a.prototype.BuffOption("windrunner","windrunner_windrun"),new a.prototype.BuffOption("winter_wyvern","winter_wyvern_arctic_burn"),new a.prototype.BuffOption("winter_wyvern","winter_wyvern_splinter_blast"),new a.prototype.BuffOption("npc_dota_neutral_ghost","ghost_frost_attack"),new a.prototype.BuffOption("npc_dota_neutral_polar_furbolg_ursa_warrior","polar_furbolg_ursa_warrior_thunder_clap"),new a.prototype.BuffOption("npc_dota_neutral_ogre_magi","ogre_magi_frost_armor"),new a.prototype.BuffOption("npc_dota_neutral_satyr_trickster","satyr_trickster_purge"),new a.prototype.BuffOption("npc_dota_neutral_enraged_wildkin","enraged_wildkin_tornado")]),t.selectedBuff=i.observable(t.availableBuffs()[0]),t.buffs=i.observableArray([]),t.itemBuffs=new a.prototype.InventoryViewModel,t.addBuff=function(e,o){if(void 0==a.prototype.findWhere(t.buffs(),{name:t.selectedBuff().buffName})){var r=i.mapping.fromJS(t.selectedBuff().abilityData);switch(r.isActive=i.observable(!1),r.isDetail=i.observable(!1),r.baseDamage=i.observable(0),r.bash=i.observable(0),r.bashBonusDamage=i.observable(0),r.bonusDamage=i.observable(0),r.bonusDamageOrb=i.observable(0),r.bonusDamagePct=i.observable(0),r.bonusDamagePrecisionAura=i.observable(0),r.bonusDamageReduction=i.observable(0),r.bonusHealth=i.observable(0),r.bonusStrength=i.observable(0),r.bonusStrength2=i.observable(0),r.bonusAgility=i.observable(0),r.bonusAgility2=i.observable(0),r.bonusInt=i.observable(0),r.bonusAllStatsReduction=i.observable(0),r.damageAmplification=i.observable(0),r.damageReduction=i.observable(0),r.evasion=i.observable(0),r.magicResist=i.observable(0),r.manaregen=i.observable(0),r.manaregenreduction=i.observable(0),r.missChance=i.observable(0),r.movementSpeedFlat=i.observable(0),r.movementSpeedPct=i.observable(0),r.movementSpeedPctReduction=i.observable(0),r.turnRateReduction=i.observable(0),r.attackrange=i.observable(0),r.attackspeed=i.observable(0),r.attackspeedreduction=i.observable(0),r.armor=i.observable(0),r.armorReduction=i.observable(0),r.healthregen=i.observable(0),r.lifesteal=i.observable(0),r.visionnight=i.observable(0),r.visionday=i.observable(0),r.name()){case"invoker_cold_snap":case"invoker_ghost_walk":case"invoker_tornado":case"invoker_emp":case"invoker_alacrity":case"invoker_chaos_meteor":case"invoker_sun_strike":case"invoker_forge_spirit":case"invoker_ice_wall":case"invoker_deafening_blast":r.level(1)}t.abilities.push(r),t.buffs.push({name:t.selectedBuff().buffName,hero:t.selectedBuff().hero,data:r})}},t.removeBuff=function(e,o,i){if(void 0!=a.prototype.findWhere(t.buffs(),{name:i})){if(t.buffs.remove(a.prototype.findWhere(t.buffs(),{name:i})),void 0!=t.abilityControlData[i]){for(var r=0;r<t.abilityControlData[i].data.length;r++)void 0!=t.abilityControlData[i].data[r].controlVal.dispose&&t.abilityControlData[i].data[r].controlVal.dispose(),void 0!=t.abilityControlData[i].data[r].clean&&t.abilityControlData[i].data[r].clean.dispose();t.abilityControlData[i]=void 0}for(var r=0;r<t.abilities().length;r++)if(t.abilities()[r].name()==i){t.abilities()[r].level(0),t.abilities.remove(t.abilities()[r]);break}}},t.toggleBuff=function(e,o,i){t.buffs()[e()].data.behavior().indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")<0&&(t.buffs()[e()].data.isActive()?(t.buffs()[e()].data.isActive(!1),t.abilities()[e()].isActive(!1)):(t.buffs()[e()].data.isActive(!0),t.abilities()[e()].isActive(!0)))}.bind(this),t.toggleBuffDetail=function(e,o,i){t.buffs()[e()].data.isDetail()?t.buffs()[e()].data.isDetail(!1):t.buffs()[e()].data.isDetail(!0)}.bind(this),t.levelUpAbility=function(e,o,i,a){if(t.abilities()[e()].level()<a.getAbilityLevelMax(o)){switch(t.abilities()[e()].abilitytype()){case"DOTA_ABILITY_TYPE_ULTIMATE":t.abilities()[e()].level(t.abilities()[e()].level()+1);break;default:t.abilities()[e()].level(t.abilities()[e()].level()+1)}switch(t.abilities()[e()].name()){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":t.abilities()[e()+1].level(t.abilities()[e()].level());break;case"morphling_morph_str":t.abilities()[e()-1].level(t.abilities()[e()].level());break;case"keeper_of_the_light_spirit_form":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()-2].level(t.abilities()[e()].level());case"nevermore_shadowraze1":t.abilities()[e()+1].level(t.abilities()[e()].level()),t.abilities()[e()+2].level(t.abilities()[e()].level());break;case"nevermore_shadowraze2":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()+1].level(t.abilities()[e()].level());break;case"nevermore_shadowraze3":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()-2].level(t.abilities()[e()].level())}}},t.levelDownAbility=function(e,o,i,a){if(t.abilities()[e()].level()>0)switch(t.abilities()[e()].level(t.abilities()[e()].level()-1),t.abilities()[e()].name()){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":t.abilities()[e()+1].level(t.abilities()[e()].level());break;case"morphling_morph_str":t.abilities()[e()-1].level(t.abilities()[e()].level());break;case"keeper_of_the_light_spirit_form":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()-2].level(t.abilities()[e()].level());case"nevermore_shadowraze1":t.abilities()[e()+1].level(t.abilities()[e()].level()),t.abilities()[e()+2].level(t.abilities()[e()].level());break;case"nevermore_shadowraze2":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()+1].level(t.abilities()[e()].level());break;case"nevermore_shadowraze3":t.abilities()[e()-1].level(t.abilities()[e()].level()),t.abilities()[e()-2].level(t.abilities()[e()].level());break;case"ember_spirit_fire_remnant":t.abilities()[e()-1].level(t.abilities()[e()].level());break;case"lone_druid_true_form":t.abilities()[e()-1].level(t.abilities()[e()].level())}},t}});